{"version":3,"file":"openplayer.js","sources":["../src/utils/constants.ts","../src/utils/general.ts","../src/controls/captions.ts","../src/controls/fullscreen.ts","../src/utils/media.ts","../src/controls/levels.ts","../src/controls/play.ts","../src/utils/time.ts","../src/controls/progress.ts","../src/controls/settings.ts","../src/controls/time.ts","../src/controls/volume.ts","../src/controls.ts","../src/media/native.ts","../src/media/dash.ts","../src/media/flv.ts","../src/media/hls.ts","../src/media/html5.ts","../src/media.ts","../src/media/ads.ts","../src/player.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\ndeclare global {\n    interface Window {\n        MSStream: any;\n        WebKitMediaSource: any;\n        WebKitSourceBuffer: any;\n    }\n}\n\nexport const NAV: Navigator | null = typeof window !== 'undefined' ? window.navigator : null;\n\nexport const UA: string | null = NAV ? NAV.userAgent.toLowerCase() : null;\n\nexport const IS_IPAD = UA ? /ipad/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPHONE = UA ? /iphone/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPOD = UA ? /ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IOS = UA ? /ipad|iphone|ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_ANDROID = UA ? /android/i.test(UA) : false;\n\nexport const IS_EDGE = NAV ? 'msLaunchUri' in NAV && !('documentMode' in document) : false;\n\nexport const IS_CHROME = UA ? /chrome/i.test(UA) : false;\n\nexport const IS_FIREFOX = UA ? /firefox/i.test(UA) : false;\n\nexport const IS_SAFARI = UA ? /safari/i.test(UA) && !IS_CHROME : false;\n\nexport const IS_STOCK_ANDROID = UA ? /^mozilla\\/\\d+\\.\\d+\\s\\(linux;\\su;/i.test(UA) : false;\n\nexport const HAS_MSE = typeof window !== 'undefined' ? 'MediaSource' in window : false;\n\n// @see https://github.com/video-dev/hls.js/blob/master/src/is-supported.js\nexport const SUPPORTS_HLS = (): boolean => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    const mediaSource = window.MediaSource || window.WebKitMediaSource;\n    const sourceBuffer = window.SourceBuffer || window.WebKitSourceBuffer;\n    const isTypeSupported =\n        mediaSource &&\n        typeof mediaSource.isTypeSupported === 'function' &&\n        mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n    const sourceBufferValidAPI =\n        !sourceBuffer ||\n        (sourceBuffer.prototype &&\n            typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n            typeof sourceBuffer.prototype.remove === 'function');\n\n    // Safari is still an exception since it has built-in HLS support; currently HLS.js\n    // is still in beta to support Safari\n    return !!isTypeSupported && !!sourceBufferValidAPI && !IS_SAFARI;\n};\n\nexport const DVR_THRESHOLD = 120;\n\nexport const EVENT_OPTIONS = { passive: false };\n","export function getAbsoluteUrl(url: string): string {\n    const a: HTMLAnchorElement = document.createElement('a');\n    a.href = url;\n    return a.href;\n}\n\nexport function isVideo(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'video';\n}\n\nexport function isAudio(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'audio';\n}\n\nexport function loadScript(url: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.onload = (): void => {\n            script.remove();\n            resolve();\n        };\n        script.onerror = (): void => {\n            script.remove();\n            reject(new Error(`${url} could not be loaded`));\n        };\n        if (document.head) {\n            document.head.appendChild(script);\n        }\n    });\n}\n\nexport function offset(el: HTMLElement): { left: number; top: number } {\n    const rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft),\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop),\n    };\n}\n\nexport function sanitize(html: string, plainText = true): string {\n    const parser = new DOMParser();\n    const content = parser.parseFromString(html, 'text/html');\n    const formattedContent = content.body || document.createElement('body');\n\n    const scripts = formattedContent.querySelectorAll('script');\n    for (let i = 0, total = scripts.length; i < total; i++) {\n        scripts[i].remove();\n    }\n\n    const clean = (element: Element): void => {\n        const nodes = element.children;\n        for (let i = 0, total = nodes.length; i < total; i++) {\n            const node = nodes[i];\n            const { attributes } = node;\n            for (let j = 0, t = attributes.length; j < t; j++) {\n                const { name, value } = attributes[j];\n                const val = value.replace(/\\s+/g, '').toLowerCase();\n                if (['src', 'href', 'xlink:href'].includes(name)) {\n                    // eslint-disable-next-line no-script-url\n                    if (val.includes('javascript:') || val.includes('data:')) {\n                        node.removeAttribute(name);\n                    }\n                }\n                if (name.startsWith('on')) {\n                    node.removeAttribute(name);\n                }\n            }\n            clean(node);\n        }\n    };\n\n    clean(formattedContent);\n    return plainText ? (formattedContent.textContent || '').replace(/\\s{2,}/g, '') : formattedContent.innerHTML;\n}\n\nexport function isXml(input: string): boolean {\n    let parsedXml;\n\n    if (typeof DOMParser !== 'undefined') {\n        parsedXml = (text: string): Document => new DOMParser().parseFromString(text, 'text/xml');\n    } else {\n        return false;\n    }\n\n    try {\n        const response = parsedXml(input);\n        if (response.getElementsByTagName('parsererror').length > 0) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport function isJson(item: unknown): boolean {\n    item = typeof item !== 'string' ? JSON.stringify(item) : item;\n    try {\n        item = JSON.parse(item as string);\n    } catch (e) {\n        return false;\n    }\n\n    if (typeof item === 'object' && item !== null) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function addEvent(event: string, details?: CustomEventInit): CustomEvent {\n    let detail = {};\n    if (details && details.detail) {\n        detail = { detail: details.detail };\n    }\n    return new CustomEvent(event, detail);\n}\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Captions implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #captions: HTMLDivElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #mediaTrackList: TextTrack[];\n\n    #hasTracks: boolean;\n\n    #currentTrack?: TextTrack;\n\n    #default = 'off';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._formatMenuItems = this._formatMenuItems.bind(this);\n        this._setDefaultTrack = this._setDefaultTrack.bind(this);\n        this._showCaptions = this._showCaptions.bind(this);\n        this._hideCaptions = this._hideCaptions.bind(this);\n    }\n\n    custom?: boolean | undefined;\n\n    create(): void {\n        const { textTracks } = this.#player.getElement();\n        const { labels, detachMenus } = this.#player.getOptions();\n\n        this.#mediaTrackList = Object.keys(textTracks)\n            .map((k) => textTracks[Number(k)])\n            .filter((el) => ['subtitles', 'captions'].includes(el.kind) && el.language);\n\n        this.#hasTracks = !!this.#mediaTrackList.length;\n\n        if (!this.#hasTracks) {\n            return;\n        }\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__captions op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.toggleCaptions || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.toggleCaptions || '');\n        this.#button.setAttribute('data-active-captions', 'off');\n\n        // Build container to display captions to mitigate cross browser inconsistencies\n        this.#captions = document.createElement('div');\n        this.#captions.className = 'op-captions';\n        const target = this.#player.getContainer();\n        target.insertBefore(this.#captions, target.firstChild);\n\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-captions__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            this.#menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-captions\">\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\" aria-checked=\"${\n                    this.#default === 'off' ? 'true' : 'false'\n                }\">\n                    <div class=\"op-settings__submenu-label op-subtitles__option\" data-value=\"captions-off\">${\n                        labels?.off\n                    }</div>\n                </div>\n            </div>`;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.append(this.#button, this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).append(itemContainer);\n\n            for (const track of this.#mediaTrackList) {\n                const item = document.createElement('div');\n                const label = labels?.lang?.[track.language] || null;\n                item.className = 'op-settings__submenu-item';\n                item.tabIndex = 0;\n                item.setAttribute('role', 'menuitemradio');\n                item.setAttribute('aria-checked', this.#default === track.language ? 'true' : 'false');\n                item.innerHTML = `<div class=\"op-settings__submenu-label op-subtitles__option\"\n                    data-value=\"captions-${track.language}\">\n                    ${label || track.label}\n                </div>`;\n                this.#menu.append(item);\n            }\n        } else {\n            this.#player.getControls().getLayer(this.#controlLayer).append(this.#button);\n        }\n\n        // Show/hide captions\n        this.#events.button.click = (e: Event): void => {\n            const button = e.target as HTMLDivElement;\n            if (detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (const menuItem of Array.from(menus)) {\n                    if (menuItem !== this.#menu) {\n                        menuItem.setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            } else {\n                button.setAttribute('aria-pressed', 'true');\n                if (button.classList.contains('op-controls__captions--on')) {\n                    button.classList.remove('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', 'off');\n                    this._hideCaptions();\n                } else {\n                    button.classList.add('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', this.#currentTrack?.language || 'off');\n                    this._showCaptions();\n                }\n\n                for (const track of this.#mediaTrackList) {\n                    track.mode = button.getAttribute('data-active-captions') === track.language ? 'showing' : 'hidden';\n                }\n            }\n        };\n\n        this.#events.button.mouseover = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    if (menus[i] !== this.#menu) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n            }\n        };\n        this.#events.button.mouseout = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            }\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-subtitles__option')) {\n                const language = option.getAttribute('data-value')!.replace('captions-', '');\n\n                this._hideCaptions();\n\n                if (language === 'off') {\n                    this.#currentTrack = undefined;\n                }\n\n                for (const track of this.#mediaTrackList) {\n                    track.mode = track.language === language ? 'showing' : 'hidden';\n                    if (track.language === language) {\n                        this.#currentTrack = track;\n                        this._showCaptions();\n                    }\n                }\n\n                if (detachMenus) {\n                    if (this.#button.classList.contains('op-controls__captions--on')) {\n                        this.#button.classList.remove('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', 'off');\n                    } else {\n                        this.#button.classList.add('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', language);\n                    }\n\n                    const captions = this.#menu.querySelectorAll('.op-settings__submenu-item');\n                    for (const caption of Array.from(captions)) {\n                        caption.setAttribute('aria-checked', 'false');\n                    }\n                    option.parentElement!.setAttribute('aria-checked', 'true');\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#button.setAttribute('data-active-captions', language);\n                }\n                const event = addEvent('captionschanged');\n                this.#player.getElement().dispatchEvent(event);\n            }\n        };\n\n        this.#events.global.cuechange = (e: Event): void => {\n            this._hideCaptions();\n            const t = e.target as TextTrack;\n            if (t.mode !== 'showing' || this.#button.getAttribute('data-active-captions') === 'off') {\n                return;\n            }\n\n            if (t.activeCues && t.activeCues?.length > 0) {\n                this._showCaptions();\n            } else {\n                while (this.#captions.lastChild) {\n                    this.#captions.removeChild(this.#captions.lastChild);\n                }\n            }\n        };\n\n        if (detachMenus) {\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n\n        for (const track of this.#mediaTrackList) {\n            track.mode = track.mode !== 'showing' ? 'hidden' : track.mode;\n            track.addEventListener('cuechange', this.#events.global.cuechange, EVENT_OPTIONS);\n        }\n\n        const targetTrack = this.#player\n            .getElement()\n            .querySelector('track:is([kind=\"subtitles\"],[kind=\"captions\"])[default]') as HTMLTrackElement;\n        if (targetTrack) {\n            const matchTrack = this.#mediaTrackList.find((el) => el.language === targetTrack.srclang);\n            if (matchTrack) {\n                this._setDefaultTrack(matchTrack);\n            }\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n\n        if (!this.#hasTracks) {\n            return;\n        }\n\n        for (const track of this.#mediaTrackList) {\n            track.removeEventListener('cuechange', this.#events.global.cuechange);\n        }\n\n        document.removeEventListener('click', this.#events.global.click);\n        this.#button.removeEventListener('click', this.#events.button.click);\n        if (detachMenus) {\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { detachMenus, labels } = this.#player.getOptions();\n        if (detachMenus || this.#mediaTrackList.length <= 1) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n\n        // Avoid implementing submenu for captions if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-subtitles__option',\n                  default: this.#default || 'off',\n                  key: 'captions',\n                  name: labels?.captions || '',\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (this.#mediaTrackList.length <= 1 && !detachMenus) {\n            return [];\n        }\n\n        let items = [{ key: 'off', label: labels?.off || '' }];\n        for (const track of this.#mediaTrackList) {\n            const label = labels?.lang ? labels.lang[track.language] : null;\n            // Override language item if duplicated when passing list of items\n            items = items.filter((el) => el.key !== track.language);\n            items.push({ key: track.language, label: label || track.label });\n        }\n\n        return items;\n    }\n\n    private _setDefaultTrack(track: TextTrack): void {\n        track.mode = 'showing';\n        this.#default = track.language;\n        this.#button.setAttribute('data-active-captions', this.#default);\n        this.#button.classList.add('op-controls__captions--on');\n        this.#captions.classList.add('op-captions--on');\n        this.#currentTrack = track;\n\n        const options = document.querySelectorAll('.op-settings__submenu-item') || [];\n        for (const option of Array.from(options)) {\n            option.setAttribute('aria-checked', 'false');\n        }\n\n        document\n            .querySelector(`.op-subtitles__option[data-value=\"captions-${track.language}\"]`)\n            ?.parentElement?.setAttribute('aria-checked', 'true');\n    }\n\n    private _showCaptions() {\n        for (const cue of Array.from(this.#currentTrack?.activeCues || [])) {\n            const content = (cue as VTTCue)?.text || '';\n            if (content && this.#captions) {\n                const caption = document.createElement('span');\n                caption.innerHTML = content;\n                this.#captions.prepend(caption);\n                this.#captions.classList.add('op-captions--on');\n            } else {\n                this._hideCaptions();\n            }\n        }\n    }\n\n    private _hideCaptions() {\n        while (this.#captions?.lastChild) {\n            this.#captions.removeChild(this.#captions.lastChild);\n        }\n    }\n}\n\nexport default Captions;\n","import { FullscreenDocument, FullscreenElement, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IPHONE } from '../utils/constants';\n\nclass Fullscreen implements PlayerComponent {\n    fullScreenEnabled: boolean;\n\n    #player: Player;\n\n    #isFullscreen: boolean;\n\n    #button: HTMLButtonElement;\n\n    #fullscreenEvents: string[] = [];\n\n    #fullscreenWidth = 0;\n\n    #fullscreenHeight = 0;\n\n    #clickEvent: () => void;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this.#isFullscreen = document.body.classList.contains('op-fullscreen__on');\n\n        const target = document as FullscreenDocument;\n\n        // Check if fullscreen is supported\n        this.fullScreenEnabled = !!(\n            target.fullscreenEnabled ||\n            target.mozFullScreenEnabled ||\n            target.msFullscreenEnabled ||\n            target.webkitSupportsFullscreen ||\n            target.webkitFullscreenEnabled ||\n            (document.createElement('video') as FullscreenElement).webkitRequestFullScreen\n        );\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n        this._resize = this._resize.bind(this);\n        this._fullscreenChange = this._fullscreenChange.bind(this);\n        this._setFullscreen = this._setFullscreen.bind(this);\n        this._unsetFullscreen = this._unsetFullscreen.bind(this);\n\n        this.#fullscreenEvents = [\n            'fullscreenchange',\n            'mozfullscreenchange',\n            'webkitfullscreenchange',\n            'msfullscreenchange',\n        ];\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.addEventListener(event, this._fullscreenChange, EVENT_OPTIONS);\n        });\n        this._setFullscreenData(false);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        // Since iPhone still doesn't accept the regular Fullscreen API, use the following events\n        if (IS_IPHONE) {\n            this.#player.getElement().addEventListener('webkitbeginfullscreen', this._setFullscreen, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('webkitendfullscreen', this._unsetFullscreen, EVENT_OPTIONS);\n        }\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__fullscreen op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.fullscreen || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.fullscreen || '');\n\n        this.#clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            this.toggleFullscreen();\n        };\n\n        this.#clickEvent = this.#clickEvent.bind(this);\n\n        this.#button.addEventListener('click', this.#clickEvent, EVENT_OPTIONS);\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n    }\n\n    destroy(): void {\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.removeEventListener(event, this._fullscreenChange);\n        });\n        if (IS_IPHONE) {\n            this.#player.getElement().removeEventListener('webkitbeginfullscreen', this._setFullscreen);\n            this.#player.getElement().removeEventListener('webkitendfullscreen', this._unsetFullscreen);\n        }\n        this.#button.removeEventListener('click', this.#clickEvent);\n        this.#button.remove();\n    }\n\n    toggleFullscreen(): void {\n        // If browser does not support native Fullscreen API, player will adjust the video\n        // and its parent container's dimensions via width and height styles.\n        if (this.#isFullscreen) {\n            const target = document as FullscreenDocument;\n            if (target.exitFullscreen) {\n                target.exitFullscreen();\n            } else if (target.mozCancelFullScreen) {\n                target.mozCancelFullScreen();\n            } else if (target.webkitCancelFullScreen) {\n                target.webkitCancelFullScreen();\n            } else if (target.msExitFullscreen) {\n                target.msExitFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n            document.body.classList.remove('op-fullscreen__on');\n        } else {\n            const video = this.#player.getElement() as any;\n            this.#fullscreenWidth = window.screen.width;\n            this.#fullscreenHeight = window.screen.height;\n\n            if (video.requestFullscreen) {\n                video.parentElement.requestFullscreen();\n            } else if (video.mozRequestFullScreen) {\n                video.parentElement.mozRequestFullScreen();\n            } else if (video.webkitRequestFullScreen) {\n                video.parentElement.webkitRequestFullScreen();\n            } else if (video.msRequestFullscreen) {\n                video.parentElement.msRequestFullscreen();\n            } else if (video.webkitEnterFullscreen) {\n                video.webkitEnterFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n\n            document.body.classList.add('op-fullscreen__on');\n        }\n\n        if (typeof window !== 'undefined' && (IS_ANDROID || IS_IPHONE)) {\n            const { screen } = window as any;\n            if (screen.orientation && !this.#isFullscreen) {\n                screen.orientation.lock('landscape');\n            }\n        }\n    }\n\n    private _fullscreenChange(): void {\n        const width = this.#isFullscreen ? undefined : this.#fullscreenWidth;\n        const height = this.#isFullscreen ? undefined : this.#fullscreenHeight;\n        this._setFullscreenData(!this.#isFullscreen);\n\n        if (this.#player.isAd()) {\n            this.#player.getAd().resizeAds(width, height);\n        }\n        this.#isFullscreen = !this.#isFullscreen;\n\n        if (this.#isFullscreen) {\n            document.body.classList.add('op-fullscreen__on');\n        } else {\n            document.body.classList.remove('op-fullscreen__on');\n        }\n        this._resize(width, height);\n    }\n\n    private _setFullscreenData(isFullscreen: boolean): void {\n        this.#player.getContainer().setAttribute('data-fullscreen', (!!isFullscreen).toString());\n        if (this.#button) {\n            if (isFullscreen) {\n                this.#button.classList.add('op-controls__fullscreen--out');\n            } else {\n                this.#button.classList.remove('op-controls__fullscreen--out');\n            }\n        }\n    }\n\n    private _resize(width?: number, height?: number): void {\n        const wrapper = this.#player.getContainer();\n        const video = this.#player.getElement();\n        const options = this.#player.getOptions();\n        let styles = '';\n        if (width) {\n            wrapper.style.width = '100%';\n            video.style.width = '100%';\n        } else if (options.width) {\n            const defaultWidth = typeof options.width === 'number' ? `${options.width}px` : options.width;\n            styles += `width: ${defaultWidth} !important;`;\n            video.style.removeProperty('width');\n        } else {\n            video.style.removeProperty('width');\n            wrapper.style.removeProperty('width');\n        }\n        if (height) {\n            video.style.height = '100%';\n            wrapper.style.height = '100%';\n        } else if (options.height) {\n            const defaultHeight = typeof options.height === 'number' ? `${options.height}px` : options.height;\n            styles += `height: ${defaultHeight} !important;`;\n            video.style.removeProperty('height');\n        } else {\n            video.style.removeProperty('height');\n            wrapper.style.removeProperty('height');\n        }\n\n        if (styles) {\n            wrapper.setAttribute('style', styles);\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const fullscreenBtnFocused = document?.activeElement?.classList.contains('op-controls__fullscreen');\n        if (fullscreenBtnFocused && (key === 13 || key === 32)) {\n            this.toggleFullscreen();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    private _setFullscreen(): void {\n        this.#isFullscreen = true;\n        this._setFullscreenData(true);\n        document.body.classList.add('op-fullscreen__on');\n    }\n\n    private _unsetFullscreen(): void {\n        this.#isFullscreen = false;\n        this._setFullscreenData(false);\n        document.body.classList.remove('op-fullscreen__on');\n    }\n}\n\nexport default Fullscreen;\n","import { Source } from '../interfaces';\nimport { isAudio } from './general';\n\nexport function getExtension(url: string): string {\n    const baseUrl = url.split('?')[0];\n    const baseFrags = (baseUrl || '').split('\\\\');\n    const baseUrlFragment = (baseFrags || []).pop();\n    const baseNameFrags = (baseUrlFragment || '').split('/');\n    const baseName = (baseNameFrags || []).pop() || '';\n    return baseName.includes('.') ? baseName.substring(baseName.lastIndexOf('.') + 1) : '';\n}\n\nexport function isHlsSource(media: Source): boolean {\n    return (\n        /\\.m3u8$/i.test(media.src) || ['application/x-mpegURL', 'application/vnd.apple.mpegurl'].includes(media.type)\n    );\n}\n\nexport function isM3USource(media: Source): boolean {\n    return /\\.m3u$/i.test(media.src);\n}\n\nexport function isDashSource(media: Source): boolean {\n    return /\\.mpd/i.test(media.src) || media.type === 'application/dash+xml';\n}\n\nexport function isFlvSource(media: Source): boolean {\n    return /(^rtmp:\\/\\/|\\.flv$)/i.test(media.src) || ['video/x-flv', 'video/flv'].includes(media.type);\n}\n\nexport function predictMimeType(url: string, element: HTMLMediaElement): string {\n    const extension = getExtension(url);\n\n    // If no extension found, check if media is a vendor iframe\n    if (!extension) {\n        return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n\n    // Check native media types\n    switch (extension) {\n        case 'm3u8':\n        case 'm3u':\n            return 'application/x-mpegURL';\n        case 'mpd':\n            return 'application/dash+xml';\n        case 'mp4':\n            return isAudio(element) ? 'audio/mp4' : 'video/mp4';\n        case 'mp3':\n            return 'audio/mp3';\n        case 'webm':\n            return isAudio(element) ? 'audio/webm' : 'video/webm';\n        case 'ogg':\n            return isAudio(element) ? 'audio/ogg' : 'video/ogg';\n        case 'ogv':\n            return 'video/ogg';\n        case 'oga':\n            return 'audio/ogg';\n        case '3gp':\n            return 'audio/3gpp';\n        case 'wav':\n            return 'audio/wav';\n        case 'aac':\n            return 'audio/aac';\n        case 'flac':\n            return 'audio/flac';\n        default:\n            return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n}\n\n// @see https://raw.githubusercontent.com/googleads/googleads-ima-html5/2.11/attempt_to_autoplay/ads.js\n// @see https://github.com/Modernizr/Modernizr/issues/1095#issuecomment-304682473\nexport function isAutoplaySupported(\n    media: HTMLMediaElement,\n    defaultVol: number,\n    autoplay: (playing: boolean) => void,\n    muted: (playing: boolean) => void,\n    callback: () => void\n): void {\n    const playPromise = media.play();\n    if (playPromise !== undefined) {\n        playPromise\n            .then(() => {\n                // Unmuted autoplay works.\n                media.pause();\n                autoplay(true);\n                muted(false);\n                callback();\n            })\n            .catch(() => {\n                // Unmuted autoplay failed. New attempt with muted autoplay.\n                media.volume = 0;\n                media.muted = true;\n                media\n                    .play()\n                    .then(() => {\n                        // Muted autoplay works.\n                        media.pause();\n                        autoplay(true);\n                        muted(true);\n                        callback();\n                    })\n                    .catch(() => {\n                        // Both muted and unmuted autoplay failed. Fallback to click to play.\n                        media.volume = defaultVol;\n                        media.muted = false;\n                        autoplay(false);\n                        muted(false);\n                        callback();\n                    });\n            });\n    } else {\n        autoplay(!media.paused || ('Promise' in window && (playPromise as Promise<void>) instanceof Promise));\n        media.pause();\n        muted(false);\n        callback();\n    }\n}\n","import { EventsList, Level, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, NAV } from '../utils/constants';\nimport { addEvent, sanitize } from '../utils/general';\nimport { isDashSource, isHlsSource } from '../utils/media';\n\nclass Levels implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #levels: Level[] = [];\n\n    #defaultLevel = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, defaultLevel: startLevel, detachMenus } = this.#player.getOptions();\n        const initialLevel = startLevel !== null ? parseInt(startLevel || '0', 10) : this.#player.getMedia().level;\n        this.#defaultLevel = `${initialLevel}`;\n        const menuItems = this._formatMenuItems();\n        const defaultLevel = menuItems.length ? menuItems.find((items) => items.key === this.#defaultLevel) : null;\n        const defaultLabel = defaultLevel ? defaultLevel.label : labels?.auto || '';\n        let levelSet = false;\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__levels op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mediaLevels || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-label', labels?.mediaLevels || '');\n        this.#button.setAttribute('data-active-level', this.#defaultLevel);\n        this.#button.innerHTML = `<span>${defaultLabel}</span>`;\n\n        const loadLevelsEvent = (): void => {\n            if (!this.#levels.length) {\n                this._gatherLevels();\n                setTimeout((): void => {\n                    this.#player.getMedia().level = initialLevel;\n                    const e = addEvent('controlschanged');\n                    this.#player.getElement().dispatchEvent(e);\n                }, 0);\n            } else if (!levelSet) {\n                this.#player.getMedia().level = initialLevel;\n                levelSet = true;\n            }\n        };\n\n        this.#events.media.loadedmetadata = loadLevelsEvent.bind(this);\n        this.#events.media.manifestLoaded = loadLevelsEvent.bind(this);\n        this.#events.media.hlsManifestParsed = loadLevelsEvent.bind(this);\n\n        if (detachMenus) {\n            this._buildMenu();\n            this.#events.button.click = (): void => {\n                if (detachMenus) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    } else {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n            this.#events.button.mouseover = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    }\n                }\n            };\n            this.#events.button.mouseout = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n\n            this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            const { currentTime } = this.#player.getMedia();\n            const isPaused = this.#player.getMedia().paused;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-levels__option')) {\n                const levelVal = option.getAttribute('data-value');\n                const level = levelVal ? levelVal.replace('levels-', '') : '-1';\n                this.#defaultLevel = `${level}`;\n                if (detachMenus) {\n                    this.#button.setAttribute('data-active-level', `${level}`);\n                    this.#button.innerHTML = `<span>${sanitize(option.innerText, true)}</span>`;\n                    const levels =\n                        option.parentElement && option.parentElement.parentElement\n                            ? option.parentElement.parentElement.querySelectorAll('.op-settings__submenu-item')\n                            : [];\n                    for (let i = 0, total = levels.length; i < total; ++i) {\n                        levels[i].setAttribute('aria-checked', 'false');\n                    }\n                    if (option.parentElement) {\n                        option.parentElement.setAttribute('aria-checked', 'true');\n                    }\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n                this.#player.getMedia().level = level;\n                this.#player.getMedia().currentTime = currentTime;\n                if (!isPaused) {\n                    this.#player.play();\n                }\n\n                const event = addEvent('levelchanged', {\n                    detail: {\n                        label: option.innerText.trim(),\n                        level,\n                    },\n                });\n                this.#player.getElement().dispatchEvent(event);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n\n        // @ts-ignore\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n        this.#events.global.connection = (): void => {\n            // Check connectivity to switch levels (only HTML5 since HLS and Dash can use adaptive streaming)\n            const media = this.#player.getMedia().current;\n            if (!isDashSource(media) && !isHlsSource(media)) {\n                const type = connection?.effectiveType || '';\n                const levels = this.#levels.map((item) => ({\n                    ...item,\n                    resolution: parseInt(item.label.replace('p', ''), 10),\n                }));\n\n                let level = levels.find((item) => item.resolution < 360);\n                if (type === '4g') {\n                    level = levels.find((item) => item.resolution >= 720);\n                } else if (type === '3g') {\n                    level = levels.find((item) => item.resolution >= 360 && item.resolution < 720);\n                }\n\n                if (level) {\n                    this.#player.pause();\n                    this.#player.getMedia().level = level.id;\n                    this.#player.play();\n                }\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        if (connection) {\n            connection.addEventListener('change', this.#events.global.connection, EVENT_OPTIONS);\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // @ts-ignore\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        if (connection) {\n            connection.removeEventListener('change', this.#events.global.connection);\n        }\n        if (detachMenus) {\n            this.#button.removeEventListener('click', this.#events.button.click);\n            this.#button.remove();\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (detachMenus) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n        // Avoid implementing submenu for levels if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-levels__option',\n                  default: this.#defaultLevel || '-1',\n                  key: 'levels',\n                  name: labels?.levels,\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels } = this.#player.getOptions();\n        const levels = this._gatherLevels();\n        const total = levels.length;\n        let items = total ? [{ key: '-1', label: labels?.auto }] : [];\n        for (let i = 0; i < total; i++) {\n            const level = levels[i];\n            items = items.filter((el) => el.key !== level.id);\n            items.push({ key: level.id, label: level.label });\n        }\n\n        // Remove duplicated labels\n        return items\n            .reduce((acc: SettingsSubItem[], current) => {\n                const duplicate = acc.find((item) => item.label === current.label);\n                if (!duplicate) {\n                    return acc.concat([current]);\n                }\n                return acc;\n            }, [])\n            .sort((a, b) => (parseInt(a?.label || '', 10) > parseInt(b?.label || '', 10) ? 1 : -1));\n    }\n\n    // @see https://en.wikipedia.org/wiki/Computer_display_standard#Standards\n    private _getResolutionsLabel(height: number): string {\n        const { labels } = this.#player.getOptions();\n        if (height >= 4320) {\n            return '8K';\n        }\n        if (height >= 2160) {\n            return '4K';\n        }\n        if (height >= 1440) {\n            return '1440p';\n        }\n        if (height >= 1080) {\n            return '1080p';\n        }\n        if (height >= 720) {\n            return '720p';\n        }\n        if (height >= 480) {\n            return '480p';\n        }\n        if (height >= 360) {\n            return '360p';\n        }\n        if (height >= 240) {\n            return '240p';\n        }\n        if (height >= 144) {\n            return '144p';\n        }\n        return labels?.auto || '';\n    }\n\n    private _gatherLevels(): Level[] {\n        if (!this.#levels.length) {\n            this.#player.getMedia().levels.forEach((level: Level) => {\n                this.#levels.push({ ...level, label: level.label || this._getResolutionsLabel(level.height) });\n            });\n        }\n        return this.#levels;\n    }\n\n    private _buildMenu(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // Build menu if detachMenu is `true`\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-levels__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            const className = 'op-levels__option';\n            const options = this._formatMenuItems();\n\n            // Store the submenu to reach all options for current menu item\n            const menu = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-levels\">\n                ${options\n                    .map(\n                        (item) => `\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\"\n                    aria-checked=\"${this.#defaultLevel === item.key ? 'true' : 'false'}\">\n                    <div class=\"op-settings__submenu-label ${className || ''}\" data-value=\"levels-${item.key}\">${\n                        item.label\n                    }</div>\n                </div>`\n                    )\n                    .join('')}\n            </div>`;\n            this.#menu.innerHTML = menu;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.appendChild(this.#button);\n            itemContainer.appendChild(this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).appendChild(itemContainer);\n        }\n    }\n}\n\nexport default Levels;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio } from '../utils/general';\n\nclass Play implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__playpause op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.play || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.play || '');\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n\n        this.#events.button = (e: Event): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n\n            if (el.paused || el.ended) {\n                if (this.#player.getAd()) {\n                    this.#player.getAd().playRequested = true;\n                }\n\n                el.play();\n                this.#events.media.play();\n            } else {\n                el.pause();\n                this.#events.media.pause();\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.play = (): void => {\n            if (this.#player.activeElement().ended) {\n                if (this.#player.isMedia()) {\n                    this.#button.classList.add('op-controls__playpause--replay');\n                } else {\n                    this.#button.classList.add('op-controls__playpause--pause');\n                }\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n\n                if (this.#player.getOptions()?.pauseOthers) {\n                    Object.keys(Player.instances).forEach((key) => {\n                        if (key !== this.#player.id) {\n                            const target = Player.instances[key].activeElement();\n                            target.pause();\n                        }\n                    });\n                }\n            }\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            if (this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (!this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            this.#button.classList.remove('op-controls__playpause--pause');\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.ended = (): void => {\n            if (this.#player.activeElement().ended && this.#player.isMedia()) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else if (\n                this.#player.getElement().currentTime >= this.#player.getElement().duration ||\n                this.#player.getElement().currentTime <= 0\n            ) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n            }\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.adsmediaended = (): void => {\n            this.#button.classList.remove('op-controls__playpause--replay');\n            this.#button.classList.add('op-controls__playpause--pause');\n            this.#button.title = labels?.pause || '';\n            this.#button.setAttribute('aria-label', labels?.pause || '');\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl) {\n                const el = this.#player.activeElement();\n                el.pause();\n            }\n        };\n\n        const element = this.#player.getElement();\n        this.#events.controls.controlschanged = (): void => {\n            if (!this.#player.activeElement().paused) {\n                const event = addEvent('playing');\n                element.dispatchEvent(event);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            element.addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            element.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#button.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            this.#player.getElement().removeEventListener('click', this.#events.button);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#button.removeEventListener('click', this.#events.button);\n        this.#button.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__playpause');\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            this.#events.button(e);\n        }\n    }\n}\n\nexport default Play;\n","export function formatTime(seconds: number, frameRate?: number): string {\n    const f = Math.floor((seconds % 1) * (frameRate || 0));\n    let s = Math.floor(seconds);\n    let m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const wrap = (value: number): string => {\n        const formattedVal = value.toString();\n        if (value < 10) {\n            if (value <= 0) {\n                return '00';\n            }\n            return `0${formattedVal}`;\n        }\n        return formattedVal;\n    };\n    m %= 60;\n    s %= 60;\n    return `${h > 0 ? `${wrap(h)}:` : ''}${wrap(m)}:${wrap(s)}${f ? `:${wrap(f)}` : ''}`;\n}\n\n// @see https://en.wikipedia.org/wiki/SMPTE_timecode\nexport function timeToSeconds(timeCode: string): number {\n    const time = timeCode.replace(/;/g, ':').split(':');\n    let seconds = 0;\n    // Hours found; use different calculation\n    if (time.length === 3) {\n        seconds += parseFloat(time[0]) * 60 * 60;\n        seconds += parseFloat(time[1]) * 60;\n        seconds += parseFloat(time[2]);\n    } else {\n        seconds += parseFloat(time[0]) * 60;\n        seconds += parseFloat(time[1]);\n    }\n    return seconds;\n}\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { isAudio, offset } from '../utils/general';\nimport { formatTime } from '../utils/time';\n\nclass Progress implements PlayerComponent {\n    #player: Player;\n\n    #progress: HTMLDivElement;\n\n    #slider: HTMLInputElement;\n\n    #buffer: HTMLProgressElement;\n\n    #played: HTMLProgressElement;\n\n    #tooltip: HTMLSpanElement;\n\n    #events: EventsList = {\n        container: {},\n        controls: {},\n        global: {},\n        media: {},\n        slider: {},\n    };\n\n    #forcePause = false;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n        this.#progress = document.createElement('div');\n        this.#progress.className = `op-controls__progress op-control__${this.#controlPosition}`;\n        this.#progress.tabIndex = 0;\n        this.#progress.setAttribute('aria-label', labels?.progressSlider || '');\n        this.#progress.setAttribute('aria-valuemin', '0');\n        this.#progress.setAttribute('aria-valuenow', '0');\n        this.#progress.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__progress--seek';\n        this.#slider.tabIndex = -1;\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.value = '0';\n        this.#slider.setAttribute('aria-label', labels?.progressRail || '');\n        this.#slider.setAttribute('role', 'slider');\n\n        this.#buffer = document.createElement('progress');\n        this.#buffer.className = 'op-controls__progress--buffer';\n        this.#buffer.setAttribute('max', '100');\n        this.#buffer.value = 0;\n\n        this.#played = document.createElement('progress');\n        this.#played.className = 'op-controls__progress--played';\n        this.#played.setAttribute('max', '100');\n        this.#played.value = 0;\n\n        this.#progress.appendChild(this.#slider);\n        this.#progress.appendChild(this.#played);\n        this.#progress.appendChild(this.#buffer);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip = document.createElement('span');\n            this.#tooltip.className = 'op-controls__tooltip';\n            this.#tooltip.tabIndex = -1;\n            this.#tooltip.innerHTML = '00:00';\n            this.#progress.appendChild(this.#tooltip);\n        }\n\n        const setInitialProgress = (): void => {\n            if (this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n                this.#slider.value = current.toString();\n                if (!Number.isNaN(el.duration)) {\n                    this.#slider.setAttribute('max', `${el.duration}`);\n                    this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n                }\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                this.#slider.setAttribute('max', '1');\n                this.#slider.value = '1';\n                this.#slider.style.backgroundSize = '100% 100%';\n                this.#played.value = 1;\n                this.#progress.setAttribute('aria-valuemax', '1');\n                this.#progress.setAttribute('aria-hidden', 'false');\n            } else if (!this.#player.getOptions().live?.showProgress) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        let lastCurrentTime = 0;\n        const defaultDuration = this.#player.getOptions().progress?.duration || 0;\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.loadedmetadata = setInitialProgress.bind(this);\n        this.#events.controls.controlschanged = setInitialProgress.bind(this);\n\n        this.#events.media.progress = (e: Event): void => {\n            const el = e.target as HTMLMediaElement;\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (el.duration > 0) {\n                    for (let i = 0, total = el.buffered.length; i < total; i++) {\n                        if (el.buffered.start(el.buffered.length - 1 - i) < el.currentTime) {\n                            this.#buffer.value = (el.buffered.end(el.buffered.length - 1 - i) / el.duration) * 100;\n                            break;\n                        }\n                    }\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n        this.#events.media.waiting = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('loading')) {\n                this.#slider.classList.add('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('error')) {\n                this.#slider.classList.add('error');\n            }\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                const current = el.currentTime;\n                this.#progress.setAttribute('aria-valuenow', current.toString());\n                this.#progress.setAttribute('aria-valuetext', formatTime(current));\n            }\n        };\n        this.#events.media.play = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            if (\n                this.#player.activeElement().duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled')\n            ) {\n                this.#progress.removeAttribute('aria-valuenow');\n                this.#progress.removeAttribute('aria-valuetext');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                (!this.#player.getElement().getAttribute('op-live__enabled') ||\n                    this.#player.getElement().getAttribute('op-dvr__enabled'))\n            ) {\n                if (\n                    !this.#slider.getAttribute('max') ||\n                    this.#slider.getAttribute('max') === '0' ||\n                    parseFloat(this.#slider.getAttribute('max') || '-1') !== el.duration\n                ) {\n                    if (!Number.isNaN(el.duration)) {\n                        this.#slider.setAttribute('max', `${el.duration}`);\n                    }\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n\n                // Adjust current time between Media and Ads; with the latter, it is convenient to add an extra\n                // second to ensure it will reach the end of the rail\n                const duration = el.duration - el.currentTime + 1 >= 100 ? 100 : el.duration - el.currentTime + 1;\n                const current = this.#player.isMedia() ? el.currentTime : duration;\n                const min = parseFloat(this.#slider.min);\n                const max = parseFloat(this.#slider.max);\n                this.#slider.value = current.toString();\n                this.#slider.style.backgroundSize = `${((current - min) * 100) / (max - min)}% 100%`;\n                this.#played.value =\n                    el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                        ? defaultDuration\n                        : (current / el.duration) * 100;\n\n                if (this.#player.getElement().getAttribute('op-dvr__enabled') && Math.floor(this.#played.value) >= 99) {\n                    lastCurrentTime = el.currentTime;\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.durationchange = (): void => {\n            const el = this.#player.activeElement();\n            const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n            if (!Number.isNaN(el.duration)) {\n                this.#slider.setAttribute('max', `${el.duration}`);\n                this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n            }\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (current / el.duration) * 100;\n        };\n\n        this.#events.media.ended = (): void => {\n            this.#slider.style.backgroundSize = '0% 100%';\n            if (this.#slider.getAttribute('max')) {\n                this.#slider.setAttribute('max', '0');\n            }\n            this.#buffer.value = 0;\n            this.#played.value = 0;\n        };\n\n        const updateSlider = (e: Event): void => {\n            const el = this.#player.activeElement();\n            const target = e.target as HTMLInputElement;\n            const value = parseFloat(target.value);\n            if (\n                this.#slider.classList.contains('op-progress--pressed') ||\n                (value < el.currentTime && !progress?.allowRewind) ||\n                (value > el.currentTime && !progress?.allowSkip)\n            ) {\n                this.#slider.value = el.currentTime.toString();\n                return;\n            }\n            this.#slider.classList.add('.op-progress--pressed');\n\n            const min = parseFloat(target.min);\n            const max = parseFloat(target.max);\n            const val = parseFloat(target.value);\n            this.#slider.style.backgroundSize = `${((val - min) * 100) / (max - min)}% 100%`;\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (val / el.duration) * 100;\n\n            if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                el.currentTime = Math.round(this.#played.value) >= 99 ? lastCurrentTime : val;\n            } else {\n                el.currentTime = val;\n            }\n\n            this.#slider.classList.remove('.op-progress--pressed');\n        };\n\n        const forcePause = (e: KeyboardEvent): void => {\n            const el = this.#player.activeElement();\n            const key = e.which || e.keyCode || 0;\n            const target = this.#slider;\n            const value = Math.round(Number(target.value));\n            const current = Math.round(el.currentTime);\n            const isProgressManipulationAllowed =\n                (value < current && progress?.allowRewind) || (value >= current && progress?.allowSkip);\n\n            // If current progress is not related to an Ad, manipulate current time\n            if (isProgressManipulationAllowed && (key === 1 || key === 0) && this.#player.isMedia() && !el.paused) {\n                el.pause();\n                this.#forcePause = true;\n            }\n        };\n\n        const releasePause = (): void => {\n            const el = this.#player.activeElement();\n            if (this.#forcePause === true && this.#player.isMedia()) {\n                if (el.paused) {\n                    el.play();\n                    this.#forcePause = false;\n                }\n            }\n        };\n\n        // When tapping on mobile, it will update the time and force pause\n        const mobileForcePause = (e: TouchEvent): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity) {\n                const { changedTouches } = e;\n                const x = changedTouches[0]?.pageX || 0;\n                const pos = x - offset(this.#progress).left;\n                const percentage = pos / this.#progress.offsetWidth;\n                const time = percentage * el.duration;\n\n                if (\n                    (time < el.currentTime && progress?.allowRewind) ||\n                    (time > el.currentTime && progress?.allowSkip)\n                ) {\n                    this.#slider.value = time.toString();\n                    updateSlider(e);\n                    if (!el.paused) {\n                        el.pause();\n                        this.#forcePause = true;\n                    }\n                }\n            }\n        };\n\n        this.#events.slider.input = updateSlider.bind(this);\n        this.#events.slider.change = updateSlider.bind(this);\n        this.#events.slider.mousedown = forcePause.bind(this);\n        this.#events.slider.mouseup = releasePause.bind(this);\n        this.#events.slider.touchstart = mobileForcePause.bind(this);\n        this.#events.slider.touchend = releasePause.bind(this);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#events.container.mousemove = (e: MouseEvent): void => {\n                const el = this.#player.activeElement();\n                if (el.duration !== Infinity && !this.#player.isAd()) {\n                    const x = e.pageX;\n\n                    let pos = x - offset(this.#progress).left;\n                    const half = this.#tooltip.offsetWidth / 2;\n                    const percentage = pos / this.#progress.offsetWidth;\n                    const time = percentage * el.duration;\n                    const mediaContainer = this.#player.getContainer();\n                    const limit = mediaContainer.offsetWidth - this.#tooltip.offsetWidth;\n\n                    if (pos <= 0 || x - offset(mediaContainer).left <= half) {\n                        pos = 0;\n                    } else if (x - offset(mediaContainer).left >= limit) {\n                        pos = limit - offset(this.#slider).left - 10;\n                    } else {\n                        pos -= half;\n                    }\n\n                    if (percentage >= 0 && percentage <= 1) {\n                        this.#tooltip.classList.add('op-controls__tooltip--visible');\n                    } else {\n                        this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                    }\n\n                    this.#tooltip.style.left = `${pos}px`;\n                    this.#tooltip.innerHTML = Number.isNaN(time) ? '00:00' : formatTime(time);\n                }\n            };\n            this.#events.global.mousemove = (e: MouseEvent): void => {\n                if (!(e.target as HTMLElement).closest('.op-controls__progress') || this.#player.isAd()) {\n                    this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                }\n            };\n        }\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#progress.addEventListener('keydown', this.#player.getEvents().keydown, EVENT_OPTIONS);\n        this.#progress.addEventListener('mousemove', this.#events.container.mousemove, EVENT_OPTIONS);\n        document.addEventListener('mousemove', this.#events.global.mousemove, EVENT_OPTIONS);\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#progress);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#progress.removeEventListener('keydown', this.#player.getEvents().keydown);\n        this.#progress.removeEventListener('mousemove', this.#events.container.mousemove);\n\n        document.removeEventListener('mousemove', this.#events.global.mousemove);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#buffer.remove();\n        this.#played.remove();\n        this.#slider.remove();\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip.remove();\n        }\n        this.#progress.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const el = this.#player.activeElement();\n        const isAd = this.#player.isAd();\n        const key = e.which || e.keyCode || 0;\n        // Use the 0-9 keys to manipulate current media time to set media (not Ads) to the 0% to 90% of duration.\n        if (!isAd && key >= 48 && key <= 57 && el.duration !== Infinity) {\n            let step = 0;\n            for (let i = 48, limit = 57; i <= limit; i++) {\n                if (i < key) {\n                    step++;\n                }\n            }\n            el.currentTime = el.duration * (0.1 * step);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Progress;\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem, SettingsSubMenu } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { sanitize } from '../utils/general';\n\nclass Settings implements PlayerComponent {\n    #player: Player;\n\n    #submenu: SettingsSubMenu = {};\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLElement;\n\n    #events: EventsList = {\n        global: {},\n        media: {},\n    };\n\n    #originalOutput = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    private clickEvent: () => void;\n\n    private hideEvent: () => void;\n\n    private removeEvent: (e: CustomEvent) => void;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__settings op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.settings || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.settings || '');\n\n        this.#menu = document.createElement('div');\n        this.#menu.className = 'op-settings';\n        this.#menu.setAttribute('aria-hidden', 'true');\n        this.#menu.innerHTML = '<div class=\"op-settings__menu\" role=\"menu\"></div>';\n\n        this.clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n            for (let i = 0, total = menus.length; i < total; ++i) {\n                if (menus[i] !== this.#menu) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n            }\n            this.#menu.setAttribute(\n                'aria-hidden',\n                this.#menu.getAttribute('aria-hidden') === 'false' ? 'true' : 'false'\n            );\n        };\n\n        this.hideEvent = (): void => {\n            let timeout;\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame((): void => {\n                    this.#menu.innerHTML = this.#originalOutput;\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                });\n            }\n        };\n\n        this.removeEvent = (e: CustomEvent): void => {\n            const { id, type } = e.detail;\n            this.removeItem(id, type);\n        };\n\n        this.clickEvent = this.clickEvent.bind(this);\n        this.hideEvent = this.hideEvent.bind(this);\n        this.removeEvent = this.removeEvent.bind(this);\n\n        this.#events.media.controlshidden = this.hideEvent.bind(this);\n        this.#events.media.settingremoved = this.removeEvent.bind(this);\n        this.#events.media.play = this.hideEvent.bind(this);\n        this.#events.media.pause = this.hideEvent.bind(this);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const { target } = e;\n            const current = target as HTMLElement;\n            if (current?.closest(`#${this.#player.id}`) && current?.classList.contains('op-speed__option')) {\n                const level = current?.getAttribute('data-value') || '';\n                this.#player.getMedia().playbackRate = parseFloat(level.replace('speed-', ''));\n            }\n        };\n        this.#events.global.resize = this.hideEvent.bind(this);\n\n        this.#button.addEventListener('click', this.clickEvent, EVENT_OPTIONS);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        document.addEventListener('keydown', this.#events.global.click, EVENT_OPTIONS);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.#events.global.resize, EVENT_OPTIONS);\n        }\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n        this.#player.getContainer().appendChild(this.#menu);\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.clickEvent);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        document.removeEventListener('keydown', this.#events.global.click);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.#events.global.resize);\n        }\n        if (this.#events.global['settings.submenu'] !== undefined) {\n            document.removeEventListener('click', this.#events.global['settings.submenu']);\n            this.#player.getElement().removeEventListener('controlshidden', this.hideEvent);\n        }\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#menu.remove();\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem {\n        const media = this.#player.getMedia();\n        const { labels } = this.#player.getOptions();\n\n        let rate = 1;\n        if (this.#player && media) {\n            rate = media.defaultPlaybackRate !== media.playbackRate ? media.playbackRate : media.defaultPlaybackRate;\n        }\n        return {\n            className: 'op-speed__option',\n            default: rate.toString(),\n            key: 'speed',\n            name: labels?.speed || '',\n            subitems: [\n                { key: '0.25', label: '0.25' },\n                { key: '0.5', label: '0.5' },\n                { key: '0.75', label: '0.75' },\n                { key: '1', label: labels?.speedNormal || '' },\n                { key: '1.25', label: '1.25' },\n                { key: '1.5', label: '1.5' },\n                { key: '2', label: '2' },\n            ],\n        };\n    }\n\n    addItem(name: string, key: string, defaultValue: string, submenu?: SettingsSubItem[], className?: string): void {\n        // Build the menu entry first\n        const dataValue = `${key}-${sanitize(defaultValue, true)}`;\n        const menuItem = document.createElement('div');\n        menuItem.className = 'op-settings__menu-item';\n        menuItem.tabIndex = 0;\n        menuItem.setAttribute('role', 'menuitemradio');\n        menuItem.innerHTML = `<div class=\"op-settings__menu-label\" data-value=\"${dataValue}\">${name}</div>`;\n\n        const submenuMatch = submenu ? submenu.find((x) => x.key === defaultValue) : null;\n        if (submenuMatch) {\n            menuItem.innerHTML += `<div class=\"op-settings__menu-content\" tabindex=\"0\">${submenuMatch.label}</div>`;\n        }\n\n        const mainMenu = this.#menu.querySelector('.op-settings__menu');\n        if (mainMenu) {\n            mainMenu.appendChild(menuItem);\n        }\n        this.#originalOutput = this.#menu.innerHTML;\n\n        // Store the submenu to reach all options for current menu item\n        if (submenu) {\n            const subItems = `\n                <div class=\"op-settings__header\">\n                    <button type=\"button\" class=\"op-settings__back\" tabindex=\"0\">${name}</button>\n                </div>\n                <div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-${key}\">\n                    ${submenu\n                        .map(\n                            (item: SettingsSubItem) => `\n                    <div class=\"op-settings__submenu-item\" role=\"menuitemradio\" aria-checked=\"${\n                        defaultValue === item.key ? 'true' : 'false'\n                    }\">\n                        <div class=\"op-settings__submenu-label ${className || ''}\" tabindex=\"0\" data-value=\"${key}-${\n                                item.key\n                            }\">\n                            ${item.label}\n                        </div>\n                    </div>`\n                        )\n                        .join('')}\n                </div>`;\n            this.#submenu[key] = subItems;\n        }\n\n        this.#events.global['settings.submenu'] = (e: Event): void => {\n            const target = e.target as HTMLElement;\n            if (target.closest(`#${this.#player.id}`)) {\n                if (target.classList.contains('op-settings__back')) {\n                    this.#menu.classList.add('op-settings--sliding');\n                    setTimeout((): void => {\n                        this.#menu.innerHTML = this.#originalOutput;\n                        this.#menu.classList.remove('op-settings--sliding');\n                    }, 100);\n                } else if (target.classList.contains('op-settings__menu-content')) {\n                    const labelEl = target.parentElement\n                        ? target.parentElement.querySelector('.op-settings__menu-label')\n                        : null;\n                    const label = labelEl ? labelEl.getAttribute('data-value') : null;\n                    const fragments = label ? label.split('-') : [];\n                    if (fragments.length > 0) {\n                        fragments.pop();\n\n                        // eslint-disable-next-line no-useless-escape\n                        const current = fragments.join('-').replace(/^\\-|\\-$/, '');\n                        if (typeof this.#submenu[current] !== 'undefined') {\n                            this.#menu.classList.add('op-settings--sliding');\n                            setTimeout((): void => {\n                                this.#menu.innerHTML = this.#submenu[current];\n                                this.#menu.classList.remove('op-settings--sliding');\n                            }, 100);\n                        }\n                    }\n                } else if (target.classList.contains('op-settings__submenu-label')) {\n                    const current = target.getAttribute('data-value');\n                    const value = current ? current.replace(`${key}-`, '') : '';\n                    const label = target.innerText;\n\n                    // Update values in submenu and store\n                    const menuTarget = this.#menu.querySelector(\n                        `#menu-item-${key} .op-settings__submenu-item[aria-checked=true]`\n                    );\n                    if (menuTarget) {\n                        menuTarget.setAttribute('aria-checked', 'false');\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-checked', 'true');\n                        }\n                        this.#submenu[key] = this.#menu.innerHTML;\n\n                        // Restore original menu, and set the new value\n                        this.#menu.classList.add('op-settings--sliding');\n                        setTimeout((): void => {\n                            this.#menu.innerHTML = this.#originalOutput;\n                            const prev = this.#menu.querySelector(\n                                `.op-settings__menu-label[data-value=\"${key}-${defaultValue}\"]`\n                            );\n                            if (prev) {\n                                prev.setAttribute('data-value', `${current}`);\n                                if (prev.nextElementSibling) {\n                                    prev.nextElementSibling.textContent = label;\n                                }\n                            }\n                            defaultValue = value;\n                            this.#originalOutput = this.#menu.innerHTML;\n                            this.#menu.classList.remove('op-settings--sliding');\n                        }, 100);\n                    }\n                }\n            } else {\n                this.hideEvent();\n            }\n        };\n\n        document.addEventListener('click', this.#events.global['settings.submenu'], EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('controlshidden', this.hideEvent, EVENT_OPTIONS);\n    }\n\n    removeItem(id: string | number, type: string, minItems = 2): void {\n        const target = this.#player.getElement().querySelector(`.op-settings__submenu-label[data-value=${type}-${id}]`);\n        if (target) {\n            target.remove();\n        }\n\n        if (\n            this.#player.getElement().querySelectorAll(`.op-settings__submenu-label[data-value^=${type}]`).length <\n            minItems\n        ) {\n            delete this.#submenu[type];\n            const label = this.#player.getElement().querySelector(`.op-settings__menu-label[data-value^=${type}]`);\n            const menuItem = label ? label.closest('.op-settings__menu-item') : null;\n            if (menuItem) {\n                menuItem.remove();\n            }\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const isAd = this.#player.isAd();\n        const settingsBtnFocused = document?.activeElement?.classList.contains('op-controls__settings');\n\n        const menuFocused =\n            document?.activeElement?.classList.contains('op-settings__menu-content') ||\n            document?.activeElement?.classList.contains('op-settings__back') ||\n            document?.activeElement?.classList.contains('op-settings__submenu-label');\n        if (!isAd) {\n            if (settingsBtnFocused && (key === 13 || key === 32)) {\n                this.clickEvent();\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (menuFocused && (key === 13 || key === 32)) {\n                this.#events.global['settings.submenu'](e);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n}\n\nexport default Settings;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { formatTime } from '../utils/time';\n\nclass Time implements PlayerComponent {\n    #player: Player;\n\n    #currentTime: HTMLTimeElement;\n\n    #delimiter: HTMLSpanElement;\n\n    #duration: HTMLTimeElement;\n\n    #container: HTMLSpanElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n\n        this.#currentTime = document.createElement('time');\n        this.#currentTime.className = 'op-controls__current';\n        this.#currentTime.setAttribute('role', 'timer');\n        this.#currentTime.setAttribute('aria-live', 'off');\n        this.#currentTime.setAttribute('aria-hidden', 'false');\n        this.#currentTime.innerText = '0:00';\n\n        const showOnlyCurrent = progress?.showCurrentTimeOnly || false;\n\n        if (!showOnlyCurrent) {\n            this.#delimiter = document.createElement('span');\n            this.#delimiter.className = 'op-controls__time-delimiter';\n            this.#delimiter.setAttribute('aria-hidden', 'false');\n            this.#delimiter.innerText = '/';\n\n            this.#duration = document.createElement('time');\n            this.#duration.className = 'op-controls__duration';\n            this.#duration.setAttribute('aria-hidden', 'false');\n            this.#duration.innerText = formatTime(progress?.duration || 0);\n        }\n\n        const controls = this.#player.getControls().getLayer(this.#controlLayer);\n        this.#container = document.createElement('span');\n        this.#container.className = `op-controls-time op-control__${this.#controlPosition}`;\n        this.#container.appendChild(this.#currentTime);\n        if (!showOnlyCurrent) {\n            this.#container.appendChild(this.#delimiter);\n            this.#container.appendChild(this.#duration);\n        }\n        controls.appendChild(this.#container);\n\n        const setInitialTime = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (!showOnlyCurrent) {\n                    const duration = !Number.isNaN(el.duration)\n                        ? el.duration\n                        : this.#player.getOptions().progress?.duration || 0;\n                    this.#duration.innerText = formatTime(duration);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (!showOnlyCurrent) {\n                this.#duration.setAttribute('aria-hidden', 'true');\n                this.#delimiter.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.loadedmetadata = setInitialTime.bind(this);\n        this.#events.controls.controlschanged = setInitialTime.bind(this);\n\n        const { showLabel: showLiveLabel } = this.#player.getOptions().live || {};\n\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const duration = formatTime(el.duration);\n                if (!showOnlyCurrent && !Number.isNaN(el.duration) && duration !== this.#duration.innerText) {\n                    this.#duration.innerText = duration;\n                    this.#duration.setAttribute('aria-hidden', 'false');\n                    this.#delimiter.setAttribute('aria-hidden', 'false');\n                } else if (showOnlyCurrent || duration !== this.#duration.innerText) {\n                    this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (\n                showOnlyCurrent ||\n                (!this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                    this.#duration.getAttribute('aria-hidden') === 'false')\n            ) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            } else {\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            }\n        };\n        this.#events.media.ended = (): void => {\n            const el = this.#player.activeElement();\n            const duration = !Number.isNaN(el.duration)\n                ? el.duration\n                : this.#player.getOptions().progress?.duration || 0;\n            if (!showOnlyCurrent && this.#player.isMedia()) {\n                this.#duration.innerText = formatTime(duration);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#currentTime.remove();\n        const { showCurrentTimeOnly } = this.#player.getOptions().progress || {};\n        if (!showCurrentTimeOnly) {\n            this.#delimiter.remove();\n            this.#duration.remove();\n        }\n        this.#container.remove();\n    }\n}\n\nexport default Time;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Volume implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #container: HTMLDivElement;\n\n    #display: HTMLProgressElement;\n\n    #slider: HTMLInputElement;\n\n    #events: EventsList = {\n        button: {},\n        media: {},\n        slider: {},\n    };\n\n    #volume: number;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#volume = this.#player.getMedia().volume;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#container = document.createElement('div');\n        this.#container.className = `op-controls__volume op-control__${this.#controlPosition}`;\n        this.#container.tabIndex = 0;\n        this.#container.setAttribute('aria-valuemin', '0');\n        this.#container.setAttribute('aria-valuemax', '100');\n        this.#container.setAttribute('aria-valuenow', `${this.#volume}`);\n        this.#container.setAttribute('aria-valuetext', `${labels?.volume || ''}: ${this.#volume}`);\n        this.#container.setAttribute('aria-orientation', 'vertical');\n        this.#container.setAttribute('aria-label', labels?.volumeSlider || '');\n        this.#container.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__volume--input';\n        this.#slider.tabIndex = -1;\n        this.#slider.value = this.#player.getMedia().volume.toString();\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('max', '1');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.setAttribute('aria-label', labels?.volumeControl || '');\n\n        this.#display = document.createElement('progress');\n        this.#display.className = 'op-controls__volume--display';\n        this.#display.setAttribute('max', '10');\n        this.#display.value = this.#player.getMedia().volume * 10;\n\n        this.#container.appendChild(this.#slider);\n        this.#container.appendChild(this.#display);\n\n        // Use as backup when mute is clicked\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__mute op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mute || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.mute || '');\n\n        const updateSlider = (element: any): void => {\n            const mediaVolume = element.volume * 1;\n            const vol = Math.floor(mediaVolume * 100);\n\n            this.#slider.value = `${element.volume}`;\n            this.#display.value = mediaVolume * 10;\n            this.#container.setAttribute('aria-valuenow', `${vol}`);\n            this.#container.setAttribute('aria-valuetext', `${labels?.volume}: ${vol}`);\n        };\n\n        const updateButton = (element: any): void => {\n            const vol = element.volume;\n            if (vol <= 0.5 && vol > 0) {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.add('op-controls__mute--half');\n            } else if (vol === 0) {\n                this.#button.classList.add('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            } else {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            }\n        };\n\n        const updateVolume = (event: Event): void => {\n            const el = this.#player.activeElement();\n            const value = parseFloat((event.target as HTMLInputElement).value);\n            el.volume = value;\n            el.muted = el.volume === 0;\n            this.#volume = value;\n            const unmuteEl = this.#player.getContainer().querySelector('.op-player__unmute');\n            if (!el.muted && unmuteEl) {\n                unmuteEl.remove();\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n\n        this.#events.media.volumechange = (): void => {\n            const el = this.#player.activeElement();\n            updateSlider(el);\n            updateButton(el);\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            const el = this.#player.activeElement();\n            if (el.muted) {\n                el.volume = 0;\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n        this.#events.slider.input = updateVolume.bind(this);\n        this.#events.slider.change = updateVolume.bind(this);\n\n        this.#events.button.click = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n            el.muted = !el.muted;\n\n            if (el.muted) {\n                el.volume = 0;\n                this.#button.title = labels?.unmute || '';\n                this.#button.setAttribute('aria-label', labels?.unmute || '');\n            } else {\n                el.volume = this.#volume;\n                this.#button.title = labels?.mute || '';\n                this.#button.setAttribute('aria-label', labels?.mute || '');\n            }\n            const event = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(event);\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        if ((!IS_ANDROID && !IS_IOS) || !this.#player.getOptions().useDeviceVolume) {\n            const controls = this.#player.getControls().getLayer(this.#controlLayer);\n            controls.appendChild(this.#button);\n            controls.appendChild(this.#container);\n        }\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.#events.button.click);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#slider.remove();\n        this.#display.remove();\n        this.#container.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.#player.activeElement();\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__mute');\n\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            el.muted = !el.muted;\n            el.volume = el.muted ? 0 : this.#volume;\n            this.#events.button.click();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Volume;\n","import Captions from './controls/captions';\nimport Fullscreen from './controls/fullscreen';\nimport Levels from './controls/levels';\nimport Play from './controls/play';\nimport Progress from './controls/progress';\nimport Settings from './controls/settings';\nimport Time from './controls/time';\nimport Volume from './controls/volume';\nimport { ElementItem, EventsList, PlayerComponent, PlayerLayers, SettingsItem } from './interfaces';\nimport Player from './player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\n\nclass Controls implements PlayerComponent {\n    events: EventsList = {\n        media: {},\n        mouse: {},\n    };\n\n    #settings: Settings;\n\n    #timer = 0;\n\n    #controls: HTMLDivElement;\n\n    #player: Player;\n\n    #items: any;\n\n    #controlEls: any = {\n        Captions,\n        Fullscreen,\n        Levels,\n        Play,\n        Progress,\n        Settings,\n        Time,\n        Volume,\n    };\n\n    constructor(player: Player) {\n        this.#player = player;\n        this._setElements();\n    }\n\n    create(): void {\n        this.#player.getElement().controls = false;\n\n        const isMediaVideo = isVideo(this.#player.getElement());\n\n        this._createControlsLayer();\n        this._buildElements();\n\n        this.events.controlschanged = (): void => {\n            this.destroy();\n            this._setElements();\n            this.create();\n        };\n\n        this.events.ended = (): void => {\n            this.#player.getContainer().classList.remove('op-controls--hidden');\n        };\n\n        this.#player.getElement().addEventListener('controlschanged', this.events.controlschanged, EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('ended', this.events.ended, EVENT_OPTIONS);\n\n        const { alwaysVisible } = this.#player.getOptions().controls || {};\n\n        if (!alwaysVisible) {\n            const showControls = (): void => {\n                if (isMediaVideo) {\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._stopControlTimer();\n                }\n            };\n\n            this.events.mouse.mouseenter = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._stopControlTimer();\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                    } else if (this.#player.getOptions().showLoaderOnInit) {\n                        this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'false');\n                    }\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mousemove = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                    } else {\n                        this.#player.playBtn.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'true' : 'false'\n                        );\n                        this.#player.loader.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'false' : 'true'\n                        );\n                    }\n\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mouseleave = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._startControlTimer(1000);\n                }\n            };\n            this.events.media.play = (): void => {\n                if (isMediaVideo) {\n                    this._startControlTimer(this.#player.getOptions().hidePlayBtnTimer || 350);\n                }\n            };\n            this.events.media.loadedmetadata = showControls.bind(this);\n            this.events.media.pause = showControls.bind(this);\n            this.events.media.waiting = showControls.bind(this);\n            this.events.media.stalled = showControls.bind(this);\n            this.events.media.playererror = showControls.bind(this);\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().addEventListener(event, this.events.media[event], EVENT_OPTIONS);\n            });\n\n            if (IS_ANDROID || IS_IOS) {\n                this.#player.getContainer().addEventListener('click', this.events.mouse.mouseenter, EVENT_OPTIONS);\n            } else {\n                Object.keys(this.events.mouse).forEach((event) => {\n                    this.#player.getContainer().addEventListener(event, this.events.mouse[event], EVENT_OPTIONS);\n                });\n            }\n\n            // Initial countdown to hide controls\n            if (isMediaVideo && !this.#player.activeElement().paused) {\n                this._startControlTimer(3000);\n            }\n        }\n    }\n\n    destroy(): void {\n        if (!IS_ANDROID && !IS_IOS) {\n            Object.keys(this.events.mouse).forEach((event) => {\n                this.#player.getContainer().removeEventListener(event, this.events.mouse[event]);\n            });\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().removeEventListener(event, this.events.media[event]);\n            });\n\n            this._stopControlTimer();\n        }\n\n        this.#player.getElement().removeEventListener('controlschanged', this.events.controlschanged);\n        this.#player.getElement().removeEventListener('ended', this.events.ended);\n\n        Object.keys(this.#items).forEach((position: string) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._destroyCustomElement(item as ElementItem);\n                } else if (typeof (item as PlayerComponent).destroy === 'function') {\n                    (item as PlayerComponent).destroy();\n                }\n            });\n        });\n\n        this.#controls.remove();\n    }\n\n    getContainer(): HTMLDivElement {\n        return this.#controls;\n    }\n\n    getLayer(layer: string): HTMLDivElement {\n        return this.#controls.querySelector(`.op-controls-layer__${layer}`) || this.#controls;\n    }\n\n    private _createControlsLayer(): void {\n        if (!this.#controls || !this.#player.getContainer().querySelector('.op-controls')) {\n            this.#controls = document.createElement('div');\n            this.#controls.className = 'op-controls';\n            this.#player.getContainer().appendChild(this.#controls);\n\n            const messageContainer = document.createElement('div');\n            messageContainer.className = 'op-status';\n            messageContainer.innerHTML = '<span></span>';\n            messageContainer.tabIndex = -1;\n            messageContainer.setAttribute('aria-hidden', 'true');\n\n            if (isAudio(this.#player.getElement())) {\n                this.#controls.appendChild(messageContainer);\n            }\n        }\n    }\n\n    private _startControlTimer(time: number): void {\n        const el = this.#player.activeElement();\n        this._stopControlTimer();\n\n        if (typeof window !== 'undefined') {\n            this.#timer = window.setTimeout(() => {\n                if ((!el.paused || !el.ended) && isVideo(this.#player.getElement())) {\n                    this.#player.getContainer().classList.add('op-controls--hidden');\n                    this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                    this._stopControlTimer();\n                    const event = addEvent('controlshidden');\n                    this.#player.getElement().dispatchEvent(event);\n                }\n            }, time);\n        }\n    }\n\n    private _stopControlTimer(): void {\n        if (this.#timer !== 0) {\n            clearTimeout(this.#timer);\n            this.#timer = 0;\n        }\n    }\n\n    private _setElements(): void {\n        const controls = this.#player.getOptions().controls?.layers || {};\n        this.#items = {\n            'bottom-left': [],\n            'bottom-middle': [],\n            'bottom-right': [],\n            left: [],\n            main: [],\n            middle: [],\n            right: [],\n            'top-left': [],\n            'top-middle': [],\n            'top-right': [],\n        };\n\n        const isVideoEl = isVideo(this.#player.getElement());\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        const controlPositions = Object.keys(controls);\n        const layersExist = controlPositions.find((item) => /^(top|bottom)/.test(item));\n        this._createControlsLayer();\n\n        controlPositions.forEach((position: string) => {\n            const [layer, pos] = position.split('-');\n\n            // Create extra layers if top/bottom exist\n            if (pos) {\n                if (!this.#controls.classList.contains('op-controls__stacked')) {\n                    this.#controls.classList.add('op-controls__stacked');\n                }\n                const className = `op-controls-layer__${layer}`;\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            } else if (layersExist) {\n                const className = 'op-controls-layer__center';\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            }\n\n            const layers = controls ? controls[position as keyof PlayerLayers] : null;\n            if (layers) {\n                // remove duplicate values in the same position\n                layers\n                    .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i)\n                    .forEach((el: string) => {\n                        const currentLayer = layersExist && !pos ? 'center' : layer;\n                        const className = `${el.charAt(0).toUpperCase()}${el.slice(1)}`;\n                        const item = new this.#controlEls[className](this.#player, pos || layer, currentLayer);\n                        if (el === 'settings') {\n                            this.#settings = item as Settings;\n                        }\n                        if (isVideoEl || (el !== 'fullscreen' && isAudioEl)) {\n                            this.#items[position].push(item);\n                        }\n                    });\n            }\n        });\n\n        // Append/prepend the custom items (if any) depending on their position:\n        // If position is right, always prepend so Settings and Fullscreen are the last items;\n        // otherwise, append new controls\n        this.#player.getCustomControls().forEach((item) => {\n            const [layer, pos] = item.position.split('-');\n            const currentLayer = layersExist && !pos ? 'center' : layer;\n            item.layer = currentLayer;\n            item.position = pos || layer;\n\n            if (typeof item.index === 'number') {\n                this.#items[item.position].splice(item.index, 0, item);\n            } else if (item.position === 'right') {\n                this.#items[item.position].unshift(item);\n            } else {\n                this.#items[item.position].push(item);\n            }\n        });\n    }\n\n    private _buildElements(): void {\n        // Loop controls to build them and register events\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._createCustomElement(item as ElementItem);\n                } else {\n                    (item as PlayerComponent).create();\n                }\n            });\n        });\n\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                const allowDefault = !this.#player.getOptions().detachMenus || item instanceof Settings;\n                const current = item as PlayerComponent;\n                if (allowDefault && !current.custom && typeof current.addSettings === 'function') {\n                    const menuItem = current.addSettings() as SettingsItem;\n                    if (this.#settings && Object.keys(menuItem).length) {\n                        this.#settings.addItem(\n                            menuItem.name,\n                            menuItem.key,\n                            menuItem.default,\n                            menuItem.subitems,\n                            menuItem.className\n                        );\n                    }\n                }\n            });\n        });\n\n        const e = addEvent('controlschanged');\n        this.#controls.dispatchEvent(e);\n    }\n\n    private _hideCustomMenu(menu: HTMLDivElement): void {\n        let timeout;\n        if (timeout && typeof window !== 'undefined') {\n            window.cancelAnimationFrame(timeout);\n        }\n\n        if (typeof window !== 'undefined') {\n            timeout = window.requestAnimationFrame(() => {\n                menu.setAttribute('aria-hidden', 'true');\n            });\n        }\n    }\n\n    private _toggleCustomMenu(event: Event, menu: HTMLDivElement, item: ElementItem): void {\n        const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n        menus.forEach((m) => {\n            if (m.getAttribute('aria-hidden') === 'false' && m.id !== menu.id) {\n                m.setAttribute('aria-hidden', 'true');\n            }\n        });\n        menu.setAttribute('aria-hidden', menu.getAttribute('aria-hidden') === 'true' ? 'false' : 'true');\n        if (typeof item.click === 'function') {\n            item.click(event);\n        }\n    }\n\n    private _createCustomElement(item: ElementItem): void {\n        const element = document.createElement(item.type);\n        element.tabIndex = 0;\n        element.id = item.id;\n        element.className = `op-controls__${item.id} op-control__${item.position} ${\n            item.showInAds ? '' : 'op-control__hide-in-ad'\n        }`;\n\n        if (item.styles) {\n            Object.assign(element.style, item.styles);\n        }\n\n        if (item.type === 'button' && item.icon) {\n            element.innerHTML = /\\.(jpg|png|svg|gif)$/.test(item.icon)\n                ? `<img src=\"${sanitize(item.icon)}\"${item.alt ? `alt=\"${sanitize(item.alt)}\"` : ''}>`\n                : sanitize(item.icon);\n        } else if (item.content) {\n            element.innerHTML = sanitize(item.content, false);\n        }\n        if (item.type === 'button' && item.title) {\n            element.title = sanitize(item.title);\n        }\n        if (item.type === 'img' && item.alt) {\n            (element as HTMLImageElement).alt = sanitize(item.alt);\n        }\n        if (item.type !== 'button' && item.click && typeof item.click === 'function') {\n            element.setAttribute('aria-role', 'button');\n        }\n\n        // In the event we have subitems for a button control, create menu and attach events for each item\n        if (item.type === 'button' && item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n            const menu = document.createElement('div');\n            menu.className = 'op-settings op-settings__custom';\n            menu.id = `${item.id}-menu`;\n            menu.setAttribute('aria-hidden', 'true');\n\n            const items = item.subitems.map((s) => {\n                let itemIcon = '';\n                if (s.icon) {\n                    itemIcon = /\\.(jpg|png|svg|gif)$/.test(s.icon)\n                        ? `<img src=\"${sanitize(s.icon)}\"${s.alt ? `alt=\"${sanitize(s.alt)}\"` : ''}>`\n                        : sanitize(s.icon, false);\n                }\n                return `<div class=\"op-settings__menu-item\" tabindex=\"0\" ${\n                    s.title ? `title=\"${s.title}\"` : ''\n                } role=\"menuitemradio\">\n                    <div class=\"op-settings__menu-label\" id=\"${s.id}\" data-value=\"${item.id}-${s.id}\">${itemIcon} ${\n                        s.label\n                    }</div>\n                </div>`;\n            });\n\n            menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\">${items.join('')}</div>`;\n            this.#player.getContainer().appendChild(menu);\n\n            item.subitems.forEach((subitem) => {\n                const menuItem = menu.querySelector(`#${subitem.id}`);\n                if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                    menuItem.addEventListener('click', subitem.click, EVENT_OPTIONS);\n                }\n            });\n\n            // Ensure to toggle menu, hide other settings menus and dispatch a general custom\n            // click event (if created)\n            element.addEventListener('click', (e) => this._toggleCustomMenu(e, menu, item), EVENT_OPTIONS);\n\n            this.#player\n                .getElement()\n                .addEventListener('controlshidden', () => this._hideCustomMenu(menu), EVENT_OPTIONS);\n        } else if (item.click && typeof item.click === 'function') {\n            element.addEventListener('click', item.click, EVENT_OPTIONS);\n        }\n        if (item.mouseenter && typeof item.mouseenter === 'function') {\n            element.addEventListener('mouseenter', item.mouseenter, EVENT_OPTIONS);\n        }\n        if (item.mouseleave && typeof item.mouseleave === 'function') {\n            element.addEventListener('mouseleave', item.mouseleave, EVENT_OPTIONS);\n        }\n        if (item.keydown && typeof item.keydown === 'function') {\n            element.addEventListener('keydown', item.keydown, EVENT_OPTIONS);\n        }\n        if (item.blur && typeof item.blur === 'function') {\n            element.addEventListener('blur', item.blur, EVENT_OPTIONS);\n        }\n        if (item.focus && typeof item.focus === 'function') {\n            element.addEventListener('focus', item.focus, EVENT_OPTIONS);\n        }\n        if (item.layer) {\n            if (item.layer === 'main') {\n                this.#player.getContainer().appendChild(element);\n            } else {\n                this.getLayer(item.layer).appendChild(element);\n            }\n        }\n\n        // If there's an initial set of operations to dispatch as soon as the control\n        // is created, dispatch them\n        if (item.init && typeof item.init === 'function') {\n            item.init(this.#player);\n        }\n    }\n\n    private _destroyCustomElement(item: ElementItem): void {\n        const control = this.getContainer().querySelector(`.op-controls__${item.id}`);\n        if (control) {\n            if (item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n                const menu = this.#player.getContainer().querySelector(`#${item.id}-menu`) as HTMLDivElement;\n                if (menu) {\n                    item.subitems.forEach((subitem) => {\n                        const menuItem = menu.querySelector(`#${subitem.id}`);\n                        if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                            menuItem.removeEventListener('click', subitem.click);\n                        }\n                    });\n\n                    control.removeEventListener('click', (e) => this._toggleCustomMenu(e, menu, item));\n\n                    this.#player.getElement().removeEventListener('controlshidden', () => this._hideCustomMenu(menu));\n                    menu.remove();\n                }\n            }\n            if (item.click && typeof item.click === 'function') {\n                control.removeEventListener('click', item.click);\n            }\n            if (item.mouseenter && typeof item.mouseenter === 'function') {\n                control.removeEventListener('mouseenter', item.mouseenter);\n            }\n            if (item.mouseleave && typeof item.mouseleave === 'function') {\n                control.removeEventListener('mouseleave', item.mouseleave);\n            }\n            if (item.keydown && typeof item.keydown === 'function') {\n                control.removeEventListener('keydown', item.keydown);\n            }\n            if (item.blur && typeof item.blur === 'function') {\n                control.removeEventListener('blur', item.blur);\n            }\n            if (item.focus && typeof item.focus === 'function') {\n                control.removeEventListener('focus', item.focus);\n            }\n            control.remove();\n\n            // If there's an initial set of operations to dispatch as soon as the control\n            // is created, dispatch them\n            if (item.destroy && typeof item.destroy === 'function') {\n                item.destroy(this.#player);\n            }\n        }\n    }\n}\n\nexport default Controls;\n","import { Level, Source } from '../interfaces';\n\nabstract class Native {\n    element: HTMLMediaElement;\n\n    media: Source;\n\n    promise: Promise<unknown>;\n\n    #customPlayer: any;\n\n    constructor(element: HTMLMediaElement, media: Source) {\n        this.element = element;\n        this.media = media;\n        this.promise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    abstract canPlayType(mimeType: string): boolean;\n\n    abstract load(): void;\n\n    abstract destroy(): void;\n\n    abstract set src(media: Source);\n\n    abstract get src(): Source;\n\n    abstract set level(value: number | string | Record<string, unknown>);\n\n    abstract get level(): number | string;\n\n    abstract get levels(): Level[];\n\n    set instance(customPlayer: any) {\n        this.#customPlayer = customPlayer;\n    }\n\n    get instance(): any {\n        return this.#customPlayer;\n    }\n\n    play(): Promise<void> {\n        return this.element.play();\n    }\n\n    pause(): void {\n        this.element.pause();\n    }\n\n    set volume(value: number) {\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    set muted(value: boolean) {\n        this.element.muted = value;\n    }\n\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set playbackRate(value: number) {\n        this.element.playbackRate = value;\n    }\n\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value: number) {\n        this.element.defaultPlaybackRate = value;\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        this.element.currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    get ended(): boolean {\n        return this.element.ended;\n    }\n}\n\nexport default Native;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isDashSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const dashjs: any;\n\nclass DashMedia extends Native {\n    #player: any;\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    #events: EventsList = {};\n\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n\n        this._assign = this._assign.bind(this);\n        this._preparePlayer = this._preparePlayer.bind(this);\n\n        this.promise =\n            typeof dashjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.dashjs.org/latest/dash.all.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(() => {\n            this.#player = dashjs.MediaPlayer().create();\n            this.instance = this.#player;\n        });\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && mimeType === 'application/dash+xml';\n    }\n\n    load(): void {\n        this._preparePlayer();\n        this.#player.attachSource(this.media.src);\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], this._assign);\n            });\n            this.#events = [];\n        }\n        this.#player.reset();\n    }\n\n    set src(media: Source) {\n        if (isDashSource(media)) {\n            this.destroy();\n            this.#player = dashjs.MediaPlayer().create();\n            this._preparePlayer();\n            this.#player.attachSource(media.src);\n\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player) {\n            const bitrates = this.#player.getBitrateInfoListFor('video');\n            if (bitrates.length) {\n                bitrates.forEach((item: number) => {\n                    if (bitrates[item]) {\n                        const { height, name } = bitrates[item];\n                        const level = {\n                            height,\n                            id: `${item}`,\n                            label: name || null,\n                        };\n                        levels.push(level);\n                    }\n                });\n            }\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        if (level === '0') {\n            this.#player.setAutoSwitchQuality(true);\n        } else {\n            this.#player.setAutoSwitchQuality(false);\n            this.#player.setQualityFor('video', level);\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.getQualityFor('video') : '-1';\n    }\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    private _assign(event: Event): void {\n        if (event.type === 'error') {\n            const details = {\n                detail: {\n                    message: event,\n                    type: 'M(PEG)-DASH',\n                },\n            };\n            const errorEvent = addEvent('playererror', details);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event.type, { detail: event });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _preparePlayer(): void {\n        this.#player.updateSettings({\n            debug: {\n                logLevel: dashjs.Debug.LOG_LEVEL_NONE,\n            },\n            streaming: {\n                fastSwitchEnabled: true,\n                scheduleWhilePaused: false,\n            },\n            ...((this.#options as Record<string, unknown>) || {}),\n        });\n        this.#player.initialize();\n        this.#player.attachView(this.element);\n        this.#player.setAutoPlay(false);\n    }\n}\n\nexport default DashMedia;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isFlvSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const flvjs: any;\n\nclass FlvMedia extends Native {\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n        this.element = element;\n        this.media = mediaSource;\n\n        this._create = this._create.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof flvjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/flv.js@latest/dist/flv.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && (mimeType === 'video/x-flv' || mimeType === 'video/flv');\n    }\n\n    load(): void {\n        this.#player.unload();\n        this.#player.detachMediaElement();\n        this.#player.attachMediaElement(this.element);\n        this.#player.load();\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        this.#player.destroy();\n        this.#player = null;\n    }\n\n    set src(media: Source) {\n        if (isFlvSource(media)) {\n            this.destroy();\n            this._create();\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const { configs, ...rest } = (this.#options as Record<string, unknown>) || {};\n\n        flvjs.LoggingControl.enableDebug = rest?.debug || false;\n        flvjs.LoggingControl.enableVerbose = rest?.debug || false;\n        const options = { ...rest, type: 'flv', url: this.media.src };\n        this.#player = flvjs.createPlayer(options, configs || {});\n        this.instance = this.#player;\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjsevents\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrortypes\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrordetails\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'error') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: `${data[0]}: ${data[1]} ${data[2].msg}`,\n                    type: 'FLV',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event, { detail: { data } });\n            this.element.dispatchEvent(e);\n        }\n    }\n}\n\nexport default FlvMedia;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventsList, Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS, SUPPORTS_HLS } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const Hls: any;\n\n// @see https://github.com/video-dev/hls.js/\nclass HlsMedia extends Native {\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    #recoverDecodingErrorDate = 0;\n\n    #recoverSwapAudioCodecDate = 0;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning\n    #options?: unknown;\n\n    #autoplay: boolean;\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, autoplay: boolean, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options || {};\n        this.element = element;\n        this.media = mediaSource;\n        this.#autoplay = autoplay;\n\n        this._create = this._create.bind(this);\n        this._play = this._play.bind(this);\n        this._pause = this._pause.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof Hls === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return SUPPORTS_HLS() && mimeType === 'application/x-mpegURL';\n    }\n\n    load(): void {\n        if (this.#player) {\n            this.#player.detachMedia();\n            this.#player.loadSource(this.media.src);\n            this.#player.attachMedia(this.element);\n        }\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n        this.element.removeEventListener('play', this._play);\n        this.element.removeEventListener('pause', this._pause);\n        if (this.#player) {\n            this.#player.destroy();\n            this.#player = null;\n        }\n    }\n\n    set src(media: Source) {\n        if (isHlsSource(media)) {\n            this.destroy();\n            this.#player = new Hls(this.#options);\n            this.#player.loadSource(media.src);\n            this.#player.attachMedia(this.element);\n\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        const formattedLevel = Number(level);\n        if (formattedLevel && formattedLevel > -1) {\n            this.#player.loadLevel = formattedLevel;\n        } else {\n            this.#player.currentLevel = formattedLevel;\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const autoplay = !!(this.element.preload === 'auto' || this.#autoplay);\n        (this.#options as Record<string, unknown>).autoStartLoad = autoplay;\n\n        this.#player = new Hls(this.#options);\n        this.instance = this.#player;\n        this.#events = Hls.Events;\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                this._assign(this.#events[event], args)\n            );\n        });\n\n        if (!autoplay) {\n            this.element.addEventListener('play', this._play, EVENT_OPTIONS);\n            this.element.addEventListener('pause', this._pause, EVENT_OPTIONS);\n        }\n    }\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    // @see https://github.com/video-dev/hls.js/blob/master/src/errors.js\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#runtime-events\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#errors\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'hlsError') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: data[1].details,\n                    type: 'HLS',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n\n            // borrowed from https://video-dev.github.io/hls.js/demo\n            const type = data[1].type as string;\n            const { fatal } = data[1];\n            const details = data[1];\n            if (fatal) {\n                switch (type) {\n                    case 'mediaError':\n                        const now = new Date().getTime();\n                        if (!this.#recoverDecodingErrorDate || now - this.#recoverDecodingErrorDate > 3000) {\n                            this.#recoverDecodingErrorDate = new Date().getTime();\n                            this.#player.recoverMediaError();\n                        } else if (!this.#recoverSwapAudioCodecDate || now - this.#recoverSwapAudioCodecDate > 3000) {\n                            this.#recoverSwapAudioCodecDate = new Date().getTime();\n                            console.warn('Attempting to swap Audio Codec and recover from media error');\n                            this.#player.swapAudioCodec();\n                            this.#player.recoverMediaError();\n                        } else {\n                            const msg = 'Cannot recover, last media error recovery failed';\n                            console.error(msg);\n                            const mediaEvent = addEvent(type, { detail: { data: details } });\n                            this.element.dispatchEvent(mediaEvent);\n                        }\n                        break;\n                    case 'networkError':\n                        const message = 'Network error';\n                        console.error(message);\n                        const networkEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(networkEvent);\n                        break;\n                    default:\n                        this.#player.destroy();\n                        const fatalEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(fatalEvent);\n                        break;\n                }\n            } else {\n                const err = addEvent(type, { detail: { data: details } });\n                this.element.dispatchEvent(err);\n            }\n        } else {\n            const details: Record<string, unknown> = data[1] as Record<string, unknown>;\n            if (event === 'hlsLevelLoaded' && details.live === true) {\n                this.element.setAttribute('op-live__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (\n                event === 'hlsLevelUpdated' &&\n                details.live === true &&\n                (details.totalduration as number) > DVR_THRESHOLD\n            ) {\n                this.element.setAttribute('op-dvr__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (event === 'hlsFragParsingMetadata') {\n                const metaEvent = addEvent('metadataready', { detail: { data: data[1] } });\n                this.element.dispatchEvent(metaEvent);\n            }\n            const e = addEvent(event, { detail: { data: data[1] } });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _play(): void {\n        if (this.#player) {\n            this.#player.startLoad();\n        }\n    }\n\n    private _pause(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n    }\n}\n\nexport default HlsMedia;\n","import { Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio, isVideo } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\nclass HTML5Media extends Native {\n    #currentLevel: Level;\n\n    #levelList: Level[] = [];\n\n    #isStreaming = false;\n\n    #retryCount = 0;\n\n    #started = false;\n\n    #timer: number;\n\n    constructor(element: HTMLMediaElement, mediaFile: Source) {\n        super(element, mediaFile);\n\n        if (!isAudio(element) && !isVideo(element)) {\n            throw new TypeError('Native method only supports video/audio tags');\n        }\n\n        this._clearTimeout = this._clearTimeout.bind(this);\n        this._setTimeout = this._setTimeout.bind(this);\n        this._dispatchError = this._dispatchError.bind(this);\n        this._isDvrEnabled = this._isDvrEnabled.bind(this);\n        this._readMediadataInfo = this._readMediadataInfo.bind(this);\n\n        this.#isStreaming = isHlsSource(mediaFile);\n        this.element.addEventListener('playing', this._clearTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('stalled', this._setTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('error', this._dispatchError, EVENT_OPTIONS);\n        this.element.addEventListener('loadeddata', this._isDvrEnabled, EVENT_OPTIONS);\n        this.element.textTracks.addEventListener('addtrack', this._readMediadataInfo, EVENT_OPTIONS);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return !!this.element.canPlayType(mimeType).replace('no', '');\n    }\n\n    load(): void {\n        this.element.load();\n    }\n\n    destroy(): void {\n        this.element.removeEventListener('playing', this._clearTimeout);\n        this.element.removeEventListener('stalled', this._setTimeout);\n        this.element.removeEventListener('error', this._dispatchError);\n        this.element.removeEventListener('loadeddata', this._isDvrEnabled);\n        this.element.textTracks.removeEventListener('addtrack', this._readMediadataInfo);\n    }\n\n    get levels(): Level[] {\n        if (!this.#levelList.length) {\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const level = {\n                    height: 0,\n                    id: `${i}`,\n                    label: levels[i].getAttribute('title') || '',\n                };\n                this.#levelList.push(level);\n            }\n        }\n        return this.#levelList;\n    }\n\n    set level(level: string) {\n        const idx = this.#levelList.findIndex((item) => item.id === level);\n        if (idx > -1) {\n            this.#currentLevel = this.levels[idx];\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const source = levels[i].getAttribute('src');\n                if (source && parseInt(this.#currentLevel.id, 10) === i) {\n                    this.element.src = source;\n                }\n            }\n        }\n    }\n\n    get level(): string {\n        return this.#currentLevel?.id || '-1';\n    }\n\n    set src(media: Source) {\n        this.element.src = media.src;\n    }\n\n    private _isDvrEnabled(): void {\n        const time = this.element.seekable.end(this.element.seekable.length - 1) - this.element.seekable.start(0);\n        if (this.#isStreaming && time > DVR_THRESHOLD && !this.element.getAttribute('op-dvr__enabled')) {\n            this.element.setAttribute('op-dvr__enabled', 'true');\n            const timeEvent = addEvent('timeupdate');\n            this.element.dispatchEvent(timeEvent);\n        }\n    }\n\n    private _readMediadataInfo(e: TrackEvent): void {\n        const target = e;\n        if (target?.track?.kind === 'metadata') {\n            target.track.mode = 'hidden';\n            target.track.addEventListener(\n                'cuechange',\n                (event) => {\n                    const track = event.target as TextTrack;\n                    const cue = track.activeCues ? track.activeCues[0] : null;\n                    if (cue) {\n                        const metaDataEvent = addEvent('metadataready', { detail: cue });\n                        this.element.dispatchEvent(metaDataEvent);\n                    }\n                },\n                EVENT_OPTIONS\n            );\n        }\n    }\n\n    private _setTimeout(): void {\n        if (!this.#started && window !== undefined) {\n            this.#started = true;\n            this.#timer = window.setInterval(() => {\n                if (this.#retryCount >= 30) {\n                    clearInterval(this.#timer);\n                    const message = 'Media download failed part-way due to a network error';\n                    const details = {\n                        detail: {\n                            data: { message, error: 2 },\n                            message,\n                            type: 'HTML5',\n                        },\n                    };\n                    const errorEvent = addEvent('playererror', details);\n                    this.element.dispatchEvent(errorEvent);\n                    this.#retryCount = 0;\n                    this.#started = false;\n                } else {\n                    this.#retryCount++;\n                }\n            }, 1000);\n        }\n    }\n\n    private _clearTimeout(): void {\n        if (this.#timer) {\n            clearInterval(this.#timer);\n            this.#retryCount = 0;\n            this.#started = false;\n        }\n    }\n\n    private _dispatchError(e: Event): void {\n        let defaultMessage;\n        const target = e.target as HTMLMediaElement;\n        const error = target?.error;\n        switch (error?.code) {\n            case error?.MEDIA_ERR_ABORTED:\n                defaultMessage = 'Media playback aborted';\n                break;\n            case error?.MEDIA_ERR_NETWORK:\n                defaultMessage = 'Media download failed part-way due to a network error';\n                break;\n            case error?.MEDIA_ERR_DECODE:\n                defaultMessage = `Media playback aborted due to a corruption problem or because the\n                    media used features your browser did not support.`;\n                break;\n            case error?.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                defaultMessage = `Media could not be loaded, either because the server or network failed\n                    or because the format is not supported.`;\n                break;\n            default:\n                defaultMessage = 'Unknown error occurred.';\n                break;\n        }\n        const details = {\n            detail: {\n                data: { ...e, message: defaultMessage, error: error?.code },\n                message: defaultMessage,\n                type: 'HTML5',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.element.dispatchEvent(errorEvent);\n    }\n}\n\nexport default HTML5Media;\n","import { CustomMedia, Level, PlayerLayers, PlayerOptions, Source } from './interfaces';\nimport DashMedia from './media/dash';\nimport FlvMedia from './media/flv';\nimport HlsMedia from './media/hls';\nimport HTML5Media from './media/html5';\nimport * as source from './utils/media';\n\nclass Media {\n    #element: HTMLMediaElement;\n\n    #media: HTML5Media | HlsMedia | DashMedia | any;\n\n    #files: Source[];\n\n    #promisePlay: Promise<void>;\n\n    #options: PlayerOptions;\n\n    #autoplay: boolean;\n\n    #mediaLoaded = false;\n\n    #customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    #currentSrc: Source;\n\n    constructor(element: HTMLMediaElement, options: PlayerOptions, autoplay: boolean, customMedia: CustomMedia) {\n        this.#element = element;\n        this.#options = options;\n        this.#files = this._getMediaFiles();\n        this.#customMedia = customMedia;\n        this.#autoplay = autoplay;\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return this.#media.canPlayType(mimeType);\n    }\n\n    async load(): Promise<void> {\n        if (this.#mediaLoaded) {\n            return;\n        }\n\n        this.#mediaLoaded = true;\n\n        if (!this.#files.length) {\n            throw new TypeError('Media not set');\n        }\n\n        // Remove previous media if any is detected and it's different from current one\n        if (this.#media && typeof this.#media.destroy === 'function') {\n            const sameMedia = this.#files.length === 1 && this.#files[0].src === this.#media.media.src;\n            if (!sameMedia) {\n                this.#media.destroy();\n            }\n        }\n\n        // Loop until first playable source is found\n        this.#files.some((media) => {\n            try {\n                this.#media = this._invoke(media);\n            } catch (e) {\n                this.#media = new HTML5Media(this.#element, media);\n            }\n\n            return this.#media.canPlayType(media.type);\n        });\n\n        try {\n            if (this.#media === null) {\n                throw new TypeError('Media cannot be played with any valid media type');\n            }\n\n            await this.#media.promise;\n            this.#media.load();\n        } catch (e) {\n            // destroy media\n            if (this.#media) {\n                this.#media.destroy();\n            }\n            throw e;\n        }\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async play(): Promise<void> {\n        if (!this.#mediaLoaded) {\n            await this.load();\n            this.#mediaLoaded = false;\n        } else {\n            await this.#media.promise;\n        }\n        this.#promisePlay = this.#media.play();\n        return this.#promisePlay;\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async pause(): Promise<void> {\n        if (this.#promisePlay !== undefined) {\n            await this.#promisePlay;\n        }\n        this.#media.pause();\n    }\n\n    destroy(): void {\n        if (this.#media) {\n            this.#media.destroy();\n        }\n    }\n\n    set src(media) {\n        if (typeof media === 'string') {\n            this.#files.push({\n                src: media,\n                type: source.predictMimeType(media, this.#element),\n            });\n        } else if (Array.isArray(media)) {\n            this.#files = media;\n        } else if (typeof media === 'object') {\n            this.#files.push(media);\n        }\n\n        // Remove files without source\n        this.#files = this.#files.filter((file) => file.src);\n\n        if (this.#files.length > 0) {\n            const [file] = this.#files;\n            // Save copy of original file to restore it when player is destroyed\n            if (this.#element.src) {\n                this.#element.setAttribute('data-op-file', this.#files[0].src);\n            }\n\n            this.#element.src = file.src;\n            this.#currentSrc = file;\n            if (this.#media) {\n                this.#media.src = file;\n            }\n        } else {\n            this.#element.src = '';\n        }\n    }\n\n    get src(): Source[] {\n        return this.#files;\n    }\n\n    get current(): Source {\n        return this.#currentSrc;\n    }\n\n    set mediaFiles(sources: Source[]) {\n        this.#files = sources;\n    }\n\n    get mediaFiles(): Source[] {\n        return this.#files;\n    }\n\n    set volume(value: number) {\n        if (this.#media) {\n            this.#media.volume = value;\n        }\n    }\n\n    get volume(): number {\n        return this.#media ? this.#media.volume : this.#element.volume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#media) {\n            this.#media.muted = value;\n        }\n    }\n\n    get muted(): boolean {\n        return this.#media ? this.#media.muted : this.#element.muted;\n    }\n\n    set playbackRate(value) {\n        if (this.#media) {\n            this.#media.playbackRate = value;\n        }\n    }\n\n    get playbackRate(): number {\n        return this.#media ? this.#media.playbackRate : this.#element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value) {\n        if (this.#media) {\n            this.#media.defaultPlaybackRate = value;\n        }\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.#media ? this.#media.defaultPlaybackRate : this.#element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        if (this.#media) {\n            this.#media.currentTime = value;\n        }\n    }\n\n    get currentTime(): number {\n        return this.#media ? this.#media.currentTime : this.#element.currentTime;\n    }\n\n    get duration(): number {\n        const duration = this.#media ? this.#media.duration : this.#element.duration;\n        // To seek backwards in a live streaming (mobile devices)\n        if (duration === Infinity && this.#element.seekable && this.#element.seekable.length) {\n            return this.#element.seekable.end(0);\n        }\n        return duration;\n    }\n\n    get paused(): boolean {\n        return this.#media ? this.#media.paused : this.#element.paused;\n    }\n\n    get ended(): boolean {\n        return this.#media ? this.#media.ended : this.#element.ended;\n    }\n\n    set loaded(loaded: boolean) {\n        this.#mediaLoaded = loaded;\n    }\n\n    get loaded(): boolean {\n        return this.#mediaLoaded;\n    }\n\n    set level(value: number | string | Level) {\n        if (this.#media) {\n            this.#media.level = value;\n        }\n    }\n\n    get level(): number | string | Level {\n        return this.#media ? this.#media.level : -1;\n    }\n\n    get levels(): Level[] {\n        return this.#media ? this.#media.levels : [];\n    }\n\n    get instance(): Media | null {\n        return this.#media ? this.#media.instance : null;\n    }\n\n    private _getMediaFiles(): Source[] {\n        const mediaFiles: Source[] = [];\n        const sourceTags = this.#element.querySelectorAll('source');\n        const nodeSource = this.#element.src;\n\n        // Consider if node contains the `src` and `type` attributes\n        if (nodeSource) {\n            mediaFiles.push({\n                src: nodeSource,\n                type: this.#element.getAttribute('type') || source.predictMimeType(nodeSource, this.#element),\n            });\n        }\n\n        // test <source> types to see if they are usable\n        for (let i = 0, total = sourceTags.length; i < total; i++) {\n            const item = sourceTags[i];\n            const { src } = item;\n            mediaFiles.push({\n                src,\n                type: item.getAttribute('type') || source.predictMimeType(src, this.#element),\n            });\n\n            // If tag has the attribute `preload` set as `none`, the current media will\n            // be the first one on the list of sources\n            if (i === 0) {\n                const [file] = mediaFiles;\n                this.#currentSrc = file;\n            }\n        }\n\n        if (!mediaFiles.length) {\n            mediaFiles.push({\n                src: '',\n                type: source.predictMimeType('', this.#element),\n            });\n        }\n\n        return mediaFiles;\n    }\n\n    private _invoke(media: Source): HlsMedia | DashMedia | HTML5Media | any {\n        const playHLSNatively =\n            this.#element.canPlayType('application/vnd.apple.mpegurl') ||\n            this.#element.canPlayType('application/x-mpegURL');\n\n        this.#currentSrc = media;\n\n        const { layers } = this.#options.controls || {};\n\n        let activeLevels = false;\n        if (layers) {\n            Object.keys(layers).forEach((layer) => {\n                const current = layers ? layers[layer as keyof PlayerLayers] : null;\n                if (current && current.indexOf('levels') > -1) {\n                    activeLevels = true;\n                }\n            });\n        }\n\n        if (Object.keys(this.#customMedia.media).length) {\n            let customRef: any;\n            this.#customMedia.rules.forEach((rule) => {\n                const type = rule(media.src);\n                if (type) {\n                    const customMedia = this.#customMedia.media[type];\n                    const customOptions = this.#options[this.#customMedia.optionsKey[type]] || undefined;\n                    customRef = customMedia(this.#element, media, this.#autoplay, customOptions);\n                }\n            });\n            if (customRef) {\n                customRef.create();\n                return customRef;\n            }\n            return new HTML5Media(this.#element, media);\n        }\n        if (source.isHlsSource(media)) {\n            if (playHLSNatively && this.#options.forceNative && !activeLevels) {\n                return new HTML5Media(this.#element, media);\n            }\n            const hlsOptions = this.#options?.hls || undefined;\n            return new HlsMedia(this.#element, media, this.#autoplay, hlsOptions);\n        }\n        if (source.isDashSource(media)) {\n            const dashOptions = this.#options?.dash || undefined;\n            return new DashMedia(this.#element, media, dashOptions);\n        }\n        if (source.isFlvSource(media)) {\n            const flvOptions = this.#options?.flv || {\n                debug: false,\n                type: 'flv',\n                url: media.src,\n            };\n            return new FlvMedia(this.#element, media, flvOptions);\n        }\n\n        return new HTML5Media(this.#element, media);\n    }\n}\n\nexport default Media;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AdsOptions, Source } from '../interfaces';\nimport Media from '../media';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from '../utils/constants';\nimport { addEvent, isAudio, isVideo, isXml, loadScript } from '../utils/general';\n\ndeclare const google: any;\n\n// @see https://developers.google.com/interactive-media-ads/\nclass Ads {\n    loadPromise: unknown;\n\n    loadedAd = false;\n\n    #ended = false;\n\n    #done = false;\n\n    #active = false;\n\n    #started = false;\n\n    #intervalTimer = 0;\n\n    #volume: number;\n\n    #muted = false;\n\n    #duration = 0;\n\n    #currentTime = 0;\n\n    // @see https://tinyurl.com/ybjas4ut\n    #manager: any = null;\n\n    #player: Player;\n\n    #media: Media;\n\n    #element: HTMLMediaElement;\n\n    #events: string[] = [];\n\n    #ads: string | string[];\n\n    #promise: Promise<void>;\n\n    // @see https://tinyurl.com/ycwp4ufd\n    #loader: any;\n\n    #container?: HTMLDivElement;\n\n    #customClickContainer?: HTMLDivElement;\n\n    #skipElement?: HTMLElement;\n\n    // @see https://tinyurl.com/ya3zksso\n    #displayContainer: any;\n\n    // @see https://tinyurl.com/ya8bxjf4\n    #request: any;\n\n    #autostart = false;\n\n    #autostartMuted = false;\n\n    #playTriggered = false;\n\n    #options: AdsOptions;\n\n    #currentIndex = 0;\n\n    #originalVolume: number;\n\n    #preloadContent: any;\n\n    #lastTimePaused = 0;\n\n    #mediaSources: Source[] = [];\n\n    #mediaStarted = false;\n\n    #adEvent: any = null;\n\n    constructor(\n        player: Player,\n        ads: string | string[],\n        autostart?: boolean,\n        autostartMuted?: boolean,\n        options?: AdsOptions\n    ) {\n        const defaultOpts: AdsOptions = {\n            autoPlayAdBreaks: true,\n            customClick: {\n                enabled: false,\n                label: 'Click here for more info',\n            },\n            audioSkip: {\n                enabled: true,\n                label: 'Skip Ad',\n                remainingLabel: 'Skip in [[secs]] seconds',\n            },\n            debug: false,\n            enablePreloading: false,\n            language: 'en',\n            loop: false,\n            numRedirects: 4,\n            publisherId: undefined,\n            sdkPath: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n            sessionId: undefined,\n            src: [],\n            vpaidMode: 'enabled',\n        };\n        this.#player = player;\n        this.#ads = ads;\n        this.#media = player.getMedia();\n        this.#element = player.getElement();\n        this.#autostart = autostart || false;\n        this.#muted = player.getElement().muted;\n        this.#autostartMuted = autostartMuted || false;\n        this.#options = { ...defaultOpts, ...options };\n        if (options?.customClick && Object.keys(options.customClick).length) {\n            this.#options.customClick = { ...defaultOpts.customClick, ...options.customClick };\n        }\n        this.#playTriggered = false;\n        this.#originalVolume = this.#element.volume;\n        this.#volume = this.#originalVolume;\n\n        const path = this.#options?.debug\n            ? this.#options?.sdkPath?.replace(/(\\.js$)/, '_debug.js')\n            : this.#options?.sdkPath;\n\n        this.load = this.load.bind(this);\n        this.resizeAds = this.resizeAds.bind(this);\n        this._handleClickInContainer = this._handleClickInContainer.bind(this);\n        this._handleSkipAds = this._handleSkipAds.bind(this);\n        this._loaded = this._loaded.bind(this);\n        this._error = this._error.bind(this);\n        this._assign = this._assign.bind(this);\n        this._contentLoadedAction = this._contentLoadedAction.bind(this);\n        this._loadedMetadataHandler = this._loadedMetadataHandler.bind(this);\n        this._contentEndedListener = this._contentEndedListener.bind(this);\n        this._handleResizeAds = this._handleResizeAds.bind(this);\n        this._onContentPauseRequested = this._onContentPauseRequested.bind(this);\n        this._onContentResumeRequested = this._onContentResumeRequested.bind(this);\n\n        this.#promise =\n            path && (typeof google === 'undefined' || typeof google.ima === 'undefined')\n                ? loadScript(path)\n                : new Promise((resolve) => {\n                      resolve();\n                  });\n\n        this.#promise\n            .then(() => {\n                this.load();\n            })\n            .catch((error) => {\n                let message = 'Ad script could not be loaded; please check if you have an AdBlock ';\n                message += 'turned on, or if you provided a valid URL is correct';\n                console.error(`Ad error: ${message}.`);\n\n                const details = {\n                    detail: {\n                        data: error,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            });\n    }\n\n    load(force = false): void {\n        if (\n            typeof google === 'undefined' ||\n            !google.ima ||\n            (!force && this.loadedAd && this.#options.autoPlayAdBreaks)\n        ) {\n            return;\n        }\n\n        // If we have set `autoPlayAdBreaks` to false and haven't set the force flag, don't load ads yet\n        if (!this.#options.autoPlayAdBreaks && !force) {\n            return;\n        }\n\n        this.loadedAd = true;\n\n        const existingContainer = this.#player.getContainer().querySelector('.op-ads');\n        if (existingContainer && existingContainer.parentNode) {\n            existingContainer.parentNode.removeChild(existingContainer);\n        }\n\n        this.#started = true;\n        this.#container = document.createElement('div');\n        this.#container.className = 'op-ads';\n        this.#container.tabIndex = -1;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.#container, this.#element.nextSibling);\n        }\n        this.#container.addEventListener('click', this._handleClickInContainer);\n\n        if (this.#options.customClick?.enabled) {\n            this.#customClickContainer = document.createElement('div');\n            this.#customClickContainer.className = 'op-ads__click-container';\n            this.#customClickContainer.innerHTML = `<div class=\"op-ads__click-label\">${\n                this.#options.customClick.label\n            }</div>`;\n            if (this.#element.parentElement) {\n                this.#element.parentElement.insertBefore(this.#customClickContainer, this.#element.nextSibling);\n            }\n        }\n\n        if (isAudio(this.#element) && this.#options.audioSkip?.enabled) {\n            if (this.#options.audioSkip?.element) {\n                const { element } = this.#options.audioSkip || {};\n                if (typeof element === 'string') {\n                    const target = document.getElementById(element);\n                    if (target) {\n                        this.#skipElement = target;\n                    }\n                } else if (element instanceof HTMLElement) {\n                    this.#skipElement = element;\n                }\n            } else {\n                this.#skipElement = document.createElement('button');\n                this.#skipElement.className = 'op-ads__skip hidden';\n                this.#player.getControls().getContainer().appendChild(this.#skipElement);\n            }\n            if (this.#skipElement) {\n                this.#skipElement.addEventListener('click', this._handleSkipAds, EVENT_OPTIONS);\n            }\n        }\n\n        this.#mediaSources = this.#media.src;\n        const vpaidModeMap: Record<string, unknown> = {\n            disabled: google.ima.ImaSdkSettings.VpaidMode.DISABLED,\n            enabled: google.ima.ImaSdkSettings.VpaidMode.ENABLED,\n            insecure: google.ima.ImaSdkSettings.VpaidMode.INSECURE,\n        };\n\n        google.ima.settings.setVpaidMode(vpaidModeMap[this.#options.vpaidMode || 'enabled']);\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(true);\n        google.ima.settings.setAutoPlayAdBreaks(this.#options.autoPlayAdBreaks);\n        google.ima.settings.setNumRedirects(this.#options.numRedirects);\n        google.ima.settings.setLocale(this.#options.language);\n        if (this.#options.sessionId) {\n            google.ima.settings.setSessionId(this.#options.sessionId);\n        }\n        if (this.#options.publisherId) {\n            google.ima.settings.setPpid(this.#options.publisherId);\n        }\n        google.ima.settings.setPlayerType('openplayerjs');\n        google.ima.settings.setPlayerVersion('3.0.0');\n\n        this.#displayContainer = new google.ima.AdDisplayContainer(\n            this.#container,\n            this.#element,\n            this.#customClickContainer\n        );\n\n        this.#loader = new google.ima.AdsLoader(this.#displayContainer);\n        this.#loader.addEventListener(\n            google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n            this._loaded,\n            EVENT_OPTIONS\n        );\n\n        this.#loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error, EVENT_OPTIONS);\n\n        // Create responsive ad\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this._handleResizeAds, EVENT_OPTIONS);\n        }\n        this.#element.addEventListener('loadedmetadata', this._handleResizeAds, EVENT_OPTIONS);\n\n        // Request Ads automatically if `autoplay` was set\n        if (\n            this.#autostart === true ||\n            this.#autostartMuted === true ||\n            force === true ||\n            this.#options.enablePreloading === true ||\n            this.#playTriggered === true\n        ) {\n            if (!this.#done) {\n                this.#done = true;\n                this.#displayContainer.initialize();\n            }\n            this._requestAds();\n        }\n    }\n\n    async play(): Promise<void> {\n        if (!this.#done) {\n            this.#playTriggered = true;\n            this._initNotDoneAds();\n            return;\n        }\n\n        if (this.#manager) {\n            try {\n                // No timer interval and no Ad active means it's a potential initial ad play\n                if (!this.#intervalTimer && this.#active === false) {\n                    this.#manager.start();\n                } else {\n                    this.#manager.resume();\n                }\n                this.#active = true;\n                const e = addEvent('play');\n                this.#element.dispatchEvent(e);\n            } catch (err) {\n                this._resumeMedia();\n            }\n        }\n    }\n\n    pause(): void {\n        if (this.#manager) {\n            this.#active = false;\n            this.#manager.pause();\n            const e = addEvent('pause');\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    destroy(): void {\n        if (this.#manager) {\n            this.#manager.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n\n            if (this.#events) {\n                this.#events.forEach((event) => {\n                    this.#manager.removeEventListener(event, this._assign);\n                });\n            }\n        }\n\n        this.#events = [];\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.removeEventListener(event, mouseEvents[event]);\n            }\n        });\n\n        if (this.#loader) {\n            this.#loader.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n            this.#loader.removeEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this._loaded);\n        }\n\n        const destroy = !Array.isArray(this.#ads) || this.#currentIndex > this.#ads.length;\n        if (this.#manager && destroy) {\n            this.#manager.destroy();\n        }\n\n        if (this.#options.customClick?.enabled && this.#customClickContainer) {\n            this.#customClickContainer.remove();\n        }\n\n        if (this.#options.audioSkip?.enabled && this.#skipElement) {\n            this.#skipElement.removeEventListener('click', this._handleSkipAds);\n            this.#skipElement.remove();\n        }\n\n        if (IS_IOS || IS_ANDROID) {\n            this.#element.removeEventListener('loadedmetadata', this._contentLoadedAction);\n        }\n        this.#element.removeEventListener('loadedmetadata', this._handleResizeAds);\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this._handleResizeAds);\n        }\n\n        if (this.#container) {\n            this.#container.removeEventListener('click', this._handleClickInContainer);\n            this.#container.remove();\n        }\n        this.loadPromise = null;\n        this.loadedAd = false;\n        this.#done = false;\n        this.#playTriggered = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        this.#adEvent = null;\n    }\n\n    resizeAds(width?: number, height?: number): void {\n        if (this.#manager) {\n            const target = this.#element;\n            const mode =\n                target.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL;\n\n            let formattedWidth = width;\n            const percentageWidth = width ? width.toString() : '';\n            if (width && percentageWidth.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedWidth = this.#element.parentElement.offsetWidth * (parseInt(percentageWidth, 10) / 100);\n                }\n            }\n\n            let formattedHeight = height;\n            const percentageHeight = height ? height.toString() : '';\n            if (height && percentageHeight.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedHeight = this.#element.parentElement.offsetHeight * (parseInt(percentageHeight, 10) / 100);\n                }\n            }\n\n            let timeout;\n\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame(() => {\n                    this.#manager.resize(\n                        formattedWidth || target.offsetWidth,\n                        formattedHeight || target.offsetHeight,\n                        mode\n                    );\n                });\n            }\n        }\n    }\n\n    getAdsManager(): unknown {\n        return this.#manager;\n    }\n\n    getAdsLoader(): any {\n        return this.#loader;\n    }\n\n    started(): boolean {\n        return this.#started;\n    }\n\n    set src(source: string | string[]) {\n        this.#ads = source;\n    }\n\n    set isDone(value: boolean) {\n        this.#done = value;\n    }\n\n    set playRequested(value: boolean) {\n        this.#playTriggered = value;\n    }\n\n    set volume(value: number) {\n        if (this.#manager) {\n            this.#volume = value;\n            this.#manager.setVolume(value);\n            this._setMediaVolume(value);\n            this.#muted = value === 0;\n        }\n    }\n\n    get volume(): number {\n        return this.#manager ? this.#manager.getVolume() : this.#originalVolume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#manager) {\n            if (value) {\n                this.#manager.setVolume(0);\n                this.#muted = true;\n                this._setMediaVolume(0);\n            } else {\n                this.#manager.setVolume(this.#volume);\n                this.#muted = false;\n                this._setMediaVolume(this.#volume);\n            }\n        }\n    }\n\n    get muted(): boolean {\n        return this.#muted;\n    }\n\n    set currentTime(value: number) {\n        this.#currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.#currentTime;\n    }\n\n    get duration(): number {\n        return this.#duration;\n    }\n\n    get paused(): boolean {\n        return !this.#active;\n    }\n\n    get ended(): boolean {\n        return this.#ended;\n    }\n\n    private _assign(event: any): void {\n        const ad = event.getAd();\n        if (ad) {\n            this.#adEvent = ad;\n        }\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                if (!ad.isLinear()) {\n                    this._onContentResumeRequested();\n                } else {\n                    if (IS_IPHONE && isVideo(this.#element)) {\n                        this.#element.controls = false;\n                    }\n                    this.#duration = ad.getDuration();\n                    this.#currentTime = ad.getDuration();\n                    if (!this.#mediaStarted && !IS_IOS && !IS_ANDROID) {\n                        const waitingEvent = addEvent('waiting');\n                        this.#element.dispatchEvent(waitingEvent);\n\n                        const loadedEvent = addEvent('loadedmetadata');\n                        this.#element.dispatchEvent(loadedEvent);\n\n                        this.resizeAds();\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.STARTED:\n                if (ad.isLinear()) {\n                    if (\n                        this.#element.parentElement &&\n                        !this.#element.parentElement.classList.contains('op-ads--active')\n                    ) {\n                        this.#element.parentElement.classList.add('op-ads--active');\n                    }\n\n                    if (!this.#media.paused) {\n                        this.#media.pause();\n                    }\n                    this.#active = true;\n                    const playEvent = addEvent('play');\n                    this.#element.dispatchEvent(playEvent);\n                    let resized;\n\n                    if (!resized) {\n                        this.resizeAds();\n                        resized = true;\n                    }\n\n                    if (this.#media.ended) {\n                        this.#ended = false;\n                        const endEvent = addEvent('adsmediaended');\n                        this.#element.dispatchEvent(endEvent);\n                    }\n\n                    if (typeof window !== 'undefined') {\n                        this.#intervalTimer = window.setInterval(() => {\n                            if (this.#active === true) {\n                                this.#currentTime = Math.round(this.#manager.getRemainingTime());\n                                const timeEvent = addEvent('timeupdate');\n                                this.#element.dispatchEvent(timeEvent);\n                            }\n                        }, 350);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.SKIPPED:\n                if (ad.isLinear()) {\n                    if (event.type === google.ima.AdEvent.Type.SKIPPED) {\n                        const skipEvent = addEvent('adsskipped');\n                        this.#element.dispatchEvent(skipEvent);\n                    }\n\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.#active = false;\n                    clearInterval(this.#intervalTimer);\n                }\n                break;\n            case google.ima.AdEvent.Type.VOLUME_CHANGED:\n                this._setMediaVolume(this.volume);\n                break;\n            case google.ima.AdEvent.Type.VOLUME_MUTED:\n                if (ad.isLinear()) {\n                    const volumeEvent = addEvent('volumechange');\n                    this.#element.dispatchEvent(volumeEvent);\n                }\n                break;\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                if (ad.isLinear()) {\n                    this.#active = false;\n                    this.#ended = true;\n                    this.#intervalTimer = 0;\n                    this.#muted = false;\n                    this.#started = false;\n                    this.#adEvent = null;\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.destroy();\n                    if (this.#element.currentTime >= this.#element.duration) {\n                        const endedEvent = addEvent('ended');\n                        this.#element.dispatchEvent(endedEvent);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.CLICK:\n                const pauseEvent = addEvent('pause');\n                this.#element.dispatchEvent(pauseEvent);\n                break;\n            case google.ima.AdEvent.Type.AD_BREAK_READY:\n                if (!this.#options.autoPlayAdBreaks) {\n                    this.play();\n                }\n                break;\n            case google.ima.AdEvent.Type.AD_PROGRESS:\n                const progressData = event.getAdData();\n                const offset = this.#adEvent ? this.#adEvent.getSkipTimeOffset() : -1;\n                if (this.#skipElement) {\n                    if (offset !== -1) {\n                        const canSkip = this.#manager.getAdSkippableState();\n                        const remainingTime = Math.ceil(offset - progressData.currentTime);\n                        this.#skipElement.classList.remove('hidden');\n                        if (canSkip) {\n                            this.#skipElement.textContent = this.#options.audioSkip?.label || '';\n                            this.#skipElement.classList.remove('disabled');\n                        } else {\n                            this.#skipElement.textContent =\n                                this.#options.audioSkip?.remainingLabel.replace('[[secs]]', remainingTime.toString()) ||\n                                '';\n                            this.#skipElement.classList.add('disabled');\n                        }\n                    } else {\n                        this.#skipElement.classList.add('hidden');\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        // Assign events prefixed with `ads` to main element so user\n        // can listen to these events, except if the system detects a non-fatal error\n        if (event.type === google.ima.AdEvent.Type.LOG) {\n            const adData = event.getAdData();\n            if (adData.adError) {\n                const message = adData.adError.getMessage();\n                console.warn(`Ad warning: Non-fatal error occurred: ${message}`);\n                const details = {\n                    detail: {\n                        data: adData.adError,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            }\n        } else {\n            const e = addEvent(`ads${event.type}`);\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.ErrorCode\n    private _error(event: any): void {\n        const error = event.getError();\n        const details = {\n            detail: {\n                data: error,\n                message: error.toString(),\n                type: 'Ads',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.#element.dispatchEvent(errorEvent);\n\n        // @see https://support.google.com/admanager/answer/4442429?hl=en\n        const fatalErrorCodes = [\n            100, 101, 102, 300, 301, 302, 303, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 500, 501, 502, 503,\n            900, 901, 1005,\n        ];\n\n        if (Array.isArray(this.#ads) && this.#ads.length > 1 && this.#currentIndex < this.#ads.length - 1) {\n            this.#currentIndex++;\n            this.destroy();\n            this.#started = true;\n            this.#playTriggered = true;\n            this.load(true);\n            console.warn(`Ad warning: ${error.toString()}`);\n        } else {\n            // Unless there's a fatal error, do not destroy the Ads manager\n            if (fatalErrorCodes.indexOf(error.getErrorCode()) > -1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                console.error(`Ad error: ${error.toString()}`);\n            } else {\n                console.warn(`Ad warning: ${error.toString()}`);\n            }\n            this.#adEvent = null;\n            if (this.#autostart === true || this.#autostartMuted === true || this.#started === true) {\n                this.#active = false;\n                // Sometimes, due to pre-fetch issues, Ads could report an error, but the SDK is able to\n                // play Ads, so check if src was set to determine what action to take\n                this._resumeMedia();\n            }\n        }\n    }\n\n    private _loaded(managerLoadedEvent: any): void {\n        const adsRenderingSettings = new google.ima.AdsRenderingSettings();\n        adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = false;\n        adsRenderingSettings.enablePreloading = this.#options.enablePreloading;\n        // Get the ads manager.\n        this.#manager = managerLoadedEvent.getAdsManager(this.#element, adsRenderingSettings);\n        this._start(this.#manager);\n        this.loadPromise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    private _start(manager: any): void {\n        if (this.#customClickContainer && manager.isCustomClickTrackingUsed()) {\n            this.#customClickContainer.classList.add('op-ads__click-container--visible');\n        }\n        // Add listeners to the required events.\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n            this._onContentPauseRequested,\n            EVENT_OPTIONS\n        );\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n            this._onContentResumeRequested,\n            EVENT_OPTIONS\n        );\n\n        this.#events = [\n            google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n            google.ima.AdEvent.Type.CLICK,\n            google.ima.AdEvent.Type.VIDEO_CLICKED,\n            google.ima.AdEvent.Type.VIDEO_ICON_CLICKED,\n            google.ima.AdEvent.Type.AD_PROGRESS,\n            google.ima.AdEvent.Type.AD_BUFFERING,\n            google.ima.AdEvent.Type.IMPRESSION,\n            google.ima.AdEvent.Type.DURATION_CHANGE,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.LINEAR_CHANGED,\n            google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n            google.ima.AdEvent.Type.AD_METADATA,\n            google.ima.AdEvent.Type.INTERACTION,\n            google.ima.AdEvent.Type.COMPLETE,\n            google.ima.AdEvent.Type.FIRST_QUARTILE,\n            google.ima.AdEvent.Type.LOADED,\n            google.ima.AdEvent.Type.MIDPOINT,\n            google.ima.AdEvent.Type.PAUSED,\n            google.ima.AdEvent.Type.RESUMED,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.STARTED,\n            google.ima.AdEvent.Type.THIRD_QUARTILE,\n            google.ima.AdEvent.Type.SKIPPED,\n            google.ima.AdEvent.Type.VOLUME_CHANGED,\n            google.ima.AdEvent.Type.VOLUME_MUTED,\n            google.ima.AdEvent.Type.LOG,\n        ];\n\n        if (!this.#options.autoPlayAdBreaks) {\n            // Add it to the events array so it gets removed onDestroy\n            this.#events.push(google.ima.AdEvent.Type.AD_BREAK_READY);\n        }\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.addEventListener(event, mouseEvents[event], EVENT_OPTIONS);\n            }\n        });\n        this.#events.forEach((event) => {\n            manager.addEventListener(event, this._assign, EVENT_OPTIONS);\n        });\n\n        if (this.#autostart === true || this.#autostartMuted === true || this.#playTriggered === true) {\n            this.#playTriggered = false;\n            if (!this.#done) {\n                this._initNotDoneAds();\n                return;\n            }\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n            manager.start();\n            const e = addEvent('play');\n            this.#element.dispatchEvent(e);\n        } else if (this.#options.enablePreloading === true) {\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n        }\n    }\n\n    private _initNotDoneAds(): void {\n        if (this.#displayContainer) {\n            this.#done = true;\n            this.#displayContainer.initialize();\n\n            if (IS_IOS || IS_ANDROID) {\n                this.#preloadContent = this._contentLoadedAction;\n                this.#element.addEventListener('loadedmetadata', this._contentLoadedAction, EVENT_OPTIONS);\n                this.#element.load();\n            } else {\n                this._contentLoadedAction();\n            }\n        } else {\n            this.load();\n            this.loadedAd = false;\n        }\n    }\n\n    private _contentEndedListener(): void {\n        this.#ended = true;\n        this.#active = false;\n        this.#started = false;\n        this.#loader.contentComplete();\n    }\n\n    private _onContentPauseRequested(): void {\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        this.#lastTimePaused = this.#media.currentTime;\n\n        if (this.#started) {\n            this.#media.pause();\n        } else {\n            this.#started = true;\n        }\n        const e = addEvent('play');\n        this.#element.dispatchEvent(e);\n    }\n\n    private _onContentResumeRequested(): void {\n        this.#element.addEventListener('ended', this._contentEndedListener, EVENT_OPTIONS);\n        this.#element.addEventListener('loadedmetadata', this._loadedMetadataHandler, EVENT_OPTIONS);\n        if (IS_IOS || IS_ANDROID) {\n            this.#media.src = this.#mediaSources;\n            this.#media.load();\n            this._prepareMedia();\n            if (this.#element.parentElement) {\n                this.#element.parentElement.classList.add('op-ads--active');\n            }\n        } else {\n            const event = addEvent('loadedmetadata');\n            this.#element.dispatchEvent(event);\n        }\n    }\n\n    private _loadedMetadataHandler(): void {\n        if (Array.isArray(this.#ads)) {\n            this.#currentIndex++;\n            if (this.#currentIndex <= this.#ads.length - 1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                this.#loader.contentComplete();\n                this.#playTriggered = true;\n                this.#started = true;\n                this.#done = false;\n                this.load(true);\n            } else {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else if (this.#element.seekable.length) {\n            if (this.#element.seekable.end(0) > this.#lastTimePaused) {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else {\n            setTimeout(this._loadedMetadataHandler, 100);\n        }\n    }\n\n    private _resumeMedia(): void {\n        this.#intervalTimer = 0;\n        this.#muted = false;\n        this.#started = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.classList.remove('op-ads--active');\n        }\n\n        if (this.#media.ended) {\n            const e = addEvent('ended');\n            this.#element.dispatchEvent(e);\n        } else {\n            try {\n                this.#media.play();\n                setTimeout(() => {\n                    const e = addEvent('play');\n                    this.#element.dispatchEvent(e);\n                }, 50);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    }\n\n    private _requestAds(): void {\n        this.#request = new google.ima.AdsRequest();\n        const ads = Array.isArray(this.#ads) ? this.#ads[this.#currentIndex] : this.#ads;\n\n        if (isXml(ads)) {\n            this.#request.adsResponse = ads;\n        } else {\n            this.#request.adTagUrl = ads;\n        }\n\n        const width = this.#element.parentElement ? this.#element.parentElement.offsetWidth : 0;\n        const height = this.#element.parentElement ? this.#element.parentElement.offsetHeight : 0;\n        this.#request.linearAdSlotWidth = width;\n        this.#request.linearAdSlotHeight = height;\n        this.#request.nonLinearAdSlotWidth = width;\n        this.#request.nonLinearAdSlotHeight = height / 3;\n        this.#request.setAdWillAutoPlay(this.#autostart);\n        this.#request.setAdWillPlayMuted(this.#autostartMuted);\n        this.#loader.requestAds(this.#request);\n    }\n\n    /**\n     * Internal callback to request Ads.\n     *\n     * @memberof Ads\n     */\n    private _contentLoadedAction(): void {\n        if (this.#preloadContent) {\n            this.#element.removeEventListener('loadedmetadata', this.#preloadContent);\n            this.#preloadContent = null;\n        }\n        this._requestAds();\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/faq#8\n    private _resetAdsAfterManualBreak(): void {\n        if (this.#manager) {\n            this.#manager.destroy();\n        }\n        this.#loader.contentComplete();\n        this.#done = false;\n        this.#playTriggered = true;\n    }\n\n    private _prepareMedia(): void {\n        this.#media.currentTime = this.#lastTimePaused;\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this._resumeMedia();\n    }\n\n    private _setMediaVolume(volume: number): void {\n        this.#media.volume = volume;\n        this.#media.muted = volume === 0;\n    }\n\n    private _handleClickInContainer(): void {\n        if (this.#media.paused) {\n            const e = addEvent('paused');\n            this.#element.dispatchEvent(e);\n            this.pause();\n        }\n    }\n\n    private _handleResizeAds(): void {\n        this.resizeAds();\n    }\n\n    private _handleSkipAds(): void {\n        this.#manager.skip();\n    }\n}\n\nexport default Ads;\n","import Controls from './controls';\nimport Fullscreen from './controls/fullscreen';\nimport {\n    CustomMedia,\n    ElementItem,\n    EventsList,\n    Languages,\n    PlayerLabels,\n    PlayerOptions,\n    Source,\n    Track,\n} from './interfaces';\nimport Media from './media';\nimport Ads from './media/ads';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\nimport { isAutoplaySupported, predictMimeType } from './utils/media';\n\ninterface P {\n    loader: HTMLSpanElement;\n    playBtn: HTMLButtonElement;\n\n    proxy: any;\n    init(): Promise<void>;\n    load(): Promise<void> | void;\n    play(): Promise<void>;\n    pause(): void;\n    destroy(): void;\n    getContainer(): HTMLElement;\n    getControls(): Controls;\n    getCustomControls(): ElementItem[];\n    getElement(): HTMLMediaElement;\n    getEvents(): EventsList;\n    getOptions(): PlayerOptions;\n    activeElement(): Ads | Media;\n    isMedia(): boolean;\n    isAd(): boolean;\n    getMedia(): Media;\n    getAd(): Ads;\n    addCaptions(args: Track): void;\n    addControl(args: ElementItem): void;\n    removeControl(controlName: string): void;\n    _prepareMedia(): Promise<void>;\n    enableDefaultPlayer(): void;\n    loadAd(src: string | string[]): Promise<void>;\n}\n\nclass Player {\n    static instances: { [id: string]: P } = {};\n\n    static customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    static init(): void {\n        Player.instances = {};\n        const targets = document.querySelectorAll('video.op-player, audio.op-player');\n        for (let i = 0, total = targets.length; i < total; i++) {\n            const target = targets[i] as HTMLMediaElement;\n            const settings = target.getAttribute('data-op-settings');\n            const options = settings ? JSON.parse(settings) : {};\n            const player = new Player(target, options);\n            player.init();\n        }\n    }\n\n    static addMedia(name: string, mimeType: string, valid: (url: string) => string, media: Source): void {\n        Player.customMedia.media[mimeType] = media;\n        Player.customMedia.optionsKey[mimeType] = name;\n        Player.customMedia.rules.push(valid);\n    }\n\n    loader: HTMLSpanElement;\n\n    playBtn: HTMLButtonElement;\n\n    proxy: any = null;\n\n    #controls: Controls;\n\n    #adsInstance: Ads;\n\n    #uid = '';\n\n    #element: HTMLMediaElement;\n\n    #ads?: string | string[];\n\n    #media: Media;\n\n    #events: EventsList = {};\n\n    #autoplay = false;\n\n    #volume: number;\n\n    #canAutoplay = false;\n\n    #canAutoplayMuted = false;\n\n    #processedAutoplay = false;\n\n    #options: PlayerOptions;\n\n    #customElements: ElementItem[] = [];\n\n    #fullscreen: Fullscreen;\n\n    #defaultOptions: PlayerOptions = {\n        controls: {\n            alwaysVisible: false,\n            layers: {\n                left: ['play', 'time', 'volume'],\n                middle: ['progress'],\n                right: ['captions', 'settings', 'fullscreen'],\n            },\n        },\n        defaultLevel: undefined,\n        detachMenus: false,\n        forceNative: true,\n        height: 0,\n        hidePlayBtnTimer: 350,\n        labels: {\n            auto: 'Auto',\n            captions: 'CC/Subtitles',\n            click: 'Click to unmute',\n            fullscreen: 'Fullscreen',\n            lang: {\n                en: 'English',\n            },\n            levels: 'Quality Levels',\n            live: 'Live Broadcast',\n            mediaLevels: 'Change Quality',\n            mute: 'Mute',\n            off: 'Off',\n            pause: 'Pause',\n            play: 'Play',\n            progressRail: 'Time Rail',\n            progressSlider: 'Time Slider',\n            settings: 'Player Settings',\n            speed: 'Speed',\n            speedNormal: 'Normal',\n            tap: 'Tap to unmute',\n            toggleCaptions: 'Toggle Captions',\n            unmute: 'Unmute',\n            volume: 'Volume',\n            volumeControl: 'Volume Control',\n            volumeSlider: 'Volume Slider',\n        },\n        live: {\n            showLabel: true,\n            showProgress: false,\n        },\n        media: {\n            pauseOnClick: false,\n        },\n        mode: 'responsive', // or `fill` or `fit`\n        onError: (e: unknown) => console.error(e),\n        pauseOthers: true,\n        progress: {\n            allowRewind: true,\n            allowSkip: true,\n            duration: 0,\n            showCurrentTimeOnly: false,\n        },\n        showLoaderOnInit: false,\n        startTime: 0,\n        startVolume: 1,\n        step: 0,\n        useDeviceVolume: true,\n        width: 0,\n    };\n\n    constructor(element: HTMLMediaElement | string, options?: PlayerOptions) {\n        this.#element =\n            element instanceof HTMLMediaElement ? element : (document.getElementById(element) as HTMLMediaElement);\n        if (this.#element) {\n            this.#autoplay = this.#element.autoplay || false;\n            if (typeof options !== 'string' && !Array.isArray(options)) {\n                this._mergeOptions(options);\n            }\n            this.#element.volume = this.#options.startVolume || 1;\n\n            if (this.#options.ads && this.#options.ads.src) {\n                this.#ads = this.#options.ads.src;\n            }\n            if ((this.#options?.startTime || 0) > 0) {\n                this.#element.currentTime = this.#options.startTime || 0;\n            }\n            this.#volume = this.#element.volume;\n        }\n        this._autoplay = this._autoplay.bind(this);\n        this._enableKeyBindings = this._enableKeyBindings.bind(this);\n    }\n\n    async init(): Promise<void> {\n        if (this._isValid()) {\n            this._wrapInstance();\n            await this._prepareMedia();\n            this._createPlayButton();\n            this._createUID();\n            this._createControls();\n            this._setEvents();\n            Player.instances[this.id] = this;\n        }\n    }\n\n    async load(): Promise<void> {\n        if (!this.#media) {\n            await this._prepareMedia();\n            return (this.#media as Media).load();\n        }\n        this.#media.loaded = false;\n        return this.isMedia() ? this.#media.load() : undefined;\n    }\n\n    async play(): Promise<void> {\n        if (!this.#media.loaded) {\n            await this.#media.load();\n            this.#media.loaded = true;\n        }\n        if (this.#adsInstance) {\n            this.#adsInstance.playRequested = true;\n            await this.#adsInstance.loadPromise;\n            return this.#adsInstance.play();\n        }\n        return this.#media.play();\n    }\n\n    pause(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n        } else {\n            this.#media.pause();\n        }\n    }\n\n    stop(): void {\n        this.pause();\n\n        if (this.#media) {\n            this.#media.currentTime = 0;\n            this.src = [{ src: '', type: 'video/mp4' }];\n        }\n    }\n\n    destroy(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n            this.#adsInstance.destroy();\n        }\n\n        if (this.#fullscreen) {\n            this.#fullscreen.destroy();\n        }\n\n        const el = this.#element as HTMLMediaElement;\n        if (this.#media) {\n            this.#media.destroy();\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            el.removeEventListener(event, this.#events[event]);\n        });\n\n        this.getContainer().removeEventListener('keydown', this._enableKeyBindings);\n\n        if (this.#autoplay && !this.#processedAutoplay && isVideo(this.#element)) {\n            el.removeEventListener('canplay', this._autoplay);\n        }\n        if (this.#controls) {\n            this.#controls.destroy();\n        }\n\n        if (isVideo(this.#element)) {\n            if (this.playBtn) {\n                this.playBtn.remove();\n            }\n            if (this.loader) {\n                this.loader.remove();\n            }\n        }\n\n        if (this.#options?.onError) {\n            this.#element.removeEventListener('playererror', this.#options.onError);\n        }\n\n        el.controls = true;\n        el.setAttribute('id', this.#uid);\n        el.removeAttribute('op-live__enabled');\n        el.removeAttribute('op-dvr__enabled');\n        const parent =\n            this.#options.mode === 'fit' && !isAudio(el) ? el.closest('.op-player__fit--wrapper') : el.parentElement;\n        if (parent && parent.parentNode) {\n            parent.parentNode.replaceChild(el, parent);\n        }\n\n        delete Player.instances[this.#uid];\n\n        const e = addEvent('playerdestroyed');\n        el.dispatchEvent(e);\n    }\n\n    getContainer(): HTMLElement {\n        return this.#element.parentElement || this.#element;\n    }\n\n    getControls(): Controls {\n        return this.#controls;\n    }\n\n    getCustomControls(): ElementItem[] {\n        return this.#customElements;\n    }\n\n    getElement(): HTMLMediaElement {\n        return this.#element;\n    }\n\n    getEvents(): EventsList {\n        return this.#events;\n    }\n\n    getOptions(): PlayerOptions {\n        return this.#options;\n    }\n\n    activeElement(): Ads | Media {\n        return this.#adsInstance && this.#adsInstance.started() ? this.#adsInstance : this.#media;\n    }\n\n    isMedia(): boolean {\n        return this.activeElement() instanceof Media;\n    }\n\n    isAd(): boolean {\n        return this.activeElement() instanceof Ads;\n    }\n\n    getMedia(): Media {\n        return this.#media;\n    }\n\n    getAd(): Ads {\n        return this.#adsInstance;\n    }\n\n    addCaptions(args: Track): void {\n        if (args.default) {\n            const tracks = this.#element.querySelectorAll('track');\n            for (let i = 0, total = tracks.length; i < total; i++) {\n                (tracks[i] as HTMLTrackElement).default = false;\n            }\n        }\n\n        const el = this.#element;\n\n        // If captions have been added previously, just update URL and default status\n        let track = el.querySelector(`track[srclang=\"${args.srclang}\"][kind=\"${args.kind}\"]`) as HTMLTrackElement;\n        if (track) {\n            track.src = args.src;\n            track.label = args.label;\n            track.default = args.default || false;\n        } else {\n            track = document.createElement('track');\n            track.srclang = args.srclang;\n            track.src = args.src;\n            track.kind = args.kind;\n            track.label = args.label;\n            track.default = args.default || false;\n            el.appendChild(track);\n        }\n\n        const e = addEvent('controlschanged');\n        el.dispatchEvent(e);\n    }\n\n    addControl(args: ElementItem): void {\n        args.custom = true;\n        args.type = 'button';\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    addElement(args: ElementItem): void {\n        args.custom = true;\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    removeControl(controlName: string): void {\n        // Check custom controls and remove reference there as well\n        this.#customElements.forEach((item: ElementItem, idx: number) => {\n            if (item.id === controlName) {\n                this.#customElements.splice(idx, 1);\n            }\n        });\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    async _prepareMedia(): Promise<void> {\n        try {\n            if (this.#options?.onError) {\n                this.#element.addEventListener('playererror', this.#options.onError, EVENT_OPTIONS);\n            }\n            if (this.#autoplay && isVideo(this.#element)) {\n                this.#element.addEventListener('canplay', this._autoplay, EVENT_OPTIONS);\n            }\n            this.#media = new Media(this.#element, this.#options, this.#autoplay, Player.customMedia);\n            const preload = this.#element.getAttribute('preload');\n            if (this.#ads || !preload || preload !== 'none') {\n                await this.#media.load();\n                this.#media.loaded = true;\n            }\n\n            if (!this.#autoplay && this.#ads) {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                this.#adsInstance = new Ads(this, this.#ads, false, false, adsOptions);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    enableDefaultPlayer(): void {\n        let paused = true;\n        let currentTime = 0;\n\n        if (this.proxy && !this.proxy.paused) {\n            paused = false;\n            currentTime = this.proxy.currentTime;\n            this.proxy.pause();\n        }\n\n        this.proxy = this;\n        this.getElement().addEventListener('loadedmetadata', (): void => {\n            this.getMedia().currentTime = currentTime;\n            if (!paused) {\n                this.play();\n            }\n        });\n    }\n\n    async loadAd(src: string | string[]): Promise<void> {\n        try {\n            if (this.isAd()) {\n                this.getAd().destroy();\n                this.getAd().src = src;\n                this.getAd().loadedAd = false;\n                this.getAd().load();\n            } else {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                const autoplay = !this.activeElement().paused || this.#canAutoplay;\n                this.#adsInstance = new Ads(this, src, autoplay, this.#canAutoplayMuted, adsOptions);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    set src(media) {\n        if (this.#media instanceof Media) {\n            this.#media.mediaFiles = [];\n            this.#media.src = media;\n        } else if (typeof media === 'string') {\n            this.#element.src = media;\n        } else if (Array.isArray(media)) {\n            media.forEach((m) => {\n                const source = document.createElement('source');\n                source.src = m.src;\n                source.type = m.type || predictMimeType(m.src, this.#element);\n                this.#element.appendChild(source);\n            });\n        } else if (typeof media === 'object') {\n            this.#element.src = (media as Source).src;\n        }\n    }\n\n    get src(): Source[] {\n        return this.#media.src;\n    }\n\n    get id(): string {\n        return this.#uid;\n    }\n\n    private _isValid(): boolean {\n        const el = this.#element;\n\n        if (el instanceof HTMLElement === false) {\n            return false;\n        }\n\n        if (!isAudio(el) && !isVideo(el)) {\n            return false;\n        }\n\n        if (!el.classList.contains('op-player__media')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private _wrapInstance(): void {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'op-player op-player__keyboard--inactive';\n        wrapper.className += isAudio(this.#element) ? ' op-player__audio' : ' op-player__video';\n        wrapper.tabIndex = 0;\n\n        this.#element.classList.remove('op-player');\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(wrapper, this.#element);\n        }\n        wrapper.appendChild(this.#element);\n\n        const messageContainer = document.createElement('div');\n        messageContainer.className = 'op-status';\n        messageContainer.innerHTML = '<span></span>';\n        messageContainer.tabIndex = -1;\n        messageContainer.setAttribute('aria-hidden', 'true');\n\n        if (isVideo(this.#element) && this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(messageContainer, this.#element);\n        }\n\n        wrapper.addEventListener(\n            'keydown',\n            (): void => {\n                if (wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.remove('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        wrapper.addEventListener(\n            'click',\n            (): void => {\n                if (!wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.add('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        if (this.#options.mode === 'fill' && !isAudio(this.#element) && !IS_IPHONE) {\n            // Create fill effect on video, scaling and cropping dimensions relative to its parent, setting just a class.\n            // This method centers the video view using pure CSS in both Ads and Media.\n            // @see https://slicejack.com/fullscreen-html5-video-background-css/\n            this.getContainer().classList.add('op-player__full');\n        } else if (this.#options.mode === 'fit' && !isAudio(this.#element)) {\n            const container = this.getContainer();\n            if (container.parentElement) {\n                const fitWrapper = document.createElement('div');\n                fitWrapper.className = 'op-player__fit--wrapper';\n                fitWrapper.tabIndex = 0;\n                container.parentElement.insertBefore(fitWrapper, container);\n                fitWrapper.appendChild(container);\n                container.classList.add('op-player__fit');\n            }\n        } else {\n            let style = '';\n            if (this.#options.width) {\n                const width =\n                    typeof this.#options.width === 'number' ? `${this.#options.width}px` : this.#options.width;\n                style += `width: ${width} !important;`;\n            }\n            if (this.#options.height) {\n                const height =\n                    typeof this.#options.height === 'number' ? `${this.#options.height}px` : this.#options.height;\n                style += `height: ${height} !important;`;\n            }\n\n            if (style) {\n                wrapper.setAttribute('style', style);\n            }\n        }\n    }\n\n    private _createControls(): void {\n        if (IS_IPHONE && isVideo(this.#element)) {\n            this.getContainer().classList.add('op-player__ios--iphone');\n        }\n        this.#controls = new Controls(this);\n        this.#controls.create();\n    }\n\n    private _createUID(): void {\n        if (this.#element.id) {\n            this.#uid = this.#element.id;\n            this.#element.removeAttribute('id');\n        } else {\n            const cryptoLib = crypto as any;\n            const encryption =\n                typeof cryptoLib.getRandomBytes === 'function' ? cryptoLib.getRandomBytes : cryptoLib.getRandomValues;\n            this.#uid = `op_${encryption(new Uint32Array(1))[0].toString(36).substr(2, 9)}`;\n        }\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.id = this.#uid;\n        }\n    }\n\n    private _createPlayButton(): void {\n        if (isAudio(this.#element)) {\n            return;\n        }\n\n        this.playBtn = document.createElement('button');\n        this.playBtn.className = 'op-player__play';\n        this.playBtn.tabIndex = 0;\n        this.playBtn.title = this.#options.labels?.play || '';\n        this.playBtn.innerHTML = `<span>${this.#options.labels?.play || ''}</span>`;\n        this.playBtn.setAttribute('aria-pressed', 'false');\n        this.playBtn.setAttribute('aria-hidden', 'false');\n\n        this.loader = document.createElement('span');\n        this.loader.className = 'op-player__loader';\n        this.loader.tabIndex = -1;\n        this.loader.setAttribute('aria-hidden', 'true');\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.loader, this.#element);\n            this.#element.parentElement.insertBefore(this.playBtn, this.#element);\n        }\n\n        this.playBtn.addEventListener(\n            'click',\n            (): void => {\n                if (this.#adsInstance) {\n                    this.#adsInstance.playRequested = this.activeElement().paused;\n                }\n                if (this.activeElement().paused) {\n                    this.activeElement().play();\n                } else {\n                    this.activeElement().pause();\n                }\n            },\n            EVENT_OPTIONS\n        );\n    }\n\n    private _setEvents(): void {\n        if (isVideo(this.#element)) {\n            this.#events.loadedmetadata = (): void => {\n                const el = this.activeElement();\n                if (this.#options.showLoaderOnInit && !IS_IOS && !IS_ANDROID) {\n                    this.loader.setAttribute('aria-hidden', 'false');\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    this.loader.setAttribute('aria-hidden', 'true');\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                }\n                if (el.paused) {\n                    this.playBtn.classList.remove('op-player__play--paused');\n                    this.playBtn.setAttribute('aria-pressed', 'false');\n                }\n            };\n            this.#events.waiting = (): void => {\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', 'false');\n            };\n            this.#events.seeking = (): void => {\n                const el = this.activeElement();\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n            };\n            this.#events.seeked = (): void => {\n                const el = this.activeElement();\n                if (Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.play = (): void => {\n                this.playBtn.classList.add('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.pause || '';\n                this.loader.setAttribute('aria-hidden', 'true');\n                if (this.#options.showLoaderOnInit) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    setTimeout((): void => {\n                        this.playBtn.setAttribute('aria-hidden', 'true');\n                    }, this.#options.hidePlayBtnTimer);\n                }\n            };\n            this.#events.playing = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            this.#events.pause = (): void => {\n                const el = this.activeElement();\n                this.playBtn.classList.remove('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.play || '';\n\n                if (this.#options.showLoaderOnInit && Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.ended = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            // This workflow is needed when media is on a loop and post roll needs to be played.\n            // This happens because, when in loop, media never sends the `ended` event back;\n            // so, when media reaches a quarter of a second left before the end, Ads would be dispatched\n            // @see https://github.com/googleads/videojs-ima/issues/890\n            let postRollCalled = false;\n            this.#events.timeupdate = (): void => {\n                if (this.#element.loop && this.isMedia() && this.#adsInstance) {\n                    const el = this.getMedia();\n                    const remainingTime = el.duration - el.currentTime;\n                    if (remainingTime > 0 && remainingTime <= 0.25 && !postRollCalled) {\n                        postRollCalled = true;\n                        const e = addEvent('ended');\n                        this.#element.dispatchEvent(e);\n                    } else if (remainingTime === 0) {\n                        postRollCalled = false;\n                    }\n                }\n            };\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            this.#element.addEventListener(event, this.#events[event], EVENT_OPTIONS);\n        });\n\n        this.getContainer().addEventListener('keydown', this._enableKeyBindings, EVENT_OPTIONS);\n    }\n\n    private _autoplay(): void {\n        if (!this.#processedAutoplay) {\n            this.#processedAutoplay = true;\n            this.#element.removeEventListener('canplay', this._autoplay);\n\n            isAutoplaySupported(\n                this.#element,\n                this.#volume,\n                (autoplay) => {\n                    this.#canAutoplay = autoplay;\n                },\n                (muted) => {\n                    this.#canAutoplayMuted = muted;\n                },\n                (): void => {\n                    if (this.#canAutoplayMuted) {\n                        this.activeElement().muted = true;\n                        this.activeElement().volume = 0;\n\n                        const e = addEvent('volumechange');\n                        this.#element.dispatchEvent(e);\n\n                        // Insert element to unmute if browser allows autoplay with muted media\n                        const volumeEl = document.createElement('div');\n                        const action = IS_IOS || IS_ANDROID ? this.#options.labels?.tap : this.#options.labels?.click;\n                        volumeEl.className = 'op-player__unmute';\n                        volumeEl.innerHTML = `<span>${action}</span>`;\n                        volumeEl.tabIndex = 0;\n\n                        volumeEl.addEventListener(\n                            'click',\n                            (): void => {\n                                this.activeElement().muted = false;\n                                this.activeElement().volume = this.#volume;\n\n                                const event = addEvent('volumechange');\n                                this.#element.dispatchEvent(event);\n\n                                volumeEl.remove();\n                            },\n                            EVENT_OPTIONS\n                        );\n\n                        const target = this.getContainer();\n                        target.insertBefore(volumeEl, target.firstChild);\n                    } else {\n                        this.activeElement().muted = this.#element.muted;\n                        this.activeElement().volume = this.#volume;\n                    }\n\n                    if (this.#ads) {\n                        const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                        this.#adsInstance = new Ads(\n                            this,\n                            this.#ads,\n                            this.#canAutoplay,\n                            this.#canAutoplayMuted,\n                            adsOptions\n                        );\n                    } else if (this.#canAutoplay || this.#canAutoplayMuted) {\n                        this.play();\n                    }\n                }\n            );\n        }\n    }\n\n    private _mergeOptions(playerOptions?: PlayerOptions): void {\n        const opts = { ...(playerOptions || {}) };\n        this.#options = { ...this.#defaultOptions, ...opts };\n        const complexOptions = Object.keys(this.#defaultOptions).filter(\n            (key) => key !== 'labels' && typeof this.#defaultOptions[key] === 'object'\n        );\n        complexOptions.forEach((key) => {\n            const currOption = (opts[key] as Record<string, unknown>) || {};\n            if (currOption && Object.keys(currOption).length) {\n                this.#options[key] = { ...(this.#defaultOptions[key] as Record<string, unknown>), ...currOption };\n            }\n        });\n        if (opts.labels) {\n            const keys = opts.labels ? Object.keys(opts.labels) : [];\n            let sanitizedLabels: PlayerLabels = {};\n\n            keys.forEach((key) => {\n                const current = opts.labels ? opts.labels[key as keyof PlayerLabels] : null;\n                if (current && typeof current === 'object' && key === 'lang') {\n                    Object.keys(current).forEach((k) => {\n                        const lang = current ? (current as Languages)[k] : null;\n                        if (lang) {\n                            sanitizedLabels = {\n                                ...sanitizedLabels,\n                                lang: { ...sanitizedLabels.lang, [k]: sanitize(lang as string) },\n                            };\n                        }\n                    });\n                } else if (current) {\n                    sanitizedLabels = { ...sanitizedLabels, [key]: sanitize(current as string) };\n                }\n            });\n\n            this.#options.labels = { ...this.#defaultOptions.labels, ...sanitizedLabels };\n        }\n    }\n\n    private _enableKeyBindings(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.activeElement();\n        const isAd = this.isAd();\n        const playerFocused = document?.activeElement?.classList.contains('op-player');\n\n        switch (key) {\n            // Toggle play/pause using letter K, Tab or Enter\n            case 13:\n            case 32:\n            case 75:\n                // Avoid interference of Enter/Space keys when focused in the player container\n                if (playerFocused && (key === 13 || key === 32)) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                } else if (key === 75) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // End key ends video\n            case 35:\n                if (!isAd && el.duration !== Infinity) {\n                    el.currentTime = el.duration;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Home key resets progress\n            case 36:\n                if (!isAd) {\n                    el.currentTime = 0;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the left and right arrow keys to manipulate current media time.\n            // Letter J/L will set double of step forward/backward\n            case 37:\n            case 39:\n            case 74:\n            case 76:\n                if (!isAd && el.duration !== Infinity) {\n                    let newStep = 5;\n                    const configStep = this.getOptions().step;\n                    if (configStep) {\n                        newStep = key === 74 || key === 76 ? configStep * 2 : configStep;\n                    } else if (key === 74 || key === 76) {\n                        newStep = 10;\n                    }\n                    const step = el.duration !== Infinity ? newStep : this.getOptions().progress?.duration || 0;\n                    el.currentTime += key === 37 || key === 74 ? step * -1 : step;\n                    if (el.currentTime < 0) {\n                        el.currentTime = 0;\n                    } else if (el.currentTime >= el.duration) {\n                        el.currentTime = el.duration;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the up/down arrow keys to manipulate volume.\n            case 38:\n            case 40:\n                const newVol = key === 38 ? Math.min(el.volume + 0.1, 1) : Math.max(el.volume - 0.1, 0);\n                el.volume = newVol;\n                el.muted = !(newVol > 0);\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // Letter F sets fullscreen (only video)\n            case 70:\n                if (isVideo(this.#element) && !e.ctrlKey) {\n                    this.#fullscreen = new Fullscreen(this, '', '');\n                    if (typeof this.#fullscreen.fullScreenEnabled !== 'undefined') {\n                        this.#fullscreen.toggleFullscreen();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n                break;\n            // Letter M toggles mute\n            case 77:\n                el.muted = !el.muted;\n                if (el.muted) {\n                    el.volume = 0;\n                } else {\n                    el.volume = this.#volume;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // < and > will decrease/increase the speed of playback by 0.25\n            // , and . will go to the prev/next frame of the media\n            case 188:\n            case 190:\n                if (!isAd && e.shiftKey) {\n                    const elem = el as Media;\n                    elem.playbackRate =\n                        key === 188 ? Math.max(elem.playbackRate - 0.25, 0.25) : Math.min(elem.playbackRate + 0.25, 2);\n                    // Show playbackRate and update controls to reflect change in settings\n                    const target = this.getContainer().querySelector('.op-status>span');\n                    if (target) {\n                        target.textContent = `${elem.playbackRate}x`;\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-hidden', 'false');\n                        }\n                        setTimeout((): void => {\n                            if (target.parentElement) {\n                                target.parentElement.setAttribute('aria-hidden', 'true');\n                            }\n                        }, 500);\n                    }\n                    const ev = addEvent('controlschanged');\n                    dispatchEvent(ev);\n                    e.preventDefault();\n                    e.stopPropagation();\n                } else if (!isAd && el.paused) {\n                    el.currentTime += (1 / 25) * (key === 188 ? -1 : 1);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default Player;\n\n// Expose element globally.\nif (typeof window !== 'undefined') {\n    (window as any).OpenPlayer = Player;\n\n    (window as any).OpenPlayerJS = Player;\n    Player.init();\n}\n"],"names":["_a","_player","_button","_controlPosition","_controlLayer","_menu","_events","Player","_container","_slider","_options","_timer","_autoplay","source.predictMimeType","source.isHlsSource","source.isDashSource","source.isFlvSource","_started","_volume","_duration","_currentTime","_media","_element","offset","_controls","_ads"],"mappings":"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"}