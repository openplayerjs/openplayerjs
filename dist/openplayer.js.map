{"version":3,"file":"openplayer.js","sources":["../src/js/utils/constants.ts","../src/js/utils/general.ts","../src/js/controls/captions.ts","../src/js/controls/fullscreen.ts","../src/js/utils/media.ts","../src/js/controls/levels.ts","../src/js/controls/play.ts","../src/js/utils/time.ts","../src/js/controls/progress.ts","../src/js/controls/settings.ts","../src/js/controls/time.ts","../src/js/controls/volume.ts","../src/js/controls.ts","../src/js/media/native.ts","../src/js/media/dash.ts","../src/js/media/flv.ts","../src/js/media/hls.ts","../src/js/media/html5.ts","../src/js/media.ts","../src/js/media/ads.ts","../src/js/player.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\ndeclare global {\n    interface Window {\n        MSStream: any;\n        WebKitMediaSource: any;\n        WebKitSourceBuffer: any;\n    }\n}\n\nexport const NAV: Navigator | null = typeof window !== 'undefined' ? window.navigator : null;\n\nexport const UA: string | null = NAV ? NAV.userAgent.toLowerCase() : null;\n\nexport const IS_IPAD = UA ? /ipad/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPHONE = UA ? /iphone/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPOD = UA ? /ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IOS = UA ? /ipad|iphone|ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_ANDROID = UA ? /android/i.test(UA) : false;\n\nexport const IS_EDGE = NAV ? 'msLaunchUri' in NAV && !('documentMode' in document) : false;\n\nexport const IS_CHROME = UA ? /chrome/i.test(UA) : false;\n\nexport const IS_FIREFOX = UA ? /firefox/i.test(UA) : false;\n\nexport const IS_SAFARI = UA ? /safari/i.test(UA) && !IS_CHROME : false;\n\nexport const IS_STOCK_ANDROID = UA ? /^mozilla\\/\\d+\\.\\d+\\s\\(linux;\\su;/i.test(UA) : false;\n\nexport const HAS_MSE = typeof window !== 'undefined' ? 'MediaSource' in window : false;\n\n// @see https://github.com/video-dev/hls.js/blob/master/src/is-supported.js\nexport const SUPPORTS_HLS = (): boolean => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    const mediaSource = window.MediaSource || window.WebKitMediaSource;\n    const sourceBuffer = window.SourceBuffer || window.WebKitSourceBuffer;\n    const isTypeSupported =\n        mediaSource &&\n        typeof mediaSource.isTypeSupported === 'function' &&\n        mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n    const sourceBufferValidAPI =\n        !sourceBuffer ||\n        (sourceBuffer.prototype &&\n            typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n            typeof sourceBuffer.prototype.remove === 'function');\n\n    // Safari is still an exception since it has built-in HLS support; currently HLS.js\n    // is still in beta to support Safari\n    return !!isTypeSupported && !!sourceBufferValidAPI && !IS_SAFARI;\n};\n\nexport const DVR_THRESHOLD = 120;\n\nexport const EVENT_OPTIONS = { passive: false };\n","export function getAbsoluteUrl(url: string): string {\n    const a: HTMLAnchorElement = document.createElement('a');\n    a.href = url;\n    return a.href;\n}\n\nexport function isVideo(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'video';\n}\n\nexport function isAudio(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'audio';\n}\n\nexport function loadScript(url: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.onload = (): void => {\n            script.remove();\n            resolve();\n        };\n        script.onerror = (): void => {\n            script.remove();\n            reject(new Error(`${url} could not be loaded`));\n        };\n        if (document.head) {\n            document.head.appendChild(script);\n        }\n    });\n}\n\nexport function offset(el: HTMLElement): { left: number; top: number } {\n    const rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft),\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop),\n    };\n}\n\nexport function sanitize(html: string, plainText = true): string {\n    const parser = new DOMParser();\n    const content = parser.parseFromString(html, 'text/html');\n    const formattedContent = content.body || document.createElement('body');\n\n    const scripts = formattedContent.querySelectorAll('script');\n    for (let i = 0, total = scripts.length; i < total; i++) {\n        scripts[i].remove();\n    }\n\n    const clean = (element: Element): void => {\n        const nodes = element.children;\n        for (let i = 0, total = nodes.length; i < total; i++) {\n            const node = nodes[i];\n            const { attributes } = node;\n            for (let j = 0, t = attributes.length; j < t; j++) {\n                const { name, value } = attributes[j];\n                const val = value.replace(/\\s+/g, '').toLowerCase();\n                if (['src', 'href', 'xlink:href'].includes(name)) {\n                    // eslint-disable-next-line no-script-url\n                    if (val.includes('javascript:') || val.includes('data:')) {\n                        node.removeAttribute(name);\n                    }\n                }\n                if (name.startsWith('on')) {\n                    node.removeAttribute(name);\n                }\n            }\n            clean(node);\n        }\n    };\n\n    clean(formattedContent);\n    return plainText ? (formattedContent.textContent || '').replace(/\\s{2,}/g, '') : formattedContent.innerHTML;\n}\n\nexport function isXml(input: string): boolean {\n    let parsedXml;\n\n    if (typeof DOMParser !== 'undefined') {\n        parsedXml = (text: string): Document => new DOMParser().parseFromString(text, 'text/xml');\n    } else {\n        return false;\n    }\n\n    try {\n        const response = parsedXml(input);\n        if (response.getElementsByTagName('parsererror').length > 0) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport function isJson(item: unknown): boolean {\n    item = typeof item !== 'string' ? JSON.stringify(item) : item;\n    try {\n        item = JSON.parse(item as string);\n    } catch (e) {\n        return false;\n    }\n\n    if (typeof item === 'object' && item !== null) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function addEvent(event: string, details?: CustomEventInit): CustomEvent {\n    let detail = {};\n    if (details && details.detail) {\n        detail = { detail: details.detail };\n    }\n    return new CustomEvent(event, detail);\n}\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Captions implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #captions: HTMLDivElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #mediaTrackList: TextTrack[];\n\n    #hasTracks: boolean;\n\n    #currentTrack?: TextTrack;\n\n    #default = 'off';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._formatMenuItems = this._formatMenuItems.bind(this);\n        this._setDefaultTrack = this._setDefaultTrack.bind(this);\n    }\n\n    custom?: boolean | undefined;\n\n    create(): void {\n        const { textTracks } = this.#player.getElement();\n        const { labels, detachMenus } = this.#player.getOptions();\n\n        this.#mediaTrackList = Object.keys(textTracks)\n            .map((k) => textTracks[Number(k)])\n            .filter((el) => ['subtitles', 'captions'].includes(el.kind) && el.language);\n\n        this.#hasTracks = !!this.#mediaTrackList.length;\n\n        if (!this.#hasTracks) {\n            return;\n        }\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__captions op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.toggleCaptions || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.toggleCaptions || '');\n        this.#button.setAttribute('data-active-captions', 'off');\n\n        // Build container to display captions to mitigate cross browser inconsistencies\n        this.#captions = document.createElement('div');\n        this.#captions.className = 'op-captions';\n        const target = this.#player.getContainer();\n        target.insertBefore(this.#captions, target.firstChild);\n\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-captions__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            this.#menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-captions\">\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\" aria-checked=\"${\n                    this.#default === 'off' ? 'true' : 'false'\n                }\">\n                    <div class=\"op-settings__submenu-label op-subtitles__option\" data-value=\"captions-off\">${\n                        labels?.off\n                    }</div>\n                </div>\n            </div>`;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.append(this.#button, this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).append(itemContainer);\n\n            for (const track of this.#mediaTrackList) {\n                const item = document.createElement('div');\n                const label = labels?.lang?.[track.language] || null;\n                item.className = 'op-settings__submenu-item';\n                item.tabIndex = 0;\n                item.setAttribute('role', 'menuitemradio');\n                item.setAttribute('aria-checked', this.#default === track.language ? 'true' : 'false');\n                item.innerHTML = `<div class=\"op-settings__submenu-label op-subtitles__option\"\n                    data-value=\"captions-${track.language}\">\n                    ${label || track.label}\n                </div>`;\n                this.#menu.append(item);\n            }\n        } else {\n            this.#player.getControls().getLayer(this.#controlLayer).append(this.#button);\n        }\n\n        // Show/hide captions\n        this.#events.button.click = (e: Event): void => {\n            const button = e.target as HTMLDivElement;\n            if (detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (const menuItem of Array.from(menus)) {\n                    if (menuItem !== this.#menu) {\n                        menuItem.setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            } else {\n                button.setAttribute('aria-pressed', 'true');\n                if (button.classList.contains('op-controls__captions--on')) {\n                    button.classList.remove('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', 'off');\n                } else {\n                    button.classList.add('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', this.#currentTrack?.language || '');\n                }\n\n                for (const track of this.#mediaTrackList) {\n                    track.mode = button.getAttribute('data-active-captions') === track.language ? 'showing' : 'hidden';\n                }\n            }\n        };\n\n        this.#events.button.mouseover = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    if (menus[i] !== this.#menu) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n            }\n        };\n        this.#events.button.mouseout = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            }\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-subtitles__option')) {\n                const language = option.getAttribute('data-value')!.replace('captions-', '');\n\n                for (const track of this.#mediaTrackList) {\n                    track.mode = track.language === language ? 'showing' : 'hidden';\n                    if (track.language === language) {\n                        this.#currentTrack = track;\n                    }\n                }\n\n                if (detachMenus) {\n                    if (this.#button.classList.contains('op-controls__captions--on')) {\n                        this.#button.classList.remove('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', 'off');\n                    } else {\n                        this.#button.classList.add('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', language);\n                    }\n\n                    const captions = this.#menu.querySelectorAll('.op-settings__submenu-item');\n                    for (const caption of Array.from(captions)) {\n                        caption.setAttribute('aria-checked', 'false');\n                    }\n                    option.parentElement!.setAttribute('aria-checked', 'true');\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#button.setAttribute('data-active-captions', language);\n                }\n                const event = addEvent('captionschanged');\n                this.#player.getElement().dispatchEvent(event);\n            }\n        };\n\n        this.#events.global.cuechange = (e: Event): void => {\n            while (this.#captions.lastChild) {\n                this.#captions.removeChild(this.#captions.lastChild);\n            }\n            const t = e.target as TextTrack;\n            if (t.mode !== 'showing') {\n                return;\n            }\n\n            if (t.activeCues && t.activeCues?.length > 0) {\n                for (const cue of Array.from(t.activeCues)) {\n                    const content = (cue as VTTCue)?.text || '';\n                    if (content) {\n                        this.#captions.classList.add('op-captions--on');\n                        const caption = document.createElement('span');\n                        caption.innerHTML = content;\n                        this.#captions.prepend(caption);\n                    } else {\n                        while (this.#captions.lastChild) {\n                            this.#captions.removeChild(this.#captions.lastChild);\n                        }\n                    }\n                }\n            } else {\n                while (this.#captions.lastChild) {\n                    this.#captions.removeChild(this.#captions.lastChild);\n                }\n            }\n        };\n\n        if (detachMenus) {\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n\n        for (const track of this.#mediaTrackList) {\n            track.mode = track.mode !== 'showing' ? 'hidden' : track.mode;\n            track.addEventListener('cuechange', this.#events.global.cuechange, EVENT_OPTIONS);\n        }\n\n        const targetTrack = this.#player\n            .getElement()\n            .querySelector('track:is([kind=\"subtitles\"],[kind=\"captions\"])[default]') as HTMLTrackElement;\n        if (targetTrack) {\n            const matchTrack = this.#mediaTrackList.find((el) => el.language === targetTrack.srclang);\n            if (matchTrack) {\n                this._setDefaultTrack(matchTrack);\n            }\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n\n        if (!this.#hasTracks) {\n            return;\n        }\n\n        for (const track of this.#mediaTrackList) {\n            track.removeEventListener('cuechange', this.#events.global.cuechange);\n        }\n\n        document.removeEventListener('click', this.#events.global.click);\n        this.#button.removeEventListener('click', this.#events.button.click);\n        if (detachMenus) {\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { detachMenus, labels } = this.#player.getOptions();\n        if (detachMenus || this.#mediaTrackList.length <= 1) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n\n        // Avoid implementing submenu for captions if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-subtitles__option',\n                  default: this.#default || 'off',\n                  key: 'captions',\n                  name: labels?.captions || '',\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (this.#mediaTrackList.length <= 1 && !detachMenus) {\n            return [];\n        }\n\n        let items = [{ key: 'off', label: labels?.off || '' }];\n        for (const track of this.#mediaTrackList) {\n            const label = labels?.lang ? labels.lang[track.language] : null;\n            // Override language item if duplicated when passing list of items\n            items = items.filter((el) => el.key !== track.language);\n            items.push({ key: track.language, label: label || track.label });\n        }\n\n        return items;\n    }\n\n    private _setDefaultTrack(track: TextTrack): void {\n        track.mode = 'showing';\n        this.#default = track.language;\n        this.#button.setAttribute('data-active-captions', this.#default);\n        this.#button.classList.add('op-controls__captions--on');\n        this.#currentTrack = track;\n\n        const options = document.querySelectorAll('.op-settings__submenu-item') || [];\n        for (const option of Array.from(options)) {\n            option.setAttribute('aria-checked', 'false');\n        }\n\n        document\n            .querySelector(`.op-subtitles__option[data-value=\"captions-${track.language}\"]`)\n            ?.parentElement?.setAttribute('aria-checked', 'true');\n    }\n}\n\nexport default Captions;\n","import { FullscreenDocument, FullscreenElement, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IPHONE } from '../utils/constants';\n\nclass Fullscreen implements PlayerComponent {\n    fullScreenEnabled: boolean;\n\n    #player: Player;\n\n    #isFullscreen: boolean;\n\n    #button: HTMLButtonElement;\n\n    #fullscreenEvents: string[] = [];\n\n    #fullscreenWidth = 0;\n\n    #fullscreenHeight = 0;\n\n    #clickEvent: () => void;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this.#isFullscreen = document.body.classList.contains('op-fullscreen__on');\n\n        const target = document as FullscreenDocument;\n\n        // Check if fullscreen is supported\n        this.fullScreenEnabled = !!(\n            target.fullscreenEnabled ||\n            target.mozFullScreenEnabled ||\n            target.msFullscreenEnabled ||\n            target.webkitSupportsFullscreen ||\n            target.webkitFullscreenEnabled ||\n            (document.createElement('video') as FullscreenElement).webkitRequestFullScreen\n        );\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n        this._resize = this._resize.bind(this);\n        this._fullscreenChange = this._fullscreenChange.bind(this);\n        this._setFullscreen = this._setFullscreen.bind(this);\n        this._unsetFullscreen = this._unsetFullscreen.bind(this);\n\n        this.#fullscreenEvents = [\n            'fullscreenchange',\n            'mozfullscreenchange',\n            'webkitfullscreenchange',\n            'msfullscreenchange',\n        ];\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.addEventListener(event, this._fullscreenChange, EVENT_OPTIONS);\n        });\n        this._setFullscreenData(false);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        // Since iPhone still doesn't accept the regular Fullscreen API, use the following events\n        if (IS_IPHONE) {\n            this.#player.getElement().addEventListener('webkitbeginfullscreen', this._setFullscreen, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('webkitendfullscreen', this._unsetFullscreen, EVENT_OPTIONS);\n        }\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__fullscreen op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.fullscreen || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.fullscreen || '');\n\n        this.#clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            this.toggleFullscreen();\n        };\n\n        this.#clickEvent = this.#clickEvent.bind(this);\n\n        this.#button.addEventListener('click', this.#clickEvent, EVENT_OPTIONS);\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n    }\n\n    destroy(): void {\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.removeEventListener(event, this._fullscreenChange);\n        });\n        if (IS_IPHONE) {\n            this.#player.getElement().removeEventListener('webkitbeginfullscreen', this._setFullscreen);\n            this.#player.getElement().removeEventListener('webkitendfullscreen', this._unsetFullscreen);\n        }\n        this.#button.removeEventListener('click', this.#clickEvent);\n        this.#button.remove();\n    }\n\n    toggleFullscreen(): void {\n        // If browser does not support native Fullscreen API, player will adjust the video\n        // and its parent container's dimensions via width and height styles.\n        if (this.#isFullscreen) {\n            const target = document as FullscreenDocument;\n            if (target.exitFullscreen) {\n                target.exitFullscreen();\n            } else if (target.mozCancelFullScreen) {\n                target.mozCancelFullScreen();\n            } else if (target.webkitCancelFullScreen) {\n                target.webkitCancelFullScreen();\n            } else if (target.msExitFullscreen) {\n                target.msExitFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n            document.body.classList.remove('op-fullscreen__on');\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const video = this.#player.getElement() as any;\n            this.#fullscreenWidth = window.screen.width;\n            this.#fullscreenHeight = window.screen.height;\n\n            if (video.requestFullscreen) {\n                video.parentElement.requestFullscreen();\n            } else if (video.mozRequestFullScreen) {\n                video.parentElement.mozRequestFullScreen();\n            } else if (video.webkitRequestFullScreen) {\n                video.parentElement.webkitRequestFullScreen();\n            } else if (video.msRequestFullscreen) {\n                video.parentElement.msRequestFullscreen();\n            } else if (video.webkitEnterFullscreen) {\n                video.webkitEnterFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n\n            document.body.classList.add('op-fullscreen__on');\n        }\n\n        if (typeof window !== 'undefined' && (IS_ANDROID || IS_IPHONE)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const { screen } = window as any;\n            if (screen.orientation && !this.#isFullscreen) {\n                screen.orientation.lock('landscape');\n            }\n        }\n    }\n\n    private _fullscreenChange(): void {\n        const width = this.#isFullscreen ? undefined : this.#fullscreenWidth;\n        const height = this.#isFullscreen ? undefined : this.#fullscreenHeight;\n        this._setFullscreenData(!this.#isFullscreen);\n\n        if (this.#player.isAd()) {\n            this.#player.getAd().resizeAds(width, height);\n        }\n        this.#isFullscreen = !this.#isFullscreen;\n\n        if (this.#isFullscreen) {\n            document.body.classList.add('op-fullscreen__on');\n        } else {\n            document.body.classList.remove('op-fullscreen__on');\n        }\n        this._resize(width, height);\n    }\n\n    private _setFullscreenData(isFullscreen: boolean): void {\n        this.#player.getContainer().setAttribute('data-fullscreen', (!!isFullscreen).toString());\n        if (this.#button) {\n            if (isFullscreen) {\n                this.#button.classList.add('op-controls__fullscreen--out');\n            } else {\n                this.#button.classList.remove('op-controls__fullscreen--out');\n            }\n        }\n    }\n\n    private _resize(width?: number, height?: number): void {\n        const wrapper = this.#player.getContainer();\n        const video = this.#player.getElement();\n        const options = this.#player.getOptions();\n        let styles = '';\n        if (width) {\n            wrapper.style.width = '100%';\n            video.style.width = '100%';\n        } else if (options.width) {\n            const defaultWidth = typeof options.width === 'number' ? `${options.width}px` : options.width;\n            styles += `width: ${defaultWidth} !important;`;\n            video.style.removeProperty('width');\n        } else {\n            video.style.removeProperty('width');\n            wrapper.style.removeProperty('width');\n        }\n        if (height) {\n            video.style.height = '100%';\n            wrapper.style.height = '100%';\n        } else if (options.height) {\n            const defaultHeight = typeof options.height === 'number' ? `${options.height}px` : options.height;\n            styles += `height: ${defaultHeight} !important;`;\n            video.style.removeProperty('height');\n        } else {\n            video.style.removeProperty('height');\n            wrapper.style.removeProperty('height');\n        }\n\n        if (styles) {\n            wrapper.setAttribute('style', styles);\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const fullscreenBtnFocused = document?.activeElement?.classList.contains('op-controls__fullscreen');\n        if (fullscreenBtnFocused && (key === 13 || key === 32)) {\n            this.toggleFullscreen();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    private _setFullscreen(): void {\n        this.#isFullscreen = true;\n        this._setFullscreenData(true);\n        document.body.classList.add('op-fullscreen__on');\n    }\n\n    private _unsetFullscreen(): void {\n        this.#isFullscreen = false;\n        this._setFullscreenData(false);\n        document.body.classList.remove('op-fullscreen__on');\n    }\n}\n\nexport default Fullscreen;\n","import { Source } from '../interfaces';\nimport { isAudio } from './general';\n\nexport function getExtension(url: string): string {\n    const baseUrl = url.split('?')[0];\n    const baseFrags = (baseUrl || '').split('\\\\');\n    const baseUrlFragment = (baseFrags || []).pop();\n    const baseNameFrags = (baseUrlFragment || '').split('/');\n    const baseName = (baseNameFrags || []).pop() || '';\n    return baseName.includes('.') ? baseName.substring(baseName.lastIndexOf('.') + 1) : '';\n}\n\nexport function isHlsSource(media: Source): boolean {\n    return (\n        /\\.m3u8$/i.test(media.src) || ['application/x-mpegURL', 'application/vnd.apple.mpegurl'].includes(media.type)\n    );\n}\n\nexport function isM3USource(media: Source): boolean {\n    return /\\.m3u$/i.test(media.src);\n}\n\nexport function isDashSource(media: Source): boolean {\n    return /\\.mpd/i.test(media.src) || media.type === 'application/dash+xml';\n}\n\nexport function isFlvSource(media: Source): boolean {\n    return /(^rtmp:\\/\\/|\\.flv$)/i.test(media.src) || ['video/x-flv', 'video/flv'].includes(media.type);\n}\n\nexport function predictMimeType(url: string, element: HTMLMediaElement): string {\n    const extension = getExtension(url);\n\n    // If no extension found, check if media is a vendor iframe\n    if (!extension) {\n        return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n\n    // Check native media types\n    switch (extension) {\n        case 'm3u8':\n        case 'm3u':\n            return 'application/x-mpegURL';\n        case 'mpd':\n            return 'application/dash+xml';\n        case 'mp4':\n            return isAudio(element) ? 'audio/mp4' : 'video/mp4';\n        case 'mp3':\n            return 'audio/mp3';\n        case 'webm':\n            return isAudio(element) ? 'audio/webm' : 'video/webm';\n        case 'ogg':\n            return isAudio(element) ? 'audio/ogg' : 'video/ogg';\n        case 'ogv':\n            return 'video/ogg';\n        case 'oga':\n            return 'audio/ogg';\n        case '3gp':\n            return 'audio/3gpp';\n        case 'wav':\n            return 'audio/wav';\n        case 'aac':\n            return 'audio/aac';\n        case 'flac':\n            return 'audio/flac';\n        default:\n            return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n}\n\n// @see https://raw.githubusercontent.com/googleads/googleads-ima-html5/2.11/attempt_to_autoplay/ads.js\n// @see https://github.com/Modernizr/Modernizr/issues/1095#issuecomment-304682473\nexport function isAutoplaySupported(\n    media: HTMLMediaElement,\n    defaultVol: number,\n    autoplay: (playing: boolean) => void,\n    muted: (playing: boolean) => void,\n    callback: () => void\n): void {\n    const playPromise = media.play();\n    if (playPromise !== undefined) {\n        playPromise\n            .then(() => {\n                // Unmuted autoplay works.\n                media.pause();\n                autoplay(true);\n                muted(false);\n                callback();\n            })\n            .catch(() => {\n                // Unmuted autoplay failed. New attempt with muted autoplay.\n                media.volume = 0;\n                media.muted = true;\n                media\n                    .play()\n                    .then(() => {\n                        // Muted autoplay works.\n                        media.pause();\n                        autoplay(true);\n                        muted(true);\n                        callback();\n                    })\n                    .catch(() => {\n                        // Both muted and unmuted autoplay failed. Fallback to click to play.\n                        media.volume = defaultVol;\n                        media.muted = false;\n                        autoplay(false);\n                        muted(false);\n                        callback();\n                    });\n            });\n    } else {\n        autoplay(!media.paused || ('Promise' in window && (playPromise as Promise<void>) instanceof Promise));\n        media.pause();\n        muted(false);\n        callback();\n    }\n}\n","import { EventsList, Level, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, NAV } from '../utils/constants';\nimport { addEvent, sanitize } from '../utils/general';\nimport { isDashSource, isHlsSource } from '../utils/media';\n\nclass Levels implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #levels: Level[] = [];\n\n    #defaultLevel = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, defaultLevel: startLevel, detachMenus } = this.#player.getOptions();\n        const initialLevel = startLevel !== null ? parseInt(startLevel || '0', 10) : this.#player.getMedia().level;\n        this.#defaultLevel = `${initialLevel}`;\n        const menuItems = this._formatMenuItems();\n        const defaultLevel = menuItems.length ? menuItems.find((items) => items.key === this.#defaultLevel) : null;\n        const defaultLabel = defaultLevel ? defaultLevel.label : labels?.auto || '';\n        let levelSet = false;\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__levels op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mediaLevels || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-label', labels?.mediaLevels || '');\n        this.#button.setAttribute('data-active-level', this.#defaultLevel);\n        this.#button.innerHTML = `<span>${defaultLabel}</span>`;\n\n        const loadLevelsEvent = (): void => {\n            if (!this.#levels.length) {\n                this._gatherLevels();\n                setTimeout((): void => {\n                    this.#player.getMedia().level = initialLevel;\n                    const e = addEvent('controlschanged');\n                    this.#player.getElement().dispatchEvent(e);\n                }, 0);\n            } else if (!levelSet) {\n                this.#player.getMedia().level = initialLevel;\n                levelSet = true;\n            }\n        };\n\n        this.#events.media.loadedmetadata = loadLevelsEvent.bind(this);\n        this.#events.media.manifestLoaded = loadLevelsEvent.bind(this);\n        this.#events.media.hlsManifestParsed = loadLevelsEvent.bind(this);\n\n        if (detachMenus) {\n            this._buildMenu();\n            this.#events.button.click = (): void => {\n                if (detachMenus) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    } else {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n            this.#events.button.mouseover = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    }\n                }\n            };\n            this.#events.button.mouseout = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n\n            this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            const { currentTime } = this.#player.getMedia();\n            const isPaused = this.#player.getMedia().paused;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-levels__option')) {\n                const levelVal = option.getAttribute('data-value');\n                const level = levelVal ? levelVal.replace('levels-', '') : '-1';\n                this.#defaultLevel = `${level}`;\n                if (detachMenus) {\n                    this.#button.setAttribute('data-active-level', `${level}`);\n                    this.#button.innerHTML = `<span>${sanitize(option.innerText, true)}</span>`;\n                    const levels =\n                        option.parentElement && option.parentElement.parentElement\n                            ? option.parentElement.parentElement.querySelectorAll('.op-settings__submenu-item')\n                            : [];\n                    for (let i = 0, total = levels.length; i < total; ++i) {\n                        levels[i].setAttribute('aria-checked', 'false');\n                    }\n                    if (option.parentElement) {\n                        option.parentElement.setAttribute('aria-checked', 'true');\n                    }\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n                this.#player.getMedia().level = level;\n                this.#player.getMedia().currentTime = currentTime;\n                if (!isPaused) {\n                    this.#player.play();\n                }\n\n                const event = addEvent('levelchanged', {\n                    detail: {\n                        label: option.innerText.trim(),\n                        level,\n                    },\n                });\n                this.#player.getElement().dispatchEvent(event);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n        this.#events.global.connection = (): void => {\n            // Check connectivity to switch levels (only HTML5 since HLS and Dash can use adaptive streaming)\n            const media = this.#player.getMedia().current;\n            if (!isDashSource(media) && !isHlsSource(media)) {\n                const type = connection?.effectiveType || '';\n                const levels = this.#levels.map((item) => ({\n                    ...item,\n                    resolution: parseInt(item.label.replace('p', ''), 10),\n                }));\n\n                let level = levels.find((item) => item.resolution < 360);\n                if (type === '4g') {\n                    level = levels.find((item) => item.resolution >= 720);\n                } else if (type === '3g') {\n                    level = levels.find((item) => item.resolution >= 360 && item.resolution < 720);\n                }\n\n                if (level) {\n                    this.#player.pause();\n                    this.#player.getMedia().level = level.id;\n                    this.#player.play();\n                }\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        if (connection) {\n            connection.addEventListener('change', this.#events.global.connection, EVENT_OPTIONS);\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        if (connection) {\n            connection.removeEventListener('change', this.#events.global.connection);\n        }\n        if (detachMenus) {\n            this.#button.removeEventListener('click', this.#events.button.click);\n            this.#button.remove();\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (detachMenus) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n        // Avoid implementing submenu for levels if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-levels__option',\n                  default: this.#defaultLevel || '-1',\n                  key: 'levels',\n                  name: labels?.levels,\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels } = this.#player.getOptions();\n        const levels = this._gatherLevels();\n        const total = levels.length;\n        let items = total ? [{ key: '-1', label: labels?.auto }] : [];\n        for (let i = 0; i < total; i++) {\n            const level = levels[i];\n            items = items.filter((el) => el.key !== level.id);\n            items.push({ key: level.id, label: level.label });\n        }\n\n        // Remove duplicated labels\n        return items\n            .reduce((acc: SettingsSubItem[], current) => {\n                const duplicate = acc.find((item) => item.label === current.label);\n                if (!duplicate) {\n                    return acc.concat([current]);\n                }\n                return acc;\n            }, [])\n            .sort((a, b) => (parseInt(a?.label || '', 10) > parseInt(b?.label || '', 10) ? 1 : -1));\n    }\n\n    // @see https://en.wikipedia.org/wiki/Computer_display_standard#Standards\n    private _getResolutionsLabel(height: number): string {\n        const { labels } = this.#player.getOptions();\n        if (height >= 4320) {\n            return '8K';\n        }\n        if (height >= 2160) {\n            return '4K';\n        }\n        if (height >= 1440) {\n            return '1440p';\n        }\n        if (height >= 1080) {\n            return '1080p';\n        }\n        if (height >= 720) {\n            return '720p';\n        }\n        if (height >= 480) {\n            return '480p';\n        }\n        if (height >= 360) {\n            return '360p';\n        }\n        if (height >= 240) {\n            return '240p';\n        }\n        if (height >= 144) {\n            return '144p';\n        }\n        return labels?.auto || '';\n    }\n\n    private _gatherLevels(): Level[] {\n        if (!this.#levels.length) {\n            this.#player.getMedia().levels.forEach((level: Level) => {\n                this.#levels.push({ ...level, label: level.label || this._getResolutionsLabel(level.height) });\n            });\n        }\n        return this.#levels;\n    }\n\n    private _buildMenu(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // Build menu if detachMenu is `true`\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-levels__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            const className = 'op-levels__option';\n            const options = this._formatMenuItems();\n\n            // Store the submenu to reach all options for current menu item\n            const menu = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-levels\">\n                ${options\n                    .map(\n                        (item) => `\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\"\n                    aria-checked=\"${this.#defaultLevel === item.key ? 'true' : 'false'}\">\n                    <div class=\"op-settings__submenu-label ${className || ''}\" data-value=\"levels-${item.key}\">${\n                            item.label\n                        }</div>\n                </div>`\n                    )\n                    .join('')}\n            </div>`;\n            this.#menu.innerHTML = menu;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.appendChild(this.#button);\n            itemContainer.appendChild(this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).appendChild(itemContainer);\n        }\n    }\n}\n\nexport default Levels;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio } from '../utils/general';\n\nclass Play implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__playpause op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.play || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.play || '');\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n\n        this.#events.button = (e: Event): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n\n            if (el.paused || el.ended) {\n                if (this.#player.getAd()) {\n                    this.#player.getAd().playRequested = true;\n                }\n\n                el.play();\n                this.#events.media.play();\n            } else {\n                el.pause();\n                this.#events.media.pause();\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.play = (): void => {\n            if (this.#player.activeElement().ended) {\n                if (this.#player.isMedia()) {\n                    this.#button.classList.add('op-controls__playpause--replay');\n                } else {\n                    this.#button.classList.add('op-controls__playpause--pause');\n                }\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n\n                if (this.#player.getOptions()?.pauseOthers) {\n                    Object.keys(Player.instances).forEach((key) => {\n                        if (key !== this.#player.id) {\n                            const target = Player.instances[key].activeElement();\n                            target.pause();\n                        }\n                    });\n                }\n            }\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            if (this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (!this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            this.#button.classList.remove('op-controls__playpause--pause');\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.ended = (): void => {\n            if (this.#player.activeElement().ended && this.#player.isMedia()) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else if (\n                this.#player.getElement().currentTime >= this.#player.getElement().duration ||\n                this.#player.getElement().currentTime <= 0\n            ) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n            }\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.adsmediaended = (): void => {\n            this.#button.classList.remove('op-controls__playpause--replay');\n            this.#button.classList.add('op-controls__playpause--pause');\n            this.#button.title = labels?.pause || '';\n            this.#button.setAttribute('aria-label', labels?.pause || '');\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl) {\n                const el = this.#player.activeElement();\n                el.pause();\n            }\n        };\n\n        const element = this.#player.getElement();\n        this.#events.controls.controlschanged = (): void => {\n            if (!this.#player.activeElement().paused) {\n                const event = addEvent('playing');\n                element.dispatchEvent(event);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            element.addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            element.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#button.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            this.#player.getElement().removeEventListener('click', this.#events.button);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#button.removeEventListener('click', this.#events.button);\n        this.#button.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__playpause');\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            this.#events.button(e);\n        }\n    }\n}\n\nexport default Play;\n","export function formatTime(seconds: number, frameRate?: number): string {\n    const f = Math.floor((seconds % 1) * (frameRate || 0));\n    let s = Math.floor(seconds);\n    let m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const wrap = (value: number): string => {\n        const formattedVal = value.toString();\n        if (value < 10) {\n            if (value <= 0) {\n                return '00';\n            }\n            return `0${formattedVal}`;\n        }\n        return formattedVal;\n    };\n    m %= 60;\n    s %= 60;\n    return `${h > 0 ? `${wrap(h)}:` : ''}${wrap(m)}:${wrap(s)}${f ? `:${wrap(f)}` : ''}`;\n}\n\n// @see https://en.wikipedia.org/wiki/SMPTE_timecode\nexport function timeToSeconds(timeCode: string): number {\n    const time = timeCode.replace(/;/g, ':').split(':');\n    let seconds = 0;\n    // Hours found; use different calculation\n    if (time.length === 3) {\n        seconds += parseFloat(time[0]) * 60 * 60;\n        seconds += parseFloat(time[1]) * 60;\n        seconds += parseFloat(time[2]);\n    } else {\n        seconds += parseFloat(time[0]) * 60;\n        seconds += parseFloat(time[1]);\n    }\n    return seconds;\n}\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { isAudio, offset } from '../utils/general';\nimport { formatTime } from '../utils/time';\n\nclass Progress implements PlayerComponent {\n    #player: Player;\n\n    #progress: HTMLDivElement;\n\n    #slider: HTMLInputElement;\n\n    #buffer: HTMLProgressElement;\n\n    #played: HTMLProgressElement;\n\n    #tooltip: HTMLSpanElement;\n\n    #events: EventsList = {\n        container: {},\n        controls: {},\n        global: {},\n        media: {},\n        slider: {},\n    };\n\n    #forcePause = false;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n        this.#progress = document.createElement('div');\n        this.#progress.className = `op-controls__progress op-control__${this.#controlPosition}`;\n        this.#progress.tabIndex = 0;\n        this.#progress.setAttribute('aria-label', labels?.progressSlider || '');\n        this.#progress.setAttribute('aria-valuemin', '0');\n        this.#progress.setAttribute('aria-valuenow', '0');\n        this.#progress.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__progress--seek';\n        this.#slider.tabIndex = -1;\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.value = '0';\n        this.#slider.setAttribute('aria-label', labels?.progressRail || '');\n        this.#slider.setAttribute('role', 'slider');\n\n        this.#buffer = document.createElement('progress');\n        this.#buffer.className = 'op-controls__progress--buffer';\n        this.#buffer.setAttribute('max', '100');\n        this.#buffer.value = 0;\n\n        this.#played = document.createElement('progress');\n        this.#played.className = 'op-controls__progress--played';\n        this.#played.setAttribute('max', '100');\n        this.#played.value = 0;\n\n        this.#progress.appendChild(this.#slider);\n        this.#progress.appendChild(this.#played);\n        this.#progress.appendChild(this.#buffer);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip = document.createElement('span');\n            this.#tooltip.className = 'op-controls__tooltip';\n            this.#tooltip.tabIndex = -1;\n            this.#tooltip.innerHTML = '00:00';\n            this.#progress.appendChild(this.#tooltip);\n        }\n\n        const setInitialProgress = (): void => {\n            if (this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n                this.#slider.value = current.toString();\n                if (!Number.isNaN(el.duration)) {\n                    this.#slider.setAttribute('max', `${el.duration}`);\n                    this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n                }\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                this.#slider.setAttribute('max', '1');\n                this.#slider.value = '1';\n                this.#slider.style.backgroundSize = '100% 100%';\n                this.#played.value = 1;\n                this.#progress.setAttribute('aria-valuemax', '1');\n                this.#progress.setAttribute('aria-hidden', 'false');\n            } else if (!this.#player.getOptions().live?.showProgress) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        let lastCurrentTime = 0;\n        const defaultDuration = this.#player.getOptions().progress?.duration || 0;\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.loadedmetadata = setInitialProgress.bind(this);\n        this.#events.controls.controlschanged = setInitialProgress.bind(this);\n\n        this.#events.media.progress = (e: Event): void => {\n            const el = e.target as HTMLMediaElement;\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (el.duration > 0) {\n                    for (let i = 0, total = el.buffered.length; i < total; i++) {\n                        if (el.buffered.start(el.buffered.length - 1 - i) < el.currentTime) {\n                            this.#buffer.value = (el.buffered.end(el.buffered.length - 1 - i) / el.duration) * 100;\n                            break;\n                        }\n                    }\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n        this.#events.media.waiting = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('loading')) {\n                this.#slider.classList.add('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('error')) {\n                this.#slider.classList.add('error');\n            }\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                const current = el.currentTime;\n                this.#progress.setAttribute('aria-valuenow', current.toString());\n                this.#progress.setAttribute('aria-valuetext', formatTime(current));\n            }\n        };\n        this.#events.media.play = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            if (\n                this.#player.activeElement().duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled')\n            ) {\n                this.#progress.removeAttribute('aria-valuenow');\n                this.#progress.removeAttribute('aria-valuetext');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                (!this.#player.getElement().getAttribute('op-live__enabled') ||\n                    this.#player.getElement().getAttribute('op-dvr__enabled'))\n            ) {\n                if (\n                    !this.#slider.getAttribute('max') ||\n                    this.#slider.getAttribute('max') === '0' ||\n                    parseFloat(this.#slider.getAttribute('max') || '-1') !== el.duration\n                ) {\n                    if (!Number.isNaN(el.duration)) {\n                        this.#slider.setAttribute('max', `${el.duration}`);\n                    }\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n\n                // Adjust current time between Media and Ads; with the latter, it is convenient to add an extra\n                // second to ensure it will reach the end of the rail\n                const duration = el.duration - el.currentTime + 1 >= 100 ? 100 : el.duration - el.currentTime + 1;\n                const current = this.#player.isMedia() ? el.currentTime : duration;\n                const min = parseFloat(this.#slider.min);\n                const max = parseFloat(this.#slider.max);\n                this.#slider.value = current.toString();\n                this.#slider.style.backgroundSize = `${((current - min) * 100) / (max - min)}% 100%`;\n                this.#played.value =\n                    el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                        ? defaultDuration\n                        : (current / el.duration) * 100;\n\n                if (this.#player.getElement().getAttribute('op-dvr__enabled') && Math.floor(this.#played.value) >= 99) {\n                    lastCurrentTime = el.currentTime;\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.durationchange = (): void => {\n            const el = this.#player.activeElement();\n            const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n            if (!Number.isNaN(el.duration)) {\n                this.#slider.setAttribute('max', `${el.duration}`);\n                this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n            }\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (current / el.duration) * 100;\n        };\n\n        this.#events.media.ended = (): void => {\n            this.#slider.style.backgroundSize = '0% 100%';\n            if (this.#slider.getAttribute('max')) {\n                this.#slider.setAttribute('max', '0');\n            }\n            this.#buffer.value = 0;\n            this.#played.value = 0;\n        };\n\n        const updateSlider = (e: Event): void => {\n            const el = this.#player.activeElement();\n            const target = e.target as HTMLInputElement;\n            const value = parseFloat(target.value);\n            if (\n                this.#slider.classList.contains('op-progress--pressed') ||\n                (value < el.currentTime && !progress?.allowRewind) ||\n                (value > el.currentTime && !progress?.allowSkip)\n            ) {\n                this.#slider.value = el.currentTime.toString();\n                return;\n            }\n            this.#slider.classList.add('.op-progress--pressed');\n\n            const min = parseFloat(target.min);\n            const max = parseFloat(target.max);\n            const val = parseFloat(target.value);\n            this.#slider.style.backgroundSize = `${((val - min) * 100) / (max - min)}% 100%`;\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (val / el.duration) * 100;\n\n            if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                el.currentTime = Math.round(this.#played.value) >= 99 ? lastCurrentTime : val;\n            } else {\n                el.currentTime = val;\n            }\n\n            this.#slider.classList.remove('.op-progress--pressed');\n        };\n\n        const forcePause = (e: KeyboardEvent): void => {\n            const el = this.#player.activeElement();\n            const key = e.which || e.keyCode || 0;\n            const target = this.#slider;\n            const value = Math.round(Number(target.value));\n            const current = Math.round(el.currentTime);\n            const isProgressManipulationAllowed =\n                (value < current && progress?.allowRewind) || (value >= current && progress?.allowSkip);\n\n            // If current progress is not related to an Ad, manipulate current time\n            if (isProgressManipulationAllowed && (key === 1 || key === 0) && this.#player.isMedia() && !el.paused) {\n                el.pause();\n                this.#forcePause = true;\n            }\n        };\n\n        const releasePause = (): void => {\n            const el = this.#player.activeElement();\n            if (this.#forcePause === true && this.#player.isMedia()) {\n                if (el.paused) {\n                    el.play();\n                    this.#forcePause = false;\n                }\n            }\n        };\n\n        // When tapping on mobile, it will update the time and force pause\n        const mobileForcePause = (e: TouchEvent): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity) {\n                const { changedTouches } = e;\n                const x = changedTouches[0]?.pageX || 0;\n                const pos = x - offset(this.#progress).left;\n                const percentage = pos / this.#progress.offsetWidth;\n                const time = percentage * el.duration;\n\n                if (\n                    (time < el.currentTime && progress?.allowRewind) ||\n                    (time > el.currentTime && progress?.allowSkip)\n                ) {\n                    this.#slider.value = time.toString();\n                    updateSlider(e);\n                    if (!el.paused) {\n                        el.pause();\n                        this.#forcePause = true;\n                    }\n                }\n            }\n        };\n\n        this.#events.slider.input = updateSlider.bind(this);\n        this.#events.slider.change = updateSlider.bind(this);\n        this.#events.slider.mousedown = forcePause.bind(this);\n        this.#events.slider.mouseup = releasePause.bind(this);\n        this.#events.slider.touchstart = mobileForcePause.bind(this);\n        this.#events.slider.touchend = releasePause.bind(this);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#events.container.mousemove = (e: MouseEvent): void => {\n                const el = this.#player.activeElement();\n                if (el.duration !== Infinity && !this.#player.isAd()) {\n                    const x = e.pageX;\n\n                    let pos = x - offset(this.#progress).left;\n                    const half = this.#tooltip.offsetWidth / 2;\n                    const percentage = pos / this.#progress.offsetWidth;\n                    const time = percentage * el.duration;\n                    const mediaContainer = this.#player.getContainer();\n                    const limit = mediaContainer.offsetWidth - this.#tooltip.offsetWidth;\n\n                    if (pos <= 0 || x - offset(mediaContainer).left <= half) {\n                        pos = 0;\n                    } else if (x - offset(mediaContainer).left >= limit) {\n                        pos = limit - offset(this.#slider).left - 10;\n                    } else {\n                        pos -= half;\n                    }\n\n                    if (percentage >= 0 && percentage <= 1) {\n                        this.#tooltip.classList.add('op-controls__tooltip--visible');\n                    } else {\n                        this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                    }\n\n                    this.#tooltip.style.left = `${pos}px`;\n                    this.#tooltip.innerHTML = Number.isNaN(time) ? '00:00' : formatTime(time);\n                }\n            };\n            this.#events.global.mousemove = (e: MouseEvent): void => {\n                if (!(e.target as HTMLElement).closest('.op-controls__progress') || this.#player.isAd()) {\n                    this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                }\n            };\n        }\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#progress.addEventListener('keydown', this.#player.getEvents().keydown, EVENT_OPTIONS);\n        this.#progress.addEventListener('mousemove', this.#events.container.mousemove, EVENT_OPTIONS);\n        document.addEventListener('mousemove', this.#events.global.mousemove, EVENT_OPTIONS);\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#progress);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#progress.removeEventListener('keydown', this.#player.getEvents().keydown);\n        this.#progress.removeEventListener('mousemove', this.#events.container.mousemove);\n\n        document.removeEventListener('mousemove', this.#events.global.mousemove);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#buffer.remove();\n        this.#played.remove();\n        this.#slider.remove();\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip.remove();\n        }\n        this.#progress.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const el = this.#player.activeElement();\n        const isAd = this.#player.isAd();\n        const key = e.which || e.keyCode || 0;\n        // Use the 0-9 keys to manipulate current media time to set media (not Ads) to the 0% to 90% of duration.\n        if (!isAd && key >= 48 && key <= 57 && el.duration !== Infinity) {\n            let step = 0;\n            for (let i = 48, limit = 57; i <= limit; i++) {\n                if (i < key) {\n                    step++;\n                }\n            }\n            el.currentTime = el.duration * (0.1 * step);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Progress;\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem, SettingsSubMenu } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { sanitize } from '../utils/general';\n\nclass Settings implements PlayerComponent {\n    #player: Player;\n\n    #submenu: SettingsSubMenu = {};\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLElement;\n\n    #events: EventsList = {\n        global: {},\n        media: {},\n    };\n\n    #originalOutput = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    private clickEvent: () => void;\n\n    private hideEvent: () => void;\n\n    private removeEvent: (e: CustomEvent) => void;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__settings op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.settings || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.settings || '');\n\n        this.#menu = document.createElement('div');\n        this.#menu.className = 'op-settings';\n        this.#menu.setAttribute('aria-hidden', 'true');\n        this.#menu.innerHTML = '<div class=\"op-settings__menu\" role=\"menu\"></div>';\n\n        this.clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n            for (let i = 0, total = menus.length; i < total; ++i) {\n                if (menus[i] !== this.#menu) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n            }\n            this.#menu.setAttribute(\n                'aria-hidden',\n                this.#menu.getAttribute('aria-hidden') === 'false' ? 'true' : 'false'\n            );\n        };\n\n        this.hideEvent = (): void => {\n            let timeout;\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame((): void => {\n                    this.#menu.innerHTML = this.#originalOutput;\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                });\n            }\n        };\n\n        this.removeEvent = (e: CustomEvent): void => {\n            const { id, type } = e.detail;\n            this.removeItem(id, type);\n        };\n\n        this.clickEvent = this.clickEvent.bind(this);\n        this.hideEvent = this.hideEvent.bind(this);\n        this.removeEvent = this.removeEvent.bind(this);\n\n        this.#events.media.controlshidden = this.hideEvent.bind(this);\n        this.#events.media.settingremoved = this.removeEvent.bind(this);\n        this.#events.media.play = this.hideEvent.bind(this);\n        this.#events.media.pause = this.hideEvent.bind(this);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const { target } = e;\n            const current = target as HTMLElement;\n            if (current?.closest(`#${this.#player.id}`) && current?.classList.contains('op-speed__option')) {\n                const level = current?.getAttribute('data-value') || '';\n                this.#player.getMedia().playbackRate = parseFloat(level.replace('speed-', ''));\n            }\n        };\n        this.#events.global.resize = this.hideEvent.bind(this);\n\n        this.#button.addEventListener('click', this.clickEvent, EVENT_OPTIONS);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        document.addEventListener('keydown', this.#events.global.click, EVENT_OPTIONS);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.#events.global.resize, EVENT_OPTIONS);\n        }\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n        this.#player.getContainer().appendChild(this.#menu);\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.clickEvent);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        document.removeEventListener('keydown', this.#events.global.click);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.#events.global.resize);\n        }\n        if (this.#events.global['settings.submenu'] !== undefined) {\n            document.removeEventListener('click', this.#events.global['settings.submenu']);\n            this.#player.getElement().removeEventListener('controlshidden', this.hideEvent);\n        }\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#menu.remove();\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem {\n        const media = this.#player.getMedia();\n        const { labels } = this.#player.getOptions();\n\n        let rate = 1;\n        if (this.#player && media) {\n            rate = media.defaultPlaybackRate !== media.playbackRate ? media.playbackRate : media.defaultPlaybackRate;\n        }\n        return {\n            className: 'op-speed__option',\n            default: rate.toString(),\n            key: 'speed',\n            name: labels?.speed || '',\n            subitems: [\n                { key: '0.25', label: '0.25' },\n                { key: '0.5', label: '0.5' },\n                { key: '0.75', label: '0.75' },\n                { key: '1', label: labels?.speedNormal || '' },\n                { key: '1.25', label: '1.25' },\n                { key: '1.5', label: '1.5' },\n                { key: '2', label: '2' },\n            ],\n        };\n    }\n\n    addItem(name: string, key: string, defaultValue: string, submenu?: SettingsSubItem[], className?: string): void {\n        // Build the menu entry first\n        const dataValue = `${key}-${sanitize(defaultValue, true)}`;\n        const menuItem = document.createElement('div');\n        menuItem.className = 'op-settings__menu-item';\n        menuItem.tabIndex = 0;\n        menuItem.setAttribute('role', 'menuitemradio');\n        menuItem.innerHTML = `<div class=\"op-settings__menu-label\" data-value=\"${dataValue}\">${name}</div>`;\n\n        const submenuMatch = submenu ? submenu.find((x) => x.key === defaultValue) : null;\n        if (submenuMatch) {\n            menuItem.innerHTML += `<div class=\"op-settings__menu-content\" tabindex=\"0\">${submenuMatch.label}</div>`;\n        }\n\n        const mainMenu = this.#menu.querySelector('.op-settings__menu');\n        if (mainMenu) {\n            mainMenu.appendChild(menuItem);\n        }\n        this.#originalOutput = this.#menu.innerHTML;\n\n        // Store the submenu to reach all options for current menu item\n        if (submenu) {\n            const subItems = `\n                <div class=\"op-settings__header\">\n                    <button type=\"button\" class=\"op-settings__back\" tabindex=\"0\">${name}</button>\n                </div>\n                <div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-${key}\">\n                    ${submenu\n                        .map(\n                            (item: SettingsSubItem) => `\n                    <div class=\"op-settings__submenu-item\" role=\"menuitemradio\" aria-checked=\"${\n                        defaultValue === item.key ? 'true' : 'false'\n                    }\">\n                        <div class=\"op-settings__submenu-label ${className || ''}\" tabindex=\"0\" data-value=\"${key}-${\n                                item.key\n                            }\">\n                            ${item.label}\n                        </div>\n                    </div>`\n                        )\n                        .join('')}\n                </div>`;\n            this.#submenu[key] = subItems;\n        }\n\n        this.#events.global['settings.submenu'] = (e: Event): void => {\n            const target = e.target as HTMLElement;\n            if (target.closest(`#${this.#player.id}`)) {\n                if (target.classList.contains('op-settings__back')) {\n                    this.#menu.classList.add('op-settings--sliding');\n                    setTimeout((): void => {\n                        this.#menu.innerHTML = this.#originalOutput;\n                        this.#menu.classList.remove('op-settings--sliding');\n                    }, 100);\n                } else if (target.classList.contains('op-settings__menu-content')) {\n                    const labelEl = target.parentElement\n                        ? target.parentElement.querySelector('.op-settings__menu-label')\n                        : null;\n                    const label = labelEl ? labelEl.getAttribute('data-value') : null;\n                    const fragments = label ? label.split('-') : [];\n                    if (fragments.length > 0) {\n                        fragments.pop();\n\n                        // eslint-disable-next-line no-useless-escape\n                        const current = fragments.join('-').replace(/^\\-|\\-$/, '');\n                        if (typeof this.#submenu[current] !== 'undefined') {\n                            this.#menu.classList.add('op-settings--sliding');\n                            setTimeout((): void => {\n                                this.#menu.innerHTML = this.#submenu[current];\n                                this.#menu.classList.remove('op-settings--sliding');\n                            }, 100);\n                        }\n                    }\n                } else if (target.classList.contains('op-settings__submenu-label')) {\n                    const current = target.getAttribute('data-value');\n                    const value = current ? current.replace(`${key}-`, '') : '';\n                    const label = target.innerText;\n\n                    // Update values in submenu and store\n                    const menuTarget = this.#menu.querySelector(\n                        `#menu-item-${key} .op-settings__submenu-item[aria-checked=true]`\n                    );\n                    if (menuTarget) {\n                        menuTarget.setAttribute('aria-checked', 'false');\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-checked', 'true');\n                        }\n                        this.#submenu[key] = this.#menu.innerHTML;\n\n                        // Restore original menu, and set the new value\n                        this.#menu.classList.add('op-settings--sliding');\n                        setTimeout((): void => {\n                            this.#menu.innerHTML = this.#originalOutput;\n                            const prev = this.#menu.querySelector(\n                                `.op-settings__menu-label[data-value=\"${key}-${defaultValue}\"]`\n                            );\n                            if (prev) {\n                                prev.setAttribute('data-value', `${current}`);\n                                if (prev.nextElementSibling) {\n                                    prev.nextElementSibling.textContent = label;\n                                }\n                            }\n                            defaultValue = value;\n                            this.#originalOutput = this.#menu.innerHTML;\n                            this.#menu.classList.remove('op-settings--sliding');\n                        }, 100);\n                    }\n                }\n            } else {\n                this.hideEvent();\n            }\n        };\n\n        document.addEventListener('click', this.#events.global['settings.submenu'], EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('controlshidden', this.hideEvent, EVENT_OPTIONS);\n    }\n\n    removeItem(id: string | number, type: string, minItems = 2): void {\n        const target = this.#player.getElement().querySelector(`.op-settings__submenu-label[data-value=${type}-${id}]`);\n        if (target) {\n            target.remove();\n        }\n\n        if (\n            this.#player.getElement().querySelectorAll(`.op-settings__submenu-label[data-value^=${type}]`).length <\n            minItems\n        ) {\n            delete this.#submenu[type];\n            const label = this.#player.getElement().querySelector(`.op-settings__menu-label[data-value^=${type}]`);\n            const menuItem = label ? label.closest('.op-settings__menu-item') : null;\n            if (menuItem) {\n                menuItem.remove();\n            }\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const isAd = this.#player.isAd();\n        const settingsBtnFocused = document?.activeElement?.classList.contains('op-controls__settings');\n\n        const menuFocused =\n            document?.activeElement?.classList.contains('op-settings__menu-content') ||\n            document?.activeElement?.classList.contains('op-settings__back') ||\n            document?.activeElement?.classList.contains('op-settings__submenu-label');\n        if (!isAd) {\n            if (settingsBtnFocused && (key === 13 || key === 32)) {\n                this.clickEvent();\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (menuFocused && (key === 13 || key === 32)) {\n                this.#events.global['settings.submenu'](e);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n}\n\nexport default Settings;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { formatTime } from '../utils/time';\n\nclass Time implements PlayerComponent {\n    #player: Player;\n\n    #currentTime: HTMLTimeElement;\n\n    #delimiter: HTMLSpanElement;\n\n    #duration: HTMLTimeElement;\n\n    #container: HTMLSpanElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n\n        this.#currentTime = document.createElement('time');\n        this.#currentTime.className = 'op-controls__current';\n        this.#currentTime.setAttribute('role', 'timer');\n        this.#currentTime.setAttribute('aria-live', 'off');\n        this.#currentTime.setAttribute('aria-hidden', 'false');\n        this.#currentTime.innerText = '0:00';\n\n        const showOnlyCurrent = progress?.showCurrentTimeOnly || false;\n\n        if (!showOnlyCurrent) {\n            this.#delimiter = document.createElement('span');\n            this.#delimiter.className = 'op-controls__time-delimiter';\n            this.#delimiter.setAttribute('aria-hidden', 'false');\n            this.#delimiter.innerText = '/';\n\n            this.#duration = document.createElement('time');\n            this.#duration.className = 'op-controls__duration';\n            this.#duration.setAttribute('aria-hidden', 'false');\n            this.#duration.innerText = formatTime(progress?.duration || 0);\n        }\n\n        const controls = this.#player.getControls().getLayer(this.#controlLayer);\n        this.#container = document.createElement('span');\n        this.#container.className = `op-controls-time op-control__${this.#controlPosition}`;\n        this.#container.appendChild(this.#currentTime);\n        if (!showOnlyCurrent) {\n            this.#container.appendChild(this.#delimiter);\n            this.#container.appendChild(this.#duration);\n        }\n        controls.appendChild(this.#container);\n\n        const setInitialTime = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (!showOnlyCurrent) {\n                    const duration = !Number.isNaN(el.duration)\n                        ? el.duration\n                        : this.#player.getOptions().progress?.duration || 0;\n                    this.#duration.innerText = formatTime(duration);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (!showOnlyCurrent) {\n                this.#duration.setAttribute('aria-hidden', 'true');\n                this.#delimiter.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.loadedmetadata = setInitialTime.bind(this);\n        this.#events.controls.controlschanged = setInitialTime.bind(this);\n\n        const { showLabel: showLiveLabel } = this.#player.getOptions().live || {};\n\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const duration = formatTime(el.duration);\n                if (!showOnlyCurrent && !Number.isNaN(el.duration) && duration !== this.#duration.innerText) {\n                    this.#duration.innerText = duration;\n                    this.#duration.setAttribute('aria-hidden', 'false');\n                    this.#delimiter.setAttribute('aria-hidden', 'false');\n                } else if (showOnlyCurrent || duration !== this.#duration.innerText) {\n                    this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (\n                showOnlyCurrent ||\n                (!this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                    this.#duration.getAttribute('aria-hidden') === 'false')\n            ) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            } else {\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            }\n        };\n        this.#events.media.ended = (): void => {\n            const el = this.#player.activeElement();\n            const duration = !Number.isNaN(el.duration)\n                ? el.duration\n                : this.#player.getOptions().progress?.duration || 0;\n            if (!showOnlyCurrent && this.#player.isMedia()) {\n                this.#duration.innerText = formatTime(duration);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#currentTime.remove();\n        const { showCurrentTimeOnly } = this.#player.getOptions().progress || {};\n        if (!showCurrentTimeOnly) {\n            this.#delimiter.remove();\n            this.#duration.remove();\n        }\n        this.#container.remove();\n    }\n}\n\nexport default Time;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Volume implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #container: HTMLDivElement;\n\n    #display: HTMLProgressElement;\n\n    #slider: HTMLInputElement;\n\n    #events: EventsList = {\n        button: {},\n        media: {},\n        slider: {},\n    };\n\n    #volume: number;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#volume = this.#player.getMedia().volume;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#container = document.createElement('div');\n        this.#container.className = `op-controls__volume op-control__${this.#controlPosition}`;\n        this.#container.tabIndex = 0;\n        this.#container.setAttribute('aria-valuemin', '0');\n        this.#container.setAttribute('aria-valuemax', '100');\n        this.#container.setAttribute('aria-valuenow', `${this.#volume}`);\n        this.#container.setAttribute('aria-valuetext', `${labels?.volume || ''}: ${this.#volume}`);\n        this.#container.setAttribute('aria-orientation', 'vertical');\n        this.#container.setAttribute('aria-label', labels?.volumeSlider || '');\n        this.#container.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__volume--input';\n        this.#slider.tabIndex = -1;\n        this.#slider.value = this.#player.getMedia().volume.toString();\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('max', '1');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.setAttribute('aria-label', labels?.volumeControl || '');\n\n        this.#display = document.createElement('progress');\n        this.#display.className = 'op-controls__volume--display';\n        this.#display.setAttribute('max', '10');\n        this.#display.value = this.#player.getMedia().volume * 10;\n\n        this.#container.appendChild(this.#slider);\n        this.#container.appendChild(this.#display);\n\n        // Use as backup when mute is clicked\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__mute op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mute || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.mute || '');\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const updateSlider = (element: any): void => {\n            const mediaVolume = element.volume * 1;\n            const vol = Math.floor(mediaVolume * 100);\n\n            this.#slider.value = `${element.volume}`;\n            this.#display.value = mediaVolume * 10;\n            this.#container.setAttribute('aria-valuenow', `${vol}`);\n            this.#container.setAttribute('aria-valuetext', `${labels?.volume}: ${vol}`);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const updateButton = (element: any): void => {\n            const vol = element.volume;\n            if (vol <= 0.5 && vol > 0) {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.add('op-controls__mute--half');\n            } else if (vol === 0) {\n                this.#button.classList.add('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            } else {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            }\n        };\n\n        const updateVolume = (event: Event): void => {\n            const el = this.#player.activeElement();\n            const value = parseFloat((event.target as HTMLInputElement).value);\n            el.volume = value;\n            el.muted = el.volume === 0;\n            this.#volume = value;\n            const unmuteEl = this.#player.getContainer().querySelector('.op-player__unmute');\n            if (!el.muted && unmuteEl) {\n                unmuteEl.remove();\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n\n        this.#events.media.volumechange = (): void => {\n            const el = this.#player.activeElement();\n            updateSlider(el);\n            updateButton(el);\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            const el = this.#player.activeElement();\n            if (el.muted) {\n                el.volume = 0;\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n        this.#events.slider.input = updateVolume.bind(this);\n        this.#events.slider.change = updateVolume.bind(this);\n\n        this.#events.button.click = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n            el.muted = !el.muted;\n\n            if (el.muted) {\n                el.volume = 0;\n                this.#button.title = labels?.unmute || '';\n                this.#button.setAttribute('aria-label', labels?.unmute || '');\n            } else {\n                el.volume = this.#volume;\n                this.#button.title = labels?.mute || '';\n                this.#button.setAttribute('aria-label', labels?.mute || '');\n            }\n            const event = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(event);\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        if ((!IS_ANDROID && !IS_IOS) || !this.#player.getOptions().useDeviceVolume) {\n            const controls = this.#player.getControls().getLayer(this.#controlLayer);\n            controls.appendChild(this.#button);\n            controls.appendChild(this.#container);\n        }\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.#events.button.click);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#slider.remove();\n        this.#display.remove();\n        this.#container.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.#player.activeElement();\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__mute');\n\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            el.muted = !el.muted;\n            el.volume = el.muted ? 0 : this.#volume;\n            this.#events.button.click();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Volume;\n","import Captions from './controls/captions';\nimport Fullscreen from './controls/fullscreen';\nimport Levels from './controls/levels';\nimport Play from './controls/play';\nimport Progress from './controls/progress';\nimport Settings from './controls/settings';\nimport Time from './controls/time';\nimport Volume from './controls/volume';\nimport { ElementItem, EventsList, PlayerComponent, PlayerLayers, SettingsItem } from './interfaces';\nimport Player from './player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\n\nclass Controls implements PlayerComponent {\n    events: EventsList = {\n        media: {},\n        mouse: {},\n    };\n\n    #settings: Settings;\n\n    #timer = 0;\n\n    #controls: HTMLDivElement;\n\n    #player: Player;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #items: any;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #controlEls: any = {\n        Captions,\n        Fullscreen,\n        Levels,\n        Play,\n        Progress,\n        Settings,\n        Time,\n        Volume,\n    };\n\n    constructor(player: Player) {\n        this.#player = player;\n        this._setElements();\n    }\n\n    create(): void {\n        this.#player.getElement().controls = false;\n\n        const isMediaVideo = isVideo(this.#player.getElement());\n\n        this._createControlsLayer();\n        this._buildElements();\n\n        this.events.controlschanged = (): void => {\n            this.destroy();\n            this._setElements();\n            this.create();\n        };\n\n        this.events.ended = (): void => {\n            this.#player.getContainer().classList.remove('op-controls--hidden');\n        };\n\n        this.#player.getElement().addEventListener('controlschanged', this.events.controlschanged, EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('ended', this.events.ended, EVENT_OPTIONS);\n\n        const { alwaysVisible } = this.#player.getOptions().controls || {};\n\n        if (!alwaysVisible) {\n            const showControls = (): void => {\n                if (isMediaVideo) {\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._stopControlTimer();\n                }\n            };\n\n            this.events.mouse.mouseenter = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._stopControlTimer();\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                    } else if (this.#player.getOptions().showLoaderOnInit) {\n                        this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'false');\n                    }\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mousemove = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                    } else {\n                        this.#player.playBtn.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'true' : 'false'\n                        );\n                        this.#player.loader.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'false' : 'true'\n                        );\n                    }\n\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mouseleave = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._startControlTimer(1000);\n                }\n            };\n            this.events.media.play = (): void => {\n                if (isMediaVideo) {\n                    this._startControlTimer(this.#player.getOptions().hidePlayBtnTimer || 350);\n                }\n            };\n            this.events.media.loadedmetadata = showControls.bind(this);\n            this.events.media.pause = showControls.bind(this);\n            this.events.media.waiting = showControls.bind(this);\n            this.events.media.stalled = showControls.bind(this);\n            this.events.media.playererror = showControls.bind(this);\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().addEventListener(event, this.events.media[event], EVENT_OPTIONS);\n            });\n\n            if (IS_ANDROID || IS_IOS) {\n                this.#player.getContainer().addEventListener('click', this.events.mouse.mouseenter, EVENT_OPTIONS);\n            } else {\n                Object.keys(this.events.mouse).forEach((event) => {\n                    this.#player.getContainer().addEventListener(event, this.events.mouse[event], EVENT_OPTIONS);\n                });\n            }\n\n            // Initial countdown to hide controls\n            if (isMediaVideo && !this.#player.activeElement().paused) {\n                this._startControlTimer(3000);\n            }\n        }\n    }\n\n    destroy(): void {\n        if (!IS_ANDROID && !IS_IOS) {\n            Object.keys(this.events.mouse).forEach((event) => {\n                this.#player.getContainer().removeEventListener(event, this.events.mouse[event]);\n            });\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().removeEventListener(event, this.events.media[event]);\n            });\n\n            this._stopControlTimer();\n        }\n\n        this.#player.getElement().removeEventListener('controlschanged', this.events.controlschanged);\n        this.#player.getElement().removeEventListener('ended', this.events.ended);\n\n        Object.keys(this.#items).forEach((position: string) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._destroyCustomElement(item as ElementItem);\n                } else if (typeof (item as PlayerComponent).destroy === 'function') {\n                    (item as PlayerComponent).destroy();\n                }\n            });\n        });\n\n        this.#controls.remove();\n    }\n\n    getContainer(): HTMLDivElement {\n        return this.#controls;\n    }\n\n    getLayer(layer: string): HTMLDivElement {\n        return this.#controls.querySelector(`.op-controls-layer__${layer}`) || this.#controls;\n    }\n\n    private _createControlsLayer(): void {\n        if (!this.#controls || !this.#player.getContainer().querySelector('.op-controls')) {\n            this.#controls = document.createElement('div');\n            this.#controls.className = 'op-controls';\n            this.#player.getContainer().appendChild(this.#controls);\n\n            const messageContainer = document.createElement('div');\n            messageContainer.className = 'op-status';\n            messageContainer.innerHTML = '<span></span>';\n            messageContainer.tabIndex = -1;\n            messageContainer.setAttribute('aria-hidden', 'true');\n\n            if (isAudio(this.#player.getElement())) {\n                this.#controls.appendChild(messageContainer);\n            }\n        }\n    }\n\n    private _startControlTimer(time: number): void {\n        const el = this.#player.activeElement();\n        this._stopControlTimer();\n\n        if (typeof window !== 'undefined') {\n            this.#timer = window.setTimeout(() => {\n                if ((!el.paused || !el.ended) && isVideo(this.#player.getElement())) {\n                    this.#player.getContainer().classList.add('op-controls--hidden');\n                    this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                    this._stopControlTimer();\n                    const event = addEvent('controlshidden');\n                    this.#player.getElement().dispatchEvent(event);\n                }\n            }, time);\n        }\n    }\n\n    private _stopControlTimer(): void {\n        if (this.#timer !== 0) {\n            clearTimeout(this.#timer);\n            this.#timer = 0;\n        }\n    }\n\n    private _setElements(): void {\n        const controls = this.#player.getOptions().controls?.layers || {};\n        this.#items = {\n            'bottom-left': [],\n            'bottom-middle': [],\n            'bottom-right': [],\n            left: [],\n            main: [],\n            middle: [],\n            right: [],\n            'top-left': [],\n            'top-middle': [],\n            'top-right': [],\n        };\n\n        const isVideoEl = isVideo(this.#player.getElement());\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        const controlPositions = Object.keys(controls);\n        const layersExist = controlPositions.find((item) => /^(top|bottom)/.test(item));\n        this._createControlsLayer();\n\n        controlPositions.forEach((position: string) => {\n            const [layer, pos] = position.split('-');\n\n            // Create extra layers if top/bottom exist\n            if (pos) {\n                if (!this.#controls.classList.contains('op-controls__stacked')) {\n                    this.#controls.classList.add('op-controls__stacked');\n                }\n                const className = `op-controls-layer__${layer}`;\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            } else if (layersExist) {\n                const className = 'op-controls-layer__center';\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            }\n\n            const layers = controls ? controls[position as keyof PlayerLayers] : null;\n            if (layers) {\n                // remove duplicate values in the same position\n                layers\n                    .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i)\n                    .forEach((el: string) => {\n                        const currentLayer = layersExist && !pos ? 'center' : layer;\n                        const className = `${el.charAt(0).toUpperCase()}${el.slice(1)}`;\n                        const item = new this.#controlEls[className](this.#player, pos || layer, currentLayer);\n                        if (el === 'settings') {\n                            this.#settings = item as Settings;\n                        }\n                        if (isVideoEl || (el !== 'fullscreen' && isAudioEl)) {\n                            this.#items[position].push(item);\n                        }\n                    });\n            }\n        });\n\n        // Append/prepend the custom items (if any) depending on their position:\n        // If position is right, always prepend so Settings and Fullscreen are the last items;\n        // otherwise, append new controls\n        this.#player.getCustomControls().forEach((item) => {\n            const [layer, pos] = item.position.split('-');\n            const currentLayer = layersExist && !pos ? 'center' : layer;\n            item.layer = currentLayer;\n            item.position = pos || layer;\n\n            if (typeof item.index === 'number') {\n                this.#items[item.position].splice(item.index, 0, item);\n            } else if (item.position === 'right') {\n                this.#items[item.position].unshift(item);\n            } else {\n                this.#items[item.position].push(item);\n            }\n        });\n    }\n\n    private _buildElements(): void {\n        // Loop controls to build them and register events\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._createCustomElement(item as ElementItem);\n                } else {\n                    (item as PlayerComponent).create();\n                }\n            });\n        });\n\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                const allowDefault = !this.#player.getOptions().detachMenus || item instanceof Settings;\n                const current = item as PlayerComponent;\n                if (allowDefault && !current.custom && typeof current.addSettings === 'function') {\n                    const menuItem = current.addSettings() as SettingsItem;\n                    if (this.#settings && Object.keys(menuItem).length) {\n                        this.#settings.addItem(\n                            menuItem.name,\n                            menuItem.key,\n                            menuItem.default,\n                            menuItem.subitems,\n                            menuItem.className\n                        );\n                    }\n                }\n            });\n        });\n\n        const e = addEvent('controlschanged');\n        this.#controls.dispatchEvent(e);\n    }\n\n    private _hideCustomMenu(menu: HTMLDivElement): void {\n        let timeout;\n        if (timeout && typeof window !== 'undefined') {\n            window.cancelAnimationFrame(timeout);\n        }\n\n        if (typeof window !== 'undefined') {\n            timeout = window.requestAnimationFrame(() => {\n                menu.setAttribute('aria-hidden', 'true');\n            });\n        }\n    }\n\n    private _toggleCustomMenu(event: Event, menu: HTMLDivElement, item: ElementItem): void {\n        const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n        menus.forEach((m) => {\n            if (m.getAttribute('aria-hidden') === 'false' && m.id !== menu.id) {\n                m.setAttribute('aria-hidden', 'true');\n            }\n        });\n        menu.setAttribute('aria-hidden', menu.getAttribute('aria-hidden') === 'true' ? 'false' : 'true');\n        if (typeof item.click === 'function') {\n            item.click(event);\n        }\n    }\n\n    private _createCustomElement(item: ElementItem): void {\n        const element = document.createElement(item.type);\n        element.tabIndex = 0;\n        element.id = item.id;\n        element.className = `op-controls__${item.id} op-control__${item.position} ${\n            item.showInAds ? '' : 'op-control__hide-in-ad'\n        }`;\n\n        if (item.styles) {\n            Object.assign(element.style, item.styles);\n        }\n\n        if (item.type === 'button' && item.icon) {\n            element.innerHTML = /\\.(jpg|png|svg|gif)$/.test(item.icon)\n                ? `<img src=\"${sanitize(item.icon)}\"${item.alt ? `alt=\"${sanitize(item.alt)}\"` : ''}>`\n                : sanitize(item.icon);\n        } else if (item.content) {\n            element.innerHTML = sanitize(item.content, false);\n        }\n        if (item.type === 'button' && item.title) {\n            element.title = sanitize(item.title);\n        }\n        if (item.type === 'img' && item.alt) {\n            (element as HTMLImageElement).alt = sanitize(item.alt);\n        }\n        if (item.type !== 'button' && item.click && typeof item.click === 'function') {\n            element.setAttribute('aria-role', 'button');\n        }\n\n        // In the event we have subitems for a button control, create menu and attach events for each item\n        if (item.type === 'button' && item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n            const menu = document.createElement('div');\n            menu.className = 'op-settings op-settings__custom';\n            menu.id = `${item.id}-menu`;\n            menu.setAttribute('aria-hidden', 'true');\n\n            const items = item.subitems.map((s) => {\n                let itemIcon = '';\n                if (s.icon) {\n                    itemIcon = /\\.(jpg|png|svg|gif)$/.test(s.icon)\n                        ? `<img src=\"${sanitize(s.icon)}\"${s.alt ? `alt=\"${sanitize(s.alt)}\"` : ''}>`\n                        : sanitize(s.icon, false);\n                }\n                return `<div class=\"op-settings__menu-item\" tabindex=\"0\" ${\n                    s.title ? `title=\"${s.title}\"` : ''\n                } role=\"menuitemradio\">\n                    <div class=\"op-settings__menu-label\" id=\"${s.id}\" data-value=\"${item.id}-${s.id}\">${itemIcon} ${\n                    s.label\n                }</div>\n                </div>`;\n            });\n\n            menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\">${items.join('')}</div>`;\n            this.#player.getContainer().appendChild(menu);\n\n            item.subitems.forEach((subitem) => {\n                const menuItem = menu.querySelector(`#${subitem.id}`);\n                if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                    menuItem.addEventListener('click', subitem.click, EVENT_OPTIONS);\n                }\n            });\n\n            // Ensure to toggle menu, hide other settings menus and dispatch a general custom\n            // click event (if created)\n            element.addEventListener('click', (e) => this._toggleCustomMenu(e, menu, item), EVENT_OPTIONS);\n\n            this.#player\n                .getElement()\n                .addEventListener('controlshidden', () => this._hideCustomMenu(menu), EVENT_OPTIONS);\n        } else if (item.click && typeof item.click === 'function') {\n            element.addEventListener('click', item.click, EVENT_OPTIONS);\n        }\n        if (item.mouseenter && typeof item.mouseenter === 'function') {\n            element.addEventListener('mouseenter', item.mouseenter, EVENT_OPTIONS);\n        }\n        if (item.mouseleave && typeof item.mouseleave === 'function') {\n            element.addEventListener('mouseleave', item.mouseleave, EVENT_OPTIONS);\n        }\n        if (item.keydown && typeof item.keydown === 'function') {\n            element.addEventListener('keydown', item.keydown, EVENT_OPTIONS);\n        }\n        if (item.blur && typeof item.blur === 'function') {\n            element.addEventListener('blur', item.blur, EVENT_OPTIONS);\n        }\n        if (item.focus && typeof item.focus === 'function') {\n            element.addEventListener('focus', item.focus, EVENT_OPTIONS);\n        }\n        if (item.layer) {\n            if (item.layer === 'main') {\n                this.#player.getContainer().appendChild(element);\n            } else {\n                this.getLayer(item.layer).appendChild(element);\n            }\n        }\n\n        // If there's an initial set of operations to dispatch as soon as the control\n        // is created, dispatch them\n        if (item.init && typeof item.init === 'function') {\n            item.init(this.#player);\n        }\n    }\n\n    private _destroyCustomElement(item: ElementItem): void {\n        const control = this.getContainer().querySelector(`.op-controls__${item.id}`);\n        if (control) {\n            if (item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n                const menu = this.#player.getContainer().querySelector(`#${item.id}-menu`) as HTMLDivElement;\n                if (menu) {\n                    item.subitems.forEach((subitem) => {\n                        const menuItem = menu.querySelector(`#${subitem.id}`);\n                        if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                            menuItem.removeEventListener('click', subitem.click);\n                        }\n                    });\n\n                    control.removeEventListener('click', (e) => this._toggleCustomMenu(e, menu, item));\n\n                    this.#player.getElement().removeEventListener('controlshidden', () => this._hideCustomMenu(menu));\n                    menu.remove();\n                }\n            }\n            if (item.click && typeof item.click === 'function') {\n                control.removeEventListener('click', item.click);\n            }\n            if (item.mouseenter && typeof item.mouseenter === 'function') {\n                control.removeEventListener('mouseenter', item.mouseenter);\n            }\n            if (item.mouseleave && typeof item.mouseleave === 'function') {\n                control.removeEventListener('mouseleave', item.mouseleave);\n            }\n            if (item.keydown && typeof item.keydown === 'function') {\n                control.removeEventListener('keydown', item.keydown);\n            }\n            if (item.blur && typeof item.blur === 'function') {\n                control.removeEventListener('blur', item.blur);\n            }\n            if (item.focus && typeof item.focus === 'function') {\n                control.removeEventListener('focus', item.focus);\n            }\n            control.remove();\n\n            // If there's an initial set of operations to dispatch as soon as the control\n            // is created, dispatch them\n            if (item.destroy && typeof item.destroy === 'function') {\n                item.destroy(this.#player);\n            }\n        }\n    }\n}\n\nexport default Controls;\n","import { Level, Source } from '../interfaces';\n\nabstract class Native {\n    element: HTMLMediaElement;\n\n    media: Source;\n\n    promise: Promise<unknown>;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #customPlayer: any;\n\n    constructor(element: HTMLMediaElement, media: Source) {\n        this.element = element;\n        this.media = media;\n        this.promise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    abstract canPlayType(mimeType: string): boolean;\n\n    abstract load(): void;\n\n    abstract destroy(): void;\n\n    abstract set src(media: Source);\n\n    abstract get src(): Source;\n\n    abstract set level(value: number | string | Record<string, unknown>);\n\n    abstract get level(): number | string;\n\n    abstract get levels(): Level[];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    set instance(customPlayer: any) {\n        this.#customPlayer = customPlayer;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get instance(): any {\n        return this.#customPlayer;\n    }\n\n    play(): Promise<void> {\n        return this.element.play();\n    }\n\n    pause(): void {\n        this.element.pause();\n    }\n\n    set volume(value: number) {\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    set muted(value: boolean) {\n        this.element.muted = value;\n    }\n\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set playbackRate(value: number) {\n        this.element.playbackRate = value;\n    }\n\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value: number) {\n        this.element.defaultPlaybackRate = value;\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        this.element.currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    get ended(): boolean {\n        return this.element.ended;\n    }\n}\n\nexport default Native;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isDashSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const dashjs: any;\n\nclass DashMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    #events: EventsList = {};\n\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n\n        this._assign = this._assign.bind(this);\n        this._preparePlayer = this._preparePlayer.bind(this);\n\n        this.promise =\n            typeof dashjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.dashjs.org/latest/dash.all.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(() => {\n            this.#player = dashjs.MediaPlayer().create();\n            this.instance = this.#player;\n        });\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && mimeType === 'application/dash+xml';\n    }\n\n    load(): void {\n        this._preparePlayer();\n        this.#player.attachSource(this.media.src);\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], this._assign);\n            });\n            this.#events = [];\n        }\n        this.#player.reset();\n    }\n\n    set src(media: Source) {\n        if (isDashSource(media)) {\n            this.destroy();\n            this.#player = dashjs.MediaPlayer().create();\n            this._preparePlayer();\n            this.#player.attachSource(media.src);\n\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player) {\n            const bitrates = this.#player.getBitrateInfoListFor('video');\n            if (bitrates.length) {\n                bitrates.forEach((item: number) => {\n                    if (bitrates[item]) {\n                        const { height, name } = bitrates[item];\n                        const level = {\n                            height,\n                            id: `${item}`,\n                            label: name || null,\n                        };\n                        levels.push(level);\n                    }\n                });\n            }\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        if (level === '0') {\n            this.#player.setAutoSwitchQuality(true);\n        } else {\n            this.#player.setAutoSwitchQuality(false);\n            this.#player.setQualityFor('video', level);\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.getQualityFor('video') : '-1';\n    }\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    private _assign(event: Event): void {\n        if (event.type === 'error') {\n            const details = {\n                detail: {\n                    message: event,\n                    type: 'M(PEG)-DASH',\n                },\n            };\n            const errorEvent = addEvent('playererror', details);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event.type, { detail: event });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _preparePlayer(): void {\n        this.#player.updateSettings({\n            debug: {\n                logLevel: dashjs.Debug.LOG_LEVEL_NONE,\n            },\n            streaming: {\n                fastSwitchEnabled: true,\n                scheduleWhilePaused: false,\n            },\n            ...((this.#options as Record<string, unknown>) || {}),\n        });\n        this.#player.initialize();\n        this.#player.attachView(this.element);\n        this.#player.setAutoPlay(false);\n    }\n}\n\nexport default DashMedia;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isFlvSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const flvjs: any;\n\nclass FlvMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n        this.element = element;\n        this.media = mediaSource;\n\n        this._create = this._create.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof flvjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/flv.js@latest/dist/flv.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && (mimeType === 'video/x-flv' || mimeType === 'video/flv');\n    }\n\n    load(): void {\n        this.#player.unload();\n        this.#player.detachMediaElement();\n        this.#player.attachMediaElement(this.element);\n        this.#player.load();\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        this.#player.destroy();\n        this.#player = null;\n    }\n\n    set src(media: Source) {\n        if (isFlvSource(media)) {\n            this.destroy();\n            this._create();\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const { configs, ...rest } = (this.#options as Record<string, unknown>) || {};\n\n        flvjs.LoggingControl.enableDebug = rest?.debug || false;\n        flvjs.LoggingControl.enableVerbose = rest?.debug || false;\n        const options = { ...rest, type: 'flv', url: this.media.src };\n        this.#player = flvjs.createPlayer(options, configs || {});\n        this.instance = this.#player;\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjsevents\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrortypes\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrordetails\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'error') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: `${data[0]}: ${data[1]} ${data[2].msg}`,\n                    type: 'FLV',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event, { detail: { data } });\n            this.element.dispatchEvent(e);\n        }\n    }\n}\n\nexport default FlvMedia;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventsList, Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS, SUPPORTS_HLS } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const Hls: any;\n\n// @see https://github.com/video-dev/hls.js/\nclass HlsMedia extends Native {\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    #recoverDecodingErrorDate = 0;\n\n    #recoverSwapAudioCodecDate = 0;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning\n    #options?: unknown;\n\n    #autoplay: boolean;\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, autoplay: boolean, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options || {};\n        this.element = element;\n        this.media = mediaSource;\n        this.#autoplay = autoplay;\n\n        this._create = this._create.bind(this);\n        this._play = this._play.bind(this);\n        this._pause = this._pause.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof Hls === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return SUPPORTS_HLS() && mimeType === 'application/x-mpegURL';\n    }\n\n    load(): void {\n        if (this.#player) {\n            this.#player.detachMedia();\n            this.#player.loadSource(this.media.src);\n            this.#player.attachMedia(this.element);\n        }\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n        this.element.removeEventListener('play', this._play);\n        this.element.removeEventListener('pause', this._pause);\n        if (this.#player) {\n            this.#player.destroy();\n            this.#player = null;\n        }\n    }\n\n    set src(media: Source) {\n        if (isHlsSource(media)) {\n            this.destroy();\n            this.#player = new Hls(this.#options);\n            this.#player.loadSource(media.src);\n            this.#player.attachMedia(this.element);\n\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const autoplay = !!(this.element.preload === 'auto' || this.#autoplay);\n        (this.#options as Record<string, unknown>).autoStartLoad = autoplay;\n\n        this.#player = new Hls(this.#options);\n        this.instance = this.#player;\n        this.#events = Hls.Events;\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                this._assign(this.#events[event], args)\n            );\n        });\n\n        if (!autoplay) {\n            this.element.addEventListener('play', this._play, EVENT_OPTIONS);\n            this.element.addEventListener('pause', this._pause, EVENT_OPTIONS);\n        }\n    }\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    // @see https://github.com/video-dev/hls.js/blob/master/src/errors.js\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#runtime-events\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#errors\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'hlsError') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: data[1].details,\n                    type: 'HLS',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n\n            // borrowed from https://video-dev.github.io/hls.js/demo\n            const type = data[1].type as string;\n            const { fatal } = data[1];\n            const details = data[1];\n            if (fatal) {\n                switch (type) {\n                    case 'mediaError':\n                        const now = new Date().getTime();\n                        if (!this.#recoverDecodingErrorDate || now - this.#recoverDecodingErrorDate > 3000) {\n                            this.#recoverDecodingErrorDate = new Date().getTime();\n                            this.#player.recoverMediaError();\n                        } else if (!this.#recoverSwapAudioCodecDate || now - this.#recoverSwapAudioCodecDate > 3000) {\n                            this.#recoverSwapAudioCodecDate = new Date().getTime();\n                            console.warn('Attempting to swap Audio Codec and recover from media error');\n                            this.#player.swapAudioCodec();\n                            this.#player.recoverMediaError();\n                        } else {\n                            const msg = 'Cannot recover, last media error recovery failed';\n                            console.error(msg);\n                            const mediaEvent = addEvent(type, { detail: { data: details } });\n                            this.element.dispatchEvent(mediaEvent);\n                        }\n                        break;\n                    case 'networkError':\n                        const message = 'Network error';\n                        console.error(message);\n                        const networkEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(networkEvent);\n                        break;\n                    default:\n                        this.#player.destroy();\n                        const fatalEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(fatalEvent);\n                        break;\n                }\n            } else {\n                const err = addEvent(type, { detail: { data: details } });\n                this.element.dispatchEvent(err);\n            }\n        } else {\n            const details: Record<string, unknown> = data[1] as Record<string, unknown>;\n            if (event === 'hlsLevelLoaded' && details.live === true) {\n                this.element.setAttribute('op-live__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (\n                event === 'hlsLevelUpdated' &&\n                details.live === true &&\n                (details.totalduration as number) > DVR_THRESHOLD\n            ) {\n                this.element.setAttribute('op-dvr__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (event === 'hlsFragParsingMetadata') {\n                const metaEvent = addEvent('metadataready', { detail: { data: data[1] } });\n                this.element.dispatchEvent(metaEvent);\n            }\n            const e = addEvent(event, { detail: { data: data[1] } });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _play(): void {\n        if (this.#player) {\n            this.#player.startLoad();\n        }\n    }\n\n    private _pause(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n    }\n}\n\nexport default HlsMedia;\n","import { Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio, isVideo } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\nclass HTML5Media extends Native {\n    #currentLevel: Level;\n\n    #levelList: Level[] = [];\n\n    #isStreaming = false;\n\n    #retryCount = 0;\n\n    #started = false;\n\n    #timer: number;\n\n    constructor(element: HTMLMediaElement, mediaFile: Source) {\n        super(element, mediaFile);\n\n        if (!isAudio(element) && !isVideo(element)) {\n            throw new TypeError('Native method only supports video/audio tags');\n        }\n\n        this._clearTimeout = this._clearTimeout.bind(this);\n        this._setTimeout = this._setTimeout.bind(this);\n        this._dispatchError = this._dispatchError.bind(this);\n        this._isDvrEnabled = this._isDvrEnabled.bind(this);\n        this._readMediadataInfo = this._readMediadataInfo.bind(this);\n\n        this.#isStreaming = isHlsSource(mediaFile);\n        this.element.addEventListener('playing', this._clearTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('stalled', this._setTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('error', this._dispatchError, EVENT_OPTIONS);\n        this.element.addEventListener('loadeddata', this._isDvrEnabled, EVENT_OPTIONS);\n        this.element.textTracks.addEventListener('addtrack', this._readMediadataInfo, EVENT_OPTIONS);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return !!this.element.canPlayType(mimeType).replace('no', '');\n    }\n\n    load(): void {\n        this.element.load();\n    }\n\n    destroy(): void {\n        this.element.removeEventListener('playing', this._clearTimeout);\n        this.element.removeEventListener('stalled', this._setTimeout);\n        this.element.removeEventListener('error', this._dispatchError);\n        this.element.removeEventListener('loadeddata', this._isDvrEnabled);\n        this.element.textTracks.removeEventListener('addtrack', this._readMediadataInfo);\n    }\n\n    get levels(): Level[] {\n        if (!this.#levelList.length) {\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const level = {\n                    height: 0,\n                    id: `${i}`,\n                    label: levels[i].getAttribute('title') || '',\n                };\n                this.#levelList.push(level);\n            }\n        }\n        return this.#levelList;\n    }\n\n    set level(level: string) {\n        const idx = this.#levelList.findIndex((item) => item.id === level);\n        if (idx > -1) {\n            this.#currentLevel = this.levels[idx];\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const source = levels[i].getAttribute('src');\n                if (source && parseInt(this.#currentLevel.id, 10) === i) {\n                    this.element.src = source;\n                }\n            }\n        }\n    }\n\n    get level(): string {\n        return this.#currentLevel?.id || '-1';\n    }\n\n    set src(media: Source) {\n        this.element.src = media.src;\n    }\n\n    private _isDvrEnabled(): void {\n        const time = this.element.seekable.end(this.element.seekable.length - 1) - this.element.seekable.start(0);\n        if (this.#isStreaming && time > DVR_THRESHOLD && !this.element.getAttribute('op-dvr__enabled')) {\n            this.element.setAttribute('op-dvr__enabled', 'true');\n            const timeEvent = addEvent('timeupdate');\n            this.element.dispatchEvent(timeEvent);\n        }\n    }\n\n    private _readMediadataInfo(e: TrackEvent): void {\n        const target = e;\n        if (target?.track?.kind === 'metadata') {\n            target.track.mode = 'hidden';\n            target.track.addEventListener(\n                'cuechange',\n                (event) => {\n                    const track = event.target as TextTrack;\n                    const cue = track.activeCues ? track.activeCues[0] : null;\n                    if (cue) {\n                        const metaDataEvent = addEvent('metadataready', { detail: cue });\n                        this.element.dispatchEvent(metaDataEvent);\n                    }\n                },\n                EVENT_OPTIONS\n            );\n        }\n    }\n\n    private _setTimeout(): void {\n        if (!this.#started && window !== undefined) {\n            this.#started = true;\n            this.#timer = window.setInterval(() => {\n                if (this.#retryCount >= 30) {\n                    clearInterval(this.#timer);\n                    const message = 'Media download failed part-way due to a network error';\n                    const details = {\n                        detail: {\n                            data: { message, error: 2 },\n                            message,\n                            type: 'HTML5',\n                        },\n                    };\n                    const errorEvent = addEvent('playererror', details);\n                    this.element.dispatchEvent(errorEvent);\n                    this.#retryCount = 0;\n                    this.#started = false;\n                } else {\n                    this.#retryCount++;\n                }\n            }, 1000);\n        }\n    }\n\n    private _clearTimeout(): void {\n        if (this.#timer) {\n            clearInterval(this.#timer);\n            this.#retryCount = 0;\n            this.#started = false;\n        }\n    }\n\n    private _dispatchError(e: Event): void {\n        let defaultMessage;\n        const target = e.target as HTMLMediaElement;\n        const error = target?.error;\n        switch (error?.code) {\n            case error?.MEDIA_ERR_ABORTED:\n                defaultMessage = 'Media playback aborted';\n                break;\n            case error?.MEDIA_ERR_NETWORK:\n                defaultMessage = 'Media download failed part-way due to a network error';\n                break;\n            case error?.MEDIA_ERR_DECODE:\n                defaultMessage = `Media playback aborted due to a corruption problem or because the\n                    media used features your browser did not support.`;\n                break;\n            case error?.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                defaultMessage = `Media could not be loaded, either because the server or network failed\n                    or because the format is not supported.`;\n                break;\n            default:\n                defaultMessage = 'Unknown error occurred.';\n                break;\n        }\n        const details = {\n            detail: {\n                data: { ...e, message: defaultMessage, error: error?.code },\n                message: defaultMessage,\n                type: 'HTML5',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.element.dispatchEvent(errorEvent);\n    }\n}\n\nexport default HTML5Media;\n","import { CustomMedia, Level, PlayerLayers, PlayerOptions, Source } from './interfaces';\nimport DashMedia from './media/dash';\nimport FlvMedia from './media/flv';\nimport HlsMedia from './media/hls';\nimport HTML5Media from './media/html5';\nimport * as source from './utils/media';\n\nclass Media {\n    #element: HTMLMediaElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #media: HTML5Media | HlsMedia | DashMedia | any;\n\n    #files: Source[];\n\n    #promisePlay: Promise<void>;\n\n    #options: PlayerOptions;\n\n    #autoplay: boolean;\n\n    #mediaLoaded = false;\n\n    #customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    #currentSrc: Source;\n\n    constructor(element: HTMLMediaElement, options: PlayerOptions, autoplay: boolean, customMedia: CustomMedia) {\n        this.#element = element;\n        this.#options = options;\n        this.#files = this._getMediaFiles();\n        this.#customMedia = customMedia;\n        this.#autoplay = autoplay;\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return this.#media.canPlayType(mimeType);\n    }\n\n    async load(): Promise<void> {\n        if (this.#mediaLoaded) {\n            return;\n        }\n\n        this.#mediaLoaded = true;\n\n        if (!this.#files.length) {\n            throw new TypeError('Media not set');\n        }\n\n        // Remove previous media if any is detected and it's different from current one\n        if (this.#media && typeof this.#media.destroy === 'function') {\n            const sameMedia = this.#files.length === 1 && this.#files[0].src === this.#media.media.src;\n            if (!sameMedia) {\n                this.#media.destroy();\n            }\n        }\n\n        // Loop until first playable source is found\n        this.#files.some((media) => {\n            try {\n                this.#media = this._invoke(media);\n            } catch (e) {\n                this.#media = new HTML5Media(this.#element, media);\n            }\n\n            return this.#media.canPlayType(media.type);\n        });\n\n        try {\n            if (this.#media === null) {\n                throw new TypeError('Media cannot be played with any valid media type');\n            }\n\n            await this.#media.promise;\n            this.#media.load();\n        } catch (e) {\n            // destroy media\n            if (this.#media) {\n                this.#media.destroy();\n            }\n            throw e;\n        }\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async play(): Promise<void> {\n        if (!this.#mediaLoaded) {\n            await this.load();\n            this.#mediaLoaded = false;\n        } else {\n            await this.#media.promise;\n        }\n        this.#promisePlay = this.#media.play();\n        return this.#promisePlay;\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async pause(): Promise<void> {\n        if (this.#promisePlay !== undefined) {\n            await this.#promisePlay;\n        }\n        this.#media.pause();\n    }\n\n    destroy(): void {\n        if (this.#media) {\n            this.#media.destroy();\n        }\n    }\n\n    set src(media) {\n        if (typeof media === 'string') {\n            this.#files.push({\n                src: media,\n                type: source.predictMimeType(media, this.#element),\n            });\n        } else if (Array.isArray(media)) {\n            this.#files = media;\n        } else if (typeof media === 'object') {\n            this.#files.push(media);\n        }\n\n        // Remove files without source\n        this.#files = this.#files.filter((file) => file.src);\n\n        if (this.#files.length > 0) {\n            const [file] = this.#files;\n            // Save copy of original file to restore it when player is destroyed\n            if (this.#element.src) {\n                this.#element.setAttribute('data-op-file', this.#files[0].src);\n            }\n\n            this.#element.src = file.src;\n            this.#currentSrc = file;\n            if (this.#media) {\n                this.#media.src = file;\n            }\n        } else {\n            this.#element.src = '';\n        }\n    }\n\n    get src(): Source[] {\n        return this.#files;\n    }\n\n    get current(): Source {\n        return this.#currentSrc;\n    }\n\n    set mediaFiles(sources: Source[]) {\n        this.#files = sources;\n    }\n\n    get mediaFiles(): Source[] {\n        return this.#files;\n    }\n\n    set volume(value: number) {\n        if (this.#media) {\n            this.#media.volume = value;\n        }\n    }\n\n    get volume(): number {\n        return this.#media ? this.#media.volume : this.#element.volume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#media) {\n            this.#media.muted = value;\n        }\n    }\n\n    get muted(): boolean {\n        return this.#media ? this.#media.muted : this.#element.muted;\n    }\n\n    set playbackRate(value) {\n        if (this.#media) {\n            this.#media.playbackRate = value;\n        }\n    }\n\n    get playbackRate(): number {\n        return this.#media ? this.#media.playbackRate : this.#element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value) {\n        if (this.#media) {\n            this.#media.defaultPlaybackRate = value;\n        }\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.#media ? this.#media.defaultPlaybackRate : this.#element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        if (this.#media) {\n            this.#media.currentTime = value;\n        }\n    }\n\n    get currentTime(): number {\n        return this.#media ? this.#media.currentTime : this.#element.currentTime;\n    }\n\n    get duration(): number {\n        const duration = this.#media ? this.#media.duration : this.#element.duration;\n        // To seek backwards in a live streaming (mobile devices)\n        if (duration === Infinity && this.#element.seekable && this.#element.seekable.length) {\n            return this.#element.seekable.end(0);\n        }\n        return duration;\n    }\n\n    get paused(): boolean {\n        return this.#media ? this.#media.paused : this.#element.paused;\n    }\n\n    get ended(): boolean {\n        return this.#media ? this.#media.ended : this.#element.ended;\n    }\n\n    set loaded(loaded: boolean) {\n        this.#mediaLoaded = loaded;\n    }\n\n    get loaded(): boolean {\n        return this.#mediaLoaded;\n    }\n\n    set level(value: number | string | Level) {\n        if (this.#media) {\n            this.#media.level = value;\n        }\n    }\n\n    get level(): number | string | Level {\n        return this.#media ? this.#media.level : -1;\n    }\n\n    get levels(): Level[] {\n        return this.#media ? this.#media.levels : [];\n    }\n\n    get instance(): Media | null {\n        return this.#media ? this.#media.instance : null;\n    }\n\n    private _getMediaFiles(): Source[] {\n        const mediaFiles = [];\n        const sourceTags = this.#element.querySelectorAll('source');\n        const nodeSource = this.#element.src;\n\n        // Consider if node contains the `src` and `type` attributes\n        if (nodeSource) {\n            mediaFiles.push({\n                src: nodeSource,\n                type: this.#element.getAttribute('type') || source.predictMimeType(nodeSource, this.#element),\n            });\n        }\n\n        // test <source> types to see if they are usable\n        for (let i = 0, total = sourceTags.length; i < total; i++) {\n            const item = sourceTags[i];\n            const { src } = item;\n            mediaFiles.push({\n                src,\n                type: item.getAttribute('type') || source.predictMimeType(src, this.#element),\n            });\n\n            // If tag has the attribute `preload` set as `none`, the current media will\n            // be the first one on the list of sources\n            if (i === 0) {\n                const [file] = mediaFiles;\n                this.#currentSrc = file;\n            }\n        }\n\n        if (!mediaFiles.length) {\n            mediaFiles.push({\n                src: '',\n                type: source.predictMimeType('', this.#element),\n            });\n        }\n\n        return mediaFiles;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _invoke(media: Source): HlsMedia | DashMedia | HTML5Media | any {\n        const playHLSNatively =\n            this.#element.canPlayType('application/vnd.apple.mpegurl') ||\n            this.#element.canPlayType('application/x-mpegURL');\n\n        this.#currentSrc = media;\n\n        const { layers } = this.#options.controls || {};\n\n        let activeLevels = false;\n        if (layers) {\n            Object.keys(layers).forEach((layer) => {\n                const current = layers ? layers[layer as keyof PlayerLayers] : null;\n                if (current && current.indexOf('levels') > -1) {\n                    activeLevels = true;\n                }\n            });\n        }\n\n        if (Object.keys(this.#customMedia.media).length) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let customRef: any;\n            this.#customMedia.rules.forEach((rule) => {\n                const type = rule(media.src);\n                if (type) {\n                    const customMedia = this.#customMedia.media[type];\n                    const customOptions = this.#options[this.#customMedia.optionsKey[type]] || undefined;\n                    customRef = customMedia(this.#element, media, this.#autoplay, customOptions);\n                }\n            });\n            if (customRef) {\n                customRef.create();\n                return customRef;\n            }\n            return new HTML5Media(this.#element, media);\n        }\n        if (source.isHlsSource(media)) {\n            if (playHLSNatively && this.#options.forceNative && !activeLevels) {\n                return new HTML5Media(this.#element, media);\n            }\n            const hlsOptions = this.#options?.hls || undefined;\n            return new HlsMedia(this.#element, media, this.#autoplay, hlsOptions);\n        }\n        if (source.isDashSource(media)) {\n            const dashOptions = this.#options?.dash || undefined;\n            return new DashMedia(this.#element, media, dashOptions);\n        }\n        if (source.isFlvSource(media)) {\n            const flvOptions = this.#options?.flv || {\n                debug: false,\n                type: 'flv',\n                url: media.src,\n            };\n            return new FlvMedia(this.#element, media, flvOptions);\n        }\n\n        return new HTML5Media(this.#element, media);\n    }\n}\n\nexport default Media;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AdsOptions, Source } from '../interfaces';\nimport Media from '../media';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from '../utils/constants';\nimport { addEvent, isAudio, isVideo, isXml, loadScript } from '../utils/general';\n\ndeclare const google: any;\n\n// @see https://developers.google.com/interactive-media-ads/\nclass Ads {\n    loadPromise: unknown;\n\n    loadedAd = false;\n\n    #ended = false;\n\n    #done = false;\n\n    #active = false;\n\n    #started = false;\n\n    #intervalTimer = 0;\n\n    #volume: number;\n\n    #muted = false;\n\n    #duration = 0;\n\n    #currentTime = 0;\n\n    // @see https://tinyurl.com/ybjas4ut\n    #manager: any = null;\n\n    #player: Player;\n\n    #media: Media;\n\n    #element: HTMLMediaElement;\n\n    #events: string[] = [];\n\n    #ads: string | string[];\n\n    #promise: Promise<void>;\n\n    // @see https://tinyurl.com/ycwp4ufd\n    #loader: any;\n\n    #container?: HTMLDivElement;\n\n    #customClickContainer?: HTMLDivElement;\n\n    #skipElement?: HTMLElement;\n\n    // @see https://tinyurl.com/ya3zksso\n    #displayContainer: any;\n\n    // @see https://tinyurl.com/ya8bxjf4\n    #request: any;\n\n    #autostart = false;\n\n    #autostartMuted = false;\n\n    #playTriggered = false;\n\n    #options: AdsOptions;\n\n    #currentIndex = 0;\n\n    #originalVolume: number;\n\n    #preloadContent: any;\n\n    #lastTimePaused = 0;\n\n    #mediaSources: Source[] = [];\n\n    #mediaStarted = false;\n\n    #adEvent: any = null;\n\n    constructor(\n        player: Player,\n        ads: string | string[],\n        autostart?: boolean,\n        autostartMuted?: boolean,\n        options?: AdsOptions\n    ) {\n        const defaultOpts: AdsOptions = {\n            autoPlayAdBreaks: true,\n            customClick: {\n                enabled: false,\n                label: 'Click here for more info',\n            },\n            audioSkip: {\n                enabled: true,\n                label: 'Skip Ad',\n                remainingLabel: 'Skip in [[secs]] seconds',\n            },\n            debug: false,\n            enablePreloading: false,\n            language: 'en',\n            loop: false,\n            numRedirects: 4,\n            publisherId: undefined,\n            sdkPath: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n            sessionId: undefined,\n            src: [],\n            vpaidMode: 'enabled',\n        };\n        this.#player = player;\n        this.#ads = ads;\n        this.#media = player.getMedia();\n        this.#element = player.getElement();\n        this.#autostart = autostart || false;\n        this.#muted = player.getElement().muted;\n        this.#autostartMuted = autostartMuted || false;\n        this.#options = { ...defaultOpts, ...options };\n        if (options?.customClick && Object.keys(options.customClick).length) {\n            this.#options.customClick = { ...defaultOpts.customClick, ...options.customClick };\n        }\n        this.#playTriggered = false;\n        this.#originalVolume = this.#element.volume;\n        this.#volume = this.#originalVolume;\n\n        const path = this.#options?.debug\n            ? this.#options?.sdkPath?.replace(/(\\.js$)/, '_debug.js')\n            : this.#options?.sdkPath;\n\n        this.load = this.load.bind(this);\n        this.resizeAds = this.resizeAds.bind(this);\n        this._handleClickInContainer = this._handleClickInContainer.bind(this);\n        this._handleSkipAds = this._handleSkipAds.bind(this);\n        this._loaded = this._loaded.bind(this);\n        this._error = this._error.bind(this);\n        this._assign = this._assign.bind(this);\n        this._contentLoadedAction = this._contentLoadedAction.bind(this);\n        this._loadedMetadataHandler = this._loadedMetadataHandler.bind(this);\n        this._contentEndedListener = this._contentEndedListener.bind(this);\n        this._handleResizeAds = this._handleResizeAds.bind(this);\n        this._onContentPauseRequested = this._onContentPauseRequested.bind(this);\n        this._onContentResumeRequested = this._onContentResumeRequested.bind(this);\n\n        this.#promise =\n            path && (typeof google === 'undefined' || typeof google.ima === 'undefined')\n                ? loadScript(path)\n                : new Promise((resolve) => {\n                      resolve();\n                  });\n\n        this.#promise\n            .then(() => {\n                this.load();\n            })\n            .catch((error) => {\n                let message = 'Ad script could not be loaded; please check if you have an AdBlock ';\n                message += 'turned on, or if you provided a valid URL is correct';\n                console.error(`Ad error: ${message}.`);\n\n                const details = {\n                    detail: {\n                        data: error,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            });\n    }\n\n    load(force = false): void {\n        if (\n            typeof google === 'undefined' ||\n            !google.ima ||\n            (!force && this.loadedAd && this.#options.autoPlayAdBreaks)\n        ) {\n            return;\n        }\n\n        // If we have set `autoPlayAdBreaks` to false and haven't set the force flag, don't load ads yet\n        if (!this.#options.autoPlayAdBreaks && !force) {\n            return;\n        }\n\n        this.loadedAd = true;\n\n        const existingContainer = this.#player.getContainer().querySelector('.op-ads');\n        if (existingContainer && existingContainer.parentNode) {\n            existingContainer.parentNode.removeChild(existingContainer);\n        }\n\n        this.#started = true;\n        this.#container = document.createElement('div');\n        this.#container.className = 'op-ads';\n        this.#container.tabIndex = -1;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.#container, this.#element.nextSibling);\n        }\n        this.#container.addEventListener('click', this._handleClickInContainer);\n\n        if (this.#options.customClick?.enabled) {\n            this.#customClickContainer = document.createElement('div');\n            this.#customClickContainer.className = 'op-ads__click-container';\n            this.#customClickContainer.innerHTML = `<div class=\"op-ads__click-label\">${\n                this.#options.customClick.label\n            }</div>`;\n            if (this.#element.parentElement) {\n                this.#element.parentElement.insertBefore(this.#customClickContainer, this.#element.nextSibling);\n            }\n        }\n\n        if (isAudio(this.#element) && this.#options.audioSkip?.enabled) {\n            if (this.#options.audioSkip?.element) {\n                const { element } = this.#options.audioSkip || {};\n                if (typeof element === 'string') {\n                    const target = document.getElementById(element);\n                    if (target) {\n                        this.#skipElement = target;\n                    }\n                } else if (element instanceof HTMLElement) {\n                    this.#skipElement = element;\n                }\n            } else {\n                this.#skipElement = document.createElement('button');\n                this.#skipElement.className = 'op-ads__skip hidden';\n                this.#player.getControls().getContainer().appendChild(this.#skipElement);\n            }\n            if (this.#skipElement) {\n                this.#skipElement.addEventListener('click', this._handleSkipAds, EVENT_OPTIONS);\n            }\n        }\n\n        this.#mediaSources = this.#media.src;\n        const vpaidModeMap: Record<string, unknown> = {\n            disabled: google.ima.ImaSdkSettings.VpaidMode.DISABLED,\n            enabled: google.ima.ImaSdkSettings.VpaidMode.ENABLED,\n            insecure: google.ima.ImaSdkSettings.VpaidMode.INSECURE,\n        };\n\n        google.ima.settings.setVpaidMode(vpaidModeMap[this.#options.vpaidMode || 'enabled']);\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(true);\n        google.ima.settings.setAutoPlayAdBreaks(this.#options.autoPlayAdBreaks);\n        google.ima.settings.setNumRedirects(this.#options.numRedirects);\n        google.ima.settings.setLocale(this.#options.language);\n        if (this.#options.sessionId) {\n            google.ima.settings.setSessionId(this.#options.sessionId);\n        }\n        if (this.#options.publisherId) {\n            google.ima.settings.setPpid(this.#options.publisherId);\n        }\n        google.ima.settings.setPlayerType('openplayerjs');\n        google.ima.settings.setPlayerVersion('3.0.0');\n\n        this.#displayContainer = new google.ima.AdDisplayContainer(\n            this.#container,\n            this.#element,\n            this.#customClickContainer\n        );\n\n        this.#loader = new google.ima.AdsLoader(this.#displayContainer);\n        this.#loader.addEventListener(\n            google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n            this._loaded,\n            EVENT_OPTIONS\n        );\n\n        this.#loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error, EVENT_OPTIONS);\n\n        // Create responsive ad\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this._handleResizeAds, EVENT_OPTIONS);\n        }\n        this.#element.addEventListener('loadedmetadata', this._handleResizeAds, EVENT_OPTIONS);\n\n        // Request Ads automatically if `autoplay` was set\n        if (\n            this.#autostart === true ||\n            this.#autostartMuted === true ||\n            force === true ||\n            this.#options.enablePreloading === true ||\n            this.#playTriggered === true\n        ) {\n            if (!this.#done) {\n                this.#done = true;\n                this.#displayContainer.initialize();\n            }\n            this._requestAds();\n        }\n    }\n\n    async play(): Promise<void> {\n        if (!this.#done) {\n            this.#playTriggered = true;\n            this._initNotDoneAds();\n            return;\n        }\n\n        if (this.#manager) {\n            try {\n                // No timer interval and no Ad active means it's a potential initial ad play\n                if (!this.#intervalTimer && this.#active === false) {\n                    this.#manager.start();\n                } else {\n                    this.#manager.resume();\n                }\n                this.#active = true;\n                const e = addEvent('play');\n                this.#element.dispatchEvent(e);\n            } catch (err) {\n                this._resumeMedia();\n            }\n        }\n    }\n\n    pause(): void {\n        if (this.#manager) {\n            this.#active = false;\n            this.#manager.pause();\n            const e = addEvent('pause');\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    destroy(): void {\n        if (this.#manager) {\n            this.#manager.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n\n            if (this.#events) {\n                this.#events.forEach((event) => {\n                    this.#manager.removeEventListener(event, this._assign);\n                });\n            }\n        }\n\n        this.#events = [];\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.removeEventListener(event, mouseEvents[event]);\n            }\n        });\n\n        if (this.#loader) {\n            this.#loader.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n            this.#loader.removeEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this._loaded);\n        }\n\n        const destroy = !Array.isArray(this.#ads) || this.#currentIndex > this.#ads.length;\n        if (this.#manager && destroy) {\n            this.#manager.destroy();\n        }\n\n        if (this.#options.customClick?.enabled && this.#customClickContainer) {\n            this.#customClickContainer.remove();\n        }\n\n        if (this.#options.audioSkip?.enabled && this.#skipElement) {\n            this.#skipElement.removeEventListener('click', this._handleSkipAds);\n            this.#skipElement.remove();\n        }\n\n        if (IS_IOS || IS_ANDROID) {\n            this.#element.removeEventListener('loadedmetadata', this._contentLoadedAction);\n        }\n        this.#element.removeEventListener('loadedmetadata', this._handleResizeAds);\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this._handleResizeAds);\n        }\n\n        if (this.#container) {\n            this.#container.removeEventListener('click', this._handleClickInContainer);\n            this.#container.remove();\n        }\n        this.loadPromise = null;\n        this.loadedAd = false;\n        this.#done = false;\n        this.#playTriggered = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        this.#adEvent = null;\n    }\n\n    resizeAds(width?: number, height?: number): void {\n        if (this.#manager) {\n            const target = this.#element;\n            const mode =\n                target.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL;\n\n            let formattedWidth = width;\n            const percentageWidth = width ? width.toString() : '';\n            if (width && percentageWidth.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedWidth = this.#element.parentElement.offsetWidth * (parseInt(percentageWidth, 10) / 100);\n                }\n            }\n\n            let formattedHeight = height;\n            const percentageHeight = height ? height.toString() : '';\n            if (height && percentageHeight.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedHeight = this.#element.parentElement.offsetHeight * (parseInt(percentageHeight, 10) / 100);\n                }\n            }\n\n            let timeout;\n\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame(() => {\n                    this.#manager.resize(\n                        formattedWidth || target.offsetWidth,\n                        formattedHeight || target.offsetHeight,\n                        mode\n                    );\n                });\n            }\n        }\n    }\n\n    getAdsManager(): unknown {\n        return this.#manager;\n    }\n\n    getAdsLoader(): any {\n        return this.#loader;\n    }\n\n    started(): boolean {\n        return this.#started;\n    }\n\n    set src(source: string | string[]) {\n        this.#ads = source;\n    }\n\n    set isDone(value: boolean) {\n        this.#done = value;\n    }\n\n    set playRequested(value: boolean) {\n        this.#playTriggered = value;\n    }\n\n    set volume(value: number) {\n        if (this.#manager) {\n            this.#volume = value;\n            this.#manager.setVolume(value);\n            this._setMediaVolume(value);\n            this.#muted = value === 0;\n        }\n    }\n\n    get volume(): number {\n        return this.#manager ? this.#manager.getVolume() : this.#originalVolume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#manager) {\n            if (value) {\n                this.#manager.setVolume(0);\n                this.#muted = true;\n                this._setMediaVolume(0);\n            } else {\n                this.#manager.setVolume(this.#volume);\n                this.#muted = false;\n                this._setMediaVolume(this.#volume);\n            }\n        }\n    }\n\n    get muted(): boolean {\n        return this.#muted;\n    }\n\n    set currentTime(value: number) {\n        this.#currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.#currentTime;\n    }\n\n    get duration(): number {\n        return this.#duration;\n    }\n\n    get paused(): boolean {\n        return !this.#active;\n    }\n\n    get ended(): boolean {\n        return this.#ended;\n    }\n\n    private _assign(event: any): void {\n        const ad = event.getAd();\n        if (ad) {\n            this.#adEvent = ad;\n        }\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                if (!ad.isLinear()) {\n                    this._onContentResumeRequested();\n                } else {\n                    if (IS_IPHONE && isVideo(this.#element)) {\n                        this.#element.controls = false;\n                    }\n                    this.#duration = ad.getDuration();\n                    this.#currentTime = ad.getDuration();\n                    if (!this.#mediaStarted && !IS_IOS && !IS_ANDROID) {\n                        const waitingEvent = addEvent('waiting');\n                        this.#element.dispatchEvent(waitingEvent);\n\n                        const loadedEvent = addEvent('loadedmetadata');\n                        this.#element.dispatchEvent(loadedEvent);\n\n                        this.resizeAds();\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.STARTED:\n                if (ad.isLinear()) {\n                    if (\n                        this.#element.parentElement &&\n                        !this.#element.parentElement.classList.contains('op-ads--active')\n                    ) {\n                        this.#element.parentElement.classList.add('op-ads--active');\n                    }\n\n                    if (!this.#media.paused) {\n                        this.#media.pause();\n                    }\n                    this.#active = true;\n                    const playEvent = addEvent('play');\n                    this.#element.dispatchEvent(playEvent);\n                    let resized;\n\n                    if (!resized) {\n                        this.resizeAds();\n                        resized = true;\n                    }\n\n                    if (this.#media.ended) {\n                        this.#ended = false;\n                        const endEvent = addEvent('adsmediaended');\n                        this.#element.dispatchEvent(endEvent);\n                    }\n\n                    if (typeof window !== 'undefined') {\n                        this.#intervalTimer = window.setInterval(() => {\n                            if (this.#active === true) {\n                                this.#currentTime = Math.round(this.#manager.getRemainingTime());\n                                const timeEvent = addEvent('timeupdate');\n                                this.#element.dispatchEvent(timeEvent);\n                            }\n                        }, 350);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.SKIPPED:\n                if (ad.isLinear()) {\n                    if (event.type === google.ima.AdEvent.Type.SKIPPED) {\n                        const skipEvent = addEvent('adsskipped');\n                        this.#element.dispatchEvent(skipEvent);\n                    }\n\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.#active = false;\n                    clearInterval(this.#intervalTimer);\n                }\n                break;\n            case google.ima.AdEvent.Type.VOLUME_CHANGED:\n                this._setMediaVolume(this.volume);\n                break;\n            case google.ima.AdEvent.Type.VOLUME_MUTED:\n                if (ad.isLinear()) {\n                    const volumeEvent = addEvent('volumechange');\n                    this.#element.dispatchEvent(volumeEvent);\n                }\n                break;\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                if (ad.isLinear()) {\n                    this.#active = false;\n                    this.#ended = true;\n                    this.#intervalTimer = 0;\n                    this.#muted = false;\n                    this.#started = false;\n                    this.#adEvent = null;\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.destroy();\n                    if (this.#element.currentTime >= this.#element.duration) {\n                        const endedEvent = addEvent('ended');\n                        this.#element.dispatchEvent(endedEvent);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.CLICK:\n                const pauseEvent = addEvent('pause');\n                this.#element.dispatchEvent(pauseEvent);\n                break;\n            case google.ima.AdEvent.Type.AD_BREAK_READY:\n                if (!this.#options.autoPlayAdBreaks) {\n                    this.play();\n                }\n                break;\n            case google.ima.AdEvent.Type.AD_PROGRESS:\n                const progressData = event.getAdData();\n                const offset = this.#adEvent ? this.#adEvent.getSkipTimeOffset() : -1;\n                if (this.#skipElement) {\n                    if (offset !== -1) {\n                        const canSkip = this.#manager.getAdSkippableState();\n                        const remainingTime = Math.ceil(offset - progressData.currentTime);\n                        this.#skipElement.classList.remove('hidden');\n                        if (canSkip) {\n                            this.#skipElement.textContent = this.#options.audioSkip?.label || '';\n                            this.#skipElement.classList.remove('disabled');\n                        } else {\n                            this.#skipElement.textContent =\n                                this.#options.audioSkip?.remainingLabel.replace('[[secs]]', remainingTime.toString()) ||\n                                '';\n                            this.#skipElement.classList.add('disabled');\n                        }\n                    } else {\n                        this.#skipElement.classList.add('hidden');\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        // Assign events prefixed with `ads` to main element so user\n        // can listen to these events, except if the system detects a non-fatal error\n        if (event.type === google.ima.AdEvent.Type.LOG) {\n            const adData = event.getAdData();\n            if (adData.adError) {\n                const message = adData.adError.getMessage();\n                console.warn(`Ad warning: Non-fatal error occurred: ${message}`);\n                const details = {\n                    detail: {\n                        data: adData.adError,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            }\n        } else {\n            const e = addEvent(`ads${event.type}`);\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.ErrorCode\n    private _error(event: any): void {\n        const error = event.getError();\n        const details = {\n            detail: {\n                data: error,\n                message: error.toString(),\n                type: 'Ads',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.#element.dispatchEvent(errorEvent);\n\n        // @see https://support.google.com/admanager/answer/4442429?hl=en\n        const fatalErrorCodes = [\n            100, 101, 102, 300, 301, 302, 303, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 500, 501, 502, 503,\n            900, 901, 1005,\n        ];\n\n        if (Array.isArray(this.#ads) && this.#ads.length > 1 && this.#currentIndex < this.#ads.length - 1) {\n            this.#currentIndex++;\n            this.destroy();\n            this.#started = true;\n            this.#playTriggered = true;\n            this.load(true);\n            console.warn(`Ad warning: ${error.toString()}`);\n        } else {\n            // Unless there's a fatal error, do not destroy the Ads manager\n            if (fatalErrorCodes.indexOf(error.getErrorCode()) > -1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                console.error(`Ad error: ${error.toString()}`);\n            } else {\n                console.warn(`Ad warning: ${error.toString()}`);\n            }\n            this.#adEvent = null;\n            if (this.#autostart === true || this.#autostartMuted === true || this.#started === true) {\n                this.#active = false;\n                // Sometimes, due to pre-fetch issues, Ads could report an error, but the SDK is able to\n                // play Ads, so check if src was set to determine what action to take\n                this._resumeMedia();\n            }\n        }\n    }\n\n    private _loaded(managerLoadedEvent: any): void {\n        const adsRenderingSettings = new google.ima.AdsRenderingSettings();\n        adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = false;\n        adsRenderingSettings.enablePreloading = this.#options.enablePreloading;\n        // Get the ads manager.\n        this.#manager = managerLoadedEvent.getAdsManager(this.#element, adsRenderingSettings);\n        this._start(this.#manager);\n        this.loadPromise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    private _start(manager: any): void {\n        if (this.#customClickContainer && manager.isCustomClickTrackingUsed()) {\n            this.#customClickContainer.classList.add('op-ads__click-container--visible');\n        }\n        // Add listeners to the required events.\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n            this._onContentPauseRequested,\n            EVENT_OPTIONS\n        );\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n            this._onContentResumeRequested,\n            EVENT_OPTIONS\n        );\n\n        this.#events = [\n            google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n            google.ima.AdEvent.Type.CLICK,\n            google.ima.AdEvent.Type.VIDEO_CLICKED,\n            google.ima.AdEvent.Type.VIDEO_ICON_CLICKED,\n            google.ima.AdEvent.Type.AD_PROGRESS,\n            google.ima.AdEvent.Type.AD_BUFFERING,\n            google.ima.AdEvent.Type.IMPRESSION,\n            google.ima.AdEvent.Type.DURATION_CHANGE,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.LINEAR_CHANGED,\n            google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n            google.ima.AdEvent.Type.AD_METADATA,\n            google.ima.AdEvent.Type.INTERACTION,\n            google.ima.AdEvent.Type.COMPLETE,\n            google.ima.AdEvent.Type.FIRST_QUARTILE,\n            google.ima.AdEvent.Type.LOADED,\n            google.ima.AdEvent.Type.MIDPOINT,\n            google.ima.AdEvent.Type.PAUSED,\n            google.ima.AdEvent.Type.RESUMED,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.STARTED,\n            google.ima.AdEvent.Type.THIRD_QUARTILE,\n            google.ima.AdEvent.Type.SKIPPED,\n            google.ima.AdEvent.Type.VOLUME_CHANGED,\n            google.ima.AdEvent.Type.VOLUME_MUTED,\n            google.ima.AdEvent.Type.LOG,\n        ];\n\n        if (!this.#options.autoPlayAdBreaks) {\n            // Add it to the events array so it gets removed onDestroy\n            this.#events.push(google.ima.AdEvent.Type.AD_BREAK_READY);\n        }\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.addEventListener(event, mouseEvents[event], EVENT_OPTIONS);\n            }\n        });\n        this.#events.forEach((event) => {\n            manager.addEventListener(event, this._assign, EVENT_OPTIONS);\n        });\n\n        if (this.#autostart === true || this.#autostartMuted === true || this.#playTriggered === true) {\n            this.#playTriggered = false;\n            if (!this.#done) {\n                this._initNotDoneAds();\n                return;\n            }\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n            manager.start();\n            const e = addEvent('play');\n            this.#element.dispatchEvent(e);\n        } else if (this.#options.enablePreloading === true) {\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n        }\n    }\n\n    private _initNotDoneAds(): void {\n        if (this.#displayContainer) {\n            this.#done = true;\n            this.#displayContainer.initialize();\n\n            if (IS_IOS || IS_ANDROID) {\n                this.#preloadContent = this._contentLoadedAction;\n                this.#element.addEventListener('loadedmetadata', this._contentLoadedAction, EVENT_OPTIONS);\n                this.#element.load();\n            } else {\n                this._contentLoadedAction();\n            }\n        } else {\n            this.load();\n            this.loadedAd = false;\n        }\n    }\n\n    private _contentEndedListener(): void {\n        this.#ended = true;\n        this.#active = false;\n        this.#started = false;\n        this.#loader.contentComplete();\n    }\n\n    private _onContentPauseRequested(): void {\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        this.#lastTimePaused = this.#media.currentTime;\n\n        if (this.#started) {\n            this.#media.pause();\n        } else {\n            this.#started = true;\n        }\n        const e = addEvent('play');\n        this.#element.dispatchEvent(e);\n    }\n\n    private _onContentResumeRequested(): void {\n        this.#element.addEventListener('ended', this._contentEndedListener, EVENT_OPTIONS);\n        this.#element.addEventListener('loadedmetadata', this._loadedMetadataHandler, EVENT_OPTIONS);\n        if (IS_IOS || IS_ANDROID) {\n            this.#media.src = this.#mediaSources;\n            this.#media.load();\n            this._prepareMedia();\n            if (this.#element.parentElement) {\n                this.#element.parentElement.classList.add('op-ads--active');\n            }\n        } else {\n            const event = addEvent('loadedmetadata');\n            this.#element.dispatchEvent(event);\n        }\n    }\n\n    private _loadedMetadataHandler(): void {\n        if (Array.isArray(this.#ads)) {\n            this.#currentIndex++;\n            if (this.#currentIndex <= this.#ads.length - 1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                this.#loader.contentComplete();\n                this.#playTriggered = true;\n                this.#started = true;\n                this.#done = false;\n                this.load(true);\n            } else {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else if (this.#element.seekable.length) {\n            if (this.#element.seekable.end(0) > this.#lastTimePaused) {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else {\n            setTimeout(this._loadedMetadataHandler, 100);\n        }\n    }\n\n    private _resumeMedia(): void {\n        this.#intervalTimer = 0;\n        this.#muted = false;\n        this.#started = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.classList.remove('op-ads--active');\n        }\n\n        if (this.#media.ended) {\n            const e = addEvent('ended');\n            this.#element.dispatchEvent(e);\n        } else {\n            try {\n                this.#media.play();\n                setTimeout(() => {\n                    const e = addEvent('play');\n                    this.#element.dispatchEvent(e);\n                }, 50);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    }\n\n    private _requestAds(): void {\n        this.#request = new google.ima.AdsRequest();\n        const ads = Array.isArray(this.#ads) ? this.#ads[this.#currentIndex] : this.#ads;\n\n        if (isXml(ads)) {\n            this.#request.adsResponse = ads;\n        } else {\n            this.#request.adTagUrl = ads;\n        }\n\n        const width = this.#element.parentElement ? this.#element.parentElement.offsetWidth : 0;\n        const height = this.#element.parentElement ? this.#element.parentElement.offsetHeight : 0;\n        this.#request.linearAdSlotWidth = width;\n        this.#request.linearAdSlotHeight = height;\n        this.#request.nonLinearAdSlotWidth = width;\n        this.#request.nonLinearAdSlotHeight = height / 3;\n        this.#request.setAdWillAutoPlay(this.#autostart);\n        this.#request.setAdWillPlayMuted(this.#autostartMuted);\n        this.#loader.requestAds(this.#request);\n    }\n\n    /**\n     * Internal callback to request Ads.\n     *\n     * @memberof Ads\n     */\n    private _contentLoadedAction(): void {\n        if (this.#preloadContent) {\n            this.#element.removeEventListener('loadedmetadata', this.#preloadContent);\n            this.#preloadContent = null;\n        }\n        this._requestAds();\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/faq#8\n    private _resetAdsAfterManualBreak(): void {\n        if (this.#manager) {\n            this.#manager.destroy();\n        }\n        this.#loader.contentComplete();\n        this.#done = false;\n        this.#playTriggered = true;\n    }\n\n    private _prepareMedia(): void {\n        this.#media.currentTime = this.#lastTimePaused;\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this._resumeMedia();\n    }\n\n    private _setMediaVolume(volume: number): void {\n        this.#media.volume = volume;\n        this.#media.muted = volume === 0;\n    }\n\n    private _handleClickInContainer(): void {\n        if (this.#media.paused) {\n            const e = addEvent('paused');\n            this.#element.dispatchEvent(e);\n            this.pause();\n        }\n    }\n\n    private _handleResizeAds(): void {\n        this.resizeAds();\n    }\n\n    private _handleSkipAds(): void {\n        this.#manager.skip();\n    }\n}\n\nexport default Ads;\n","import Controls from './controls';\nimport Fullscreen from './controls/fullscreen';\nimport {\n    CustomMedia,\n    ElementItem,\n    EventsList,\n    Languages,\n    PlayerLabels,\n    PlayerOptions,\n    Source,\n    Track,\n} from './interfaces';\nimport Media from './media';\nimport Ads from './media/ads';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\nimport { isAutoplaySupported, predictMimeType } from './utils/media';\n\ninterface P {\n    loader: HTMLSpanElement;\n    playBtn: HTMLButtonElement;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any;\n    init(): Promise<void>;\n    load(): Promise<void> | void;\n    play(): Promise<void>;\n    pause(): void;\n    destroy(): void;\n    getContainer(): HTMLElement;\n    getControls(): Controls;\n    getCustomControls(): ElementItem[];\n    getElement(): HTMLMediaElement;\n    getEvents(): EventsList;\n    getOptions(): PlayerOptions;\n    activeElement(): Ads | Media;\n    isMedia(): boolean;\n    isAd(): boolean;\n    getMedia(): Media;\n    getAd(): Ads;\n    addCaptions(args: Track): void;\n    addControl(args: ElementItem): void;\n    removeControl(controlName: string): void;\n    _prepareMedia(): Promise<void>;\n    enableDefaultPlayer(): void;\n    loadAd(src: string | string[]): Promise<void>;\n}\n\nclass Player {\n    static instances: { [id: string]: P } = {};\n\n    static customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    static init(): void {\n        Player.instances = {};\n        const targets = document.querySelectorAll('video.op-player, audio.op-player');\n        for (let i = 0, total = targets.length; i < total; i++) {\n            const target = targets[i] as HTMLMediaElement;\n            const settings = target.getAttribute('data-op-settings');\n            const options = settings ? JSON.parse(settings) : {};\n            const player = new Player(target, options);\n            player.init();\n        }\n    }\n\n    static addMedia(name: string, mimeType: string, valid: (url: string) => string, media: Source): void {\n        Player.customMedia.media[mimeType] = media;\n        Player.customMedia.optionsKey[mimeType] = name;\n        Player.customMedia.rules.push(valid);\n    }\n\n    loader: HTMLSpanElement;\n\n    playBtn: HTMLButtonElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any = null;\n\n    #controls: Controls;\n\n    #adsInstance: Ads;\n\n    #uid = '';\n\n    #element: HTMLMediaElement;\n\n    #ads?: string | string[];\n\n    #media: Media;\n\n    #events: EventsList = {};\n\n    #autoplay = false;\n\n    #volume: number;\n\n    #canAutoplay = false;\n\n    #canAutoplayMuted = false;\n\n    #processedAutoplay = false;\n\n    #options: PlayerOptions;\n\n    #customElements: ElementItem[] = [];\n\n    #fullscreen: Fullscreen;\n\n    #defaultOptions: PlayerOptions = {\n        controls: {\n            alwaysVisible: false,\n            layers: {\n                left: ['play', 'time', 'volume'],\n                middle: ['progress'],\n                right: ['captions', 'settings', 'fullscreen'],\n            },\n        },\n        defaultLevel: undefined,\n        detachMenus: false,\n        forceNative: true,\n        height: 0,\n        hidePlayBtnTimer: 350,\n        labels: {\n            auto: 'Auto',\n            captions: 'CC/Subtitles',\n            click: 'Click to unmute',\n            fullscreen: 'Fullscreen',\n            lang: {\n                en: 'English',\n            },\n            levels: 'Quality Levels',\n            live: 'Live Broadcast',\n            mediaLevels: 'Change Quality',\n            mute: 'Mute',\n            off: 'Off',\n            pause: 'Pause',\n            play: 'Play',\n            progressRail: 'Time Rail',\n            progressSlider: 'Time Slider',\n            settings: 'Player Settings',\n            speed: 'Speed',\n            speedNormal: 'Normal',\n            tap: 'Tap to unmute',\n            toggleCaptions: 'Toggle Captions',\n            unmute: 'Unmute',\n            volume: 'Volume',\n            volumeControl: 'Volume Control',\n            volumeSlider: 'Volume Slider',\n        },\n        live: {\n            showLabel: true,\n            showProgress: false,\n        },\n        media: {\n            pauseOnClick: false,\n        },\n        mode: 'responsive', // or `fill` or `fit`\n        onError: (e: unknown) => console.error(e),\n        pauseOthers: true,\n        progress: {\n            allowRewind: true,\n            allowSkip: true,\n            duration: 0,\n            showCurrentTimeOnly: false,\n        },\n        showLoaderOnInit: false,\n        startTime: 0,\n        startVolume: 1,\n        step: 0,\n        useDeviceVolume: true,\n        width: 0,\n    };\n\n    constructor(element: HTMLMediaElement | string, options?: PlayerOptions) {\n        this.#element =\n            element instanceof HTMLMediaElement ? element : (document.getElementById(element) as HTMLMediaElement);\n        if (this.#element) {\n            this.#autoplay = this.#element.autoplay || false;\n            if (typeof options !== 'string' && !Array.isArray(options)) {\n                this._mergeOptions(options);\n            }\n            this.#element.volume = this.#options.startVolume || 1;\n\n            if (this.#options.ads && this.#options.ads.src) {\n                this.#ads = this.#options.ads.src;\n            }\n            if ((this.#options?.startTime || 0) > 0) {\n                this.#element.currentTime = this.#options.startTime || 0;\n            }\n            this.#volume = this.#element.volume;\n        }\n        this._autoplay = this._autoplay.bind(this);\n        this._enableKeyBindings = this._enableKeyBindings.bind(this);\n    }\n\n    async init(): Promise<void> {\n        if (this._isValid()) {\n            this._wrapInstance();\n            await this._prepareMedia();\n            this._createPlayButton();\n            this._createUID();\n            this._createControls();\n            this._setEvents();\n            Player.instances[this.id] = this;\n        }\n    }\n\n    async load(): Promise<void> {\n        if (!this.#media) {\n            await this._prepareMedia();\n            return (this.#media as Media).load();\n        }\n        this.#media.loaded = false;\n        return this.isMedia() ? this.#media.load() : undefined;\n    }\n\n    async play(): Promise<void> {\n        if (!this.#media.loaded) {\n            await this.#media.load();\n            this.#media.loaded = true;\n        }\n        if (this.#adsInstance) {\n            this.#adsInstance.playRequested = true;\n            await this.#adsInstance.loadPromise;\n            return this.#adsInstance.play();\n        }\n        return this.#media.play();\n    }\n\n    pause(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n        } else {\n            this.#media.pause();\n        }\n    }\n\n    stop(): void {\n        this.pause();\n\n        if (this.#media) {\n            this.#media.currentTime = 0;\n            this.src = [{ src: '', type: 'video/mp4' }];\n        }\n    }\n\n    destroy(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n            this.#adsInstance.destroy();\n        }\n\n        if (this.#fullscreen) {\n            this.#fullscreen.destroy();\n        }\n\n        const el = this.#element as HTMLMediaElement;\n        if (this.#media) {\n            this.#media.destroy();\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            el.removeEventListener(event, this.#events[event]);\n        });\n\n        this.getContainer().removeEventListener('keydown', this._enableKeyBindings);\n\n        if (this.#autoplay && !this.#processedAutoplay && isVideo(this.#element)) {\n            el.removeEventListener('canplay', this._autoplay);\n        }\n        if (this.#controls) {\n            this.#controls.destroy();\n        }\n\n        if (isVideo(this.#element)) {\n            if (this.playBtn) {\n                this.playBtn.remove();\n            }\n            if (this.loader) {\n                this.loader.remove();\n            }\n        }\n\n        if (this.#options?.onError) {\n            this.#element.removeEventListener('playererror', this.#options.onError);\n        }\n\n        el.controls = true;\n        el.setAttribute('id', this.#uid);\n        el.removeAttribute('op-live__enabled');\n        el.removeAttribute('op-dvr__enabled');\n        const parent =\n            this.#options.mode === 'fit' && !isAudio(el) ? el.closest('.op-player__fit--wrapper') : el.parentElement;\n        if (parent && parent.parentNode) {\n            parent.parentNode.replaceChild(el, parent);\n        }\n\n        delete Player.instances[this.#uid];\n\n        const e = addEvent('playerdestroyed');\n        el.dispatchEvent(e);\n    }\n\n    getContainer(): HTMLElement {\n        return this.#element.parentElement || this.#element;\n    }\n\n    getControls(): Controls {\n        return this.#controls;\n    }\n\n    getCustomControls(): ElementItem[] {\n        return this.#customElements;\n    }\n\n    getElement(): HTMLMediaElement {\n        return this.#element;\n    }\n\n    getEvents(): EventsList {\n        return this.#events;\n    }\n\n    getOptions(): PlayerOptions {\n        return this.#options;\n    }\n\n    activeElement(): Ads | Media {\n        return this.#adsInstance && this.#adsInstance.started() ? this.#adsInstance : this.#media;\n    }\n\n    isMedia(): boolean {\n        return this.activeElement() instanceof Media;\n    }\n\n    isAd(): boolean {\n        return this.activeElement() instanceof Ads;\n    }\n\n    getMedia(): Media {\n        return this.#media;\n    }\n\n    getAd(): Ads {\n        return this.#adsInstance;\n    }\n\n    addCaptions(args: Track): void {\n        if (args.default) {\n            const tracks = this.#element.querySelectorAll('track');\n            for (let i = 0, total = tracks.length; i < total; i++) {\n                (tracks[i] as HTMLTrackElement).default = false;\n            }\n        }\n\n        const el = this.#element;\n\n        // If captions have been added previously, just update URL and default status\n        let track = el.querySelector(`track[srclang=\"${args.srclang}\"][kind=\"${args.kind}\"]`) as HTMLTrackElement;\n        if (track) {\n            track.src = args.src;\n            track.label = args.label;\n            track.default = args.default || false;\n        } else {\n            track = document.createElement('track');\n            track.srclang = args.srclang;\n            track.src = args.src;\n            track.kind = args.kind;\n            track.label = args.label;\n            track.default = args.default || false;\n            el.appendChild(track);\n        }\n\n        const e = addEvent('controlschanged');\n        el.dispatchEvent(e);\n    }\n\n    addControl(args: ElementItem): void {\n        args.custom = true;\n        args.type = 'button';\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    addElement(args: ElementItem): void {\n        args.custom = true;\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    removeControl(controlName: string): void {\n        // Check custom controls and remove reference there as well\n        this.#customElements.forEach((item: ElementItem, idx: number) => {\n            if (item.id === controlName) {\n                this.#customElements.splice(idx, 1);\n            }\n        });\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    async _prepareMedia(): Promise<void> {\n        try {\n            if (this.#options?.onError) {\n                this.#element.addEventListener('playererror', this.#options.onError, EVENT_OPTIONS);\n            }\n            if (this.#autoplay && isVideo(this.#element)) {\n                this.#element.addEventListener('canplay', this._autoplay, EVENT_OPTIONS);\n            }\n            this.#media = new Media(this.#element, this.#options, this.#autoplay, Player.customMedia);\n            const preload = this.#element.getAttribute('preload');\n            if (this.#ads || !preload || preload !== 'none') {\n                await this.#media.load();\n                this.#media.loaded = true;\n            }\n\n            if (!this.#autoplay && this.#ads) {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                this.#adsInstance = new Ads(this, this.#ads, false, false, adsOptions);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    enableDefaultPlayer(): void {\n        let paused = true;\n        let currentTime = 0;\n\n        if (this.proxy && !this.proxy.paused) {\n            paused = false;\n            currentTime = this.proxy.currentTime;\n            this.proxy.pause();\n        }\n\n        this.proxy = this;\n        this.getElement().addEventListener('loadedmetadata', (): void => {\n            this.getMedia().currentTime = currentTime;\n            if (!paused) {\n                this.play();\n            }\n        });\n    }\n\n    async loadAd(src: string | string[]): Promise<void> {\n        try {\n            if (this.isAd()) {\n                this.getAd().destroy();\n                this.getAd().src = src;\n                this.getAd().loadedAd = false;\n                this.getAd().load();\n            } else {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                const autoplay = !this.activeElement().paused || this.#canAutoplay;\n                this.#adsInstance = new Ads(this, src, autoplay, this.#canAutoplayMuted, adsOptions);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    set src(media) {\n        if (this.#media instanceof Media) {\n            this.#media.mediaFiles = [];\n            this.#media.src = media;\n        } else if (typeof media === 'string') {\n            this.#element.src = media;\n        } else if (Array.isArray(media)) {\n            media.forEach((m) => {\n                const source = document.createElement('source');\n                source.src = m.src;\n                source.type = m.type || predictMimeType(m.src, this.#element);\n                this.#element.appendChild(source);\n            });\n        } else if (typeof media === 'object') {\n            this.#element.src = (media as Source).src;\n        }\n    }\n\n    get src(): Source[] {\n        return this.#media.src;\n    }\n\n    get id(): string {\n        return this.#uid;\n    }\n\n    private _isValid(): boolean {\n        const el = this.#element;\n\n        if (el instanceof HTMLElement === false) {\n            return false;\n        }\n\n        if (!isAudio(el) && !isVideo(el)) {\n            return false;\n        }\n\n        if (!el.classList.contains('op-player__media')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private _wrapInstance(): void {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'op-player op-player__keyboard--inactive';\n        wrapper.className += isAudio(this.#element) ? ' op-player__audio' : ' op-player__video';\n        wrapper.tabIndex = 0;\n\n        this.#element.classList.remove('op-player');\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(wrapper, this.#element);\n        }\n        wrapper.appendChild(this.#element);\n\n        const messageContainer = document.createElement('div');\n        messageContainer.className = 'op-status';\n        messageContainer.innerHTML = '<span></span>';\n        messageContainer.tabIndex = -1;\n        messageContainer.setAttribute('aria-hidden', 'true');\n\n        if (isVideo(this.#element) && this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(messageContainer, this.#element);\n        }\n\n        wrapper.addEventListener(\n            'keydown',\n            (): void => {\n                if (wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.remove('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        wrapper.addEventListener(\n            'click',\n            (): void => {\n                if (!wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.add('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        if (this.#options.mode === 'fill' && !isAudio(this.#element) && !IS_IPHONE) {\n            // Create fill effect on video, scaling and cropping dimensions relative to its parent, setting just a class.\n            // This method centers the video view using pure CSS in both Ads and Media.\n            // @see https://slicejack.com/fullscreen-html5-video-background-css/\n            this.getContainer().classList.add('op-player__full');\n        } else if (this.#options.mode === 'fit' && !isAudio(this.#element)) {\n            const container = this.getContainer();\n            if (container.parentElement) {\n                const fitWrapper = document.createElement('div');\n                fitWrapper.className = 'op-player__fit--wrapper';\n                fitWrapper.tabIndex = 0;\n                container.parentElement.insertBefore(fitWrapper, container);\n                fitWrapper.appendChild(container);\n                container.classList.add('op-player__fit');\n            }\n        } else {\n            let style = '';\n            if (this.#options.width) {\n                const width =\n                    typeof this.#options.width === 'number' ? `${this.#options.width}px` : this.#options.width;\n                style += `width: ${width} !important;`;\n            }\n            if (this.#options.height) {\n                const height =\n                    typeof this.#options.height === 'number' ? `${this.#options.height}px` : this.#options.height;\n                style += `height: ${height} !important;`;\n            }\n\n            if (style) {\n                wrapper.setAttribute('style', style);\n            }\n        }\n    }\n\n    private _createControls(): void {\n        if (IS_IPHONE && isVideo(this.#element)) {\n            this.getContainer().classList.add('op-player__ios--iphone');\n        }\n        this.#controls = new Controls(this);\n        this.#controls.create();\n    }\n\n    private _createUID(): void {\n        if (this.#element.id) {\n            this.#uid = this.#element.id;\n            this.#element.removeAttribute('id');\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const cryptoLib = crypto as any;\n            const encryption =\n                typeof cryptoLib.getRandomBytes === 'function' ? cryptoLib.getRandomBytes : cryptoLib.getRandomValues;\n            this.#uid = `op_${encryption(new Uint32Array(1))[0].toString(36).substr(2, 9)}`;\n        }\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.id = this.#uid;\n        }\n    }\n\n    private _createPlayButton(): void {\n        if (isAudio(this.#element)) {\n            return;\n        }\n\n        this.playBtn = document.createElement('button');\n        this.playBtn.className = 'op-player__play';\n        this.playBtn.tabIndex = 0;\n        this.playBtn.title = this.#options.labels?.play || '';\n        this.playBtn.innerHTML = `<span>${this.#options.labels?.play || ''}</span>`;\n        this.playBtn.setAttribute('aria-pressed', 'false');\n        this.playBtn.setAttribute('aria-hidden', 'false');\n\n        this.loader = document.createElement('span');\n        this.loader.className = 'op-player__loader';\n        this.loader.tabIndex = -1;\n        this.loader.setAttribute('aria-hidden', 'true');\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.loader, this.#element);\n            this.#element.parentElement.insertBefore(this.playBtn, this.#element);\n        }\n\n        this.playBtn.addEventListener(\n            'click',\n            (): void => {\n                if (this.#adsInstance) {\n                    this.#adsInstance.playRequested = this.activeElement().paused;\n                }\n                if (this.activeElement().paused) {\n                    this.activeElement().play();\n                } else {\n                    this.activeElement().pause();\n                }\n            },\n            EVENT_OPTIONS\n        );\n    }\n\n    private _setEvents(): void {\n        if (isVideo(this.#element)) {\n            this.#events.loadedmetadata = (): void => {\n                const el = this.activeElement();\n                if (this.#options.showLoaderOnInit && !IS_IOS && !IS_ANDROID) {\n                    this.loader.setAttribute('aria-hidden', 'false');\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    this.loader.setAttribute('aria-hidden', 'true');\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                }\n                if (el.paused) {\n                    this.playBtn.classList.remove('op-player__play--paused');\n                    this.playBtn.setAttribute('aria-pressed', 'false');\n                }\n            };\n            this.#events.waiting = (): void => {\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', 'false');\n            };\n            this.#events.seeking = (): void => {\n                const el = this.activeElement();\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n            };\n            this.#events.seeked = (): void => {\n                const el = this.activeElement();\n                if (Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.play = (): void => {\n                this.playBtn.classList.add('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.pause || '';\n                this.loader.setAttribute('aria-hidden', 'true');\n                if (this.#options.showLoaderOnInit) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    setTimeout((): void => {\n                        this.playBtn.setAttribute('aria-hidden', 'true');\n                    }, this.#options.hidePlayBtnTimer);\n                }\n            };\n            this.#events.playing = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            this.#events.pause = (): void => {\n                const el = this.activeElement();\n                this.playBtn.classList.remove('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.play || '';\n\n                if (this.#options.showLoaderOnInit && Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.ended = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            // This workflow is needed when media is on a loop and post roll needs to be played.\n            // This happens because, when in loop, media never sends the `ended` event back;\n            // so, when media reaches a quarter of a second left before the end, Ads would be dispatched\n            // @see https://github.com/googleads/videojs-ima/issues/890\n            let postRollCalled = false;\n            this.#events.timeupdate = (): void => {\n                if (this.#element.loop && this.isMedia() && this.#adsInstance) {\n                    const el = this.getMedia();\n                    const remainingTime = el.duration - el.currentTime;\n                    if (remainingTime > 0 && remainingTime <= 0.25 && !postRollCalled) {\n                        postRollCalled = true;\n                        const e = addEvent('ended');\n                        this.#element.dispatchEvent(e);\n                    } else if (remainingTime === 0) {\n                        postRollCalled = false;\n                    }\n                }\n            };\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            this.#element.addEventListener(event, this.#events[event], EVENT_OPTIONS);\n        });\n\n        this.getContainer().addEventListener('keydown', this._enableKeyBindings, EVENT_OPTIONS);\n    }\n\n    private _autoplay(): void {\n        if (!this.#processedAutoplay) {\n            this.#processedAutoplay = true;\n            this.#element.removeEventListener('canplay', this._autoplay);\n\n            isAutoplaySupported(\n                this.#element,\n                this.#volume,\n                (autoplay) => {\n                    this.#canAutoplay = autoplay;\n                },\n                (muted) => {\n                    this.#canAutoplayMuted = muted;\n                },\n                (): void => {\n                    if (this.#canAutoplayMuted) {\n                        this.activeElement().muted = true;\n                        this.activeElement().volume = 0;\n\n                        const e = addEvent('volumechange');\n                        this.#element.dispatchEvent(e);\n\n                        // Insert element to unmute if browser allows autoplay with muted media\n                        const volumeEl = document.createElement('div');\n                        const action = IS_IOS || IS_ANDROID ? this.#options.labels?.tap : this.#options.labels?.click;\n                        volumeEl.className = 'op-player__unmute';\n                        volumeEl.innerHTML = `<span>${action}</span>`;\n                        volumeEl.tabIndex = 0;\n\n                        volumeEl.addEventListener(\n                            'click',\n                            (): void => {\n                                this.activeElement().muted = false;\n                                this.activeElement().volume = this.#volume;\n\n                                const event = addEvent('volumechange');\n                                this.#element.dispatchEvent(event);\n\n                                volumeEl.remove();\n                            },\n                            EVENT_OPTIONS\n                        );\n\n                        const target = this.getContainer();\n                        target.insertBefore(volumeEl, target.firstChild);\n                    } else {\n                        this.activeElement().muted = this.#element.muted;\n                        this.activeElement().volume = this.#volume;\n                    }\n\n                    if (this.#ads) {\n                        const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                        this.#adsInstance = new Ads(\n                            this,\n                            this.#ads,\n                            this.#canAutoplay,\n                            this.#canAutoplayMuted,\n                            adsOptions\n                        );\n                    } else if (this.#canAutoplay || this.#canAutoplayMuted) {\n                        this.play();\n                    }\n                }\n            );\n        }\n    }\n\n    private _mergeOptions(playerOptions?: PlayerOptions): void {\n        const opts = { ...(playerOptions || {}) };\n        this.#options = { ...this.#defaultOptions, ...opts };\n        const complexOptions = Object.keys(this.#defaultOptions).filter(\n            (key) => key !== 'labels' && typeof this.#defaultOptions[key] === 'object'\n        );\n        complexOptions.forEach((key) => {\n            const currOption = (opts[key] as Record<string, unknown>) || {};\n            if (currOption && Object.keys(currOption).length) {\n                this.#options[key] = { ...(this.#defaultOptions[key] as Record<string, unknown>), ...currOption };\n            }\n        });\n        if (opts.labels) {\n            const keys = opts.labels ? Object.keys(opts.labels) : [];\n            let sanitizedLabels: PlayerLabels = {};\n\n            keys.forEach((key) => {\n                const current = opts.labels ? opts.labels[key as keyof PlayerLabels] : null;\n                if (current && typeof current === 'object' && key === 'lang') {\n                    Object.keys(current).forEach((k) => {\n                        const lang = current ? (current as Languages)[k] : null;\n                        if (lang) {\n                            sanitizedLabels = {\n                                ...sanitizedLabels,\n                                lang: { ...sanitizedLabels.lang, [k]: sanitize(lang as string) },\n                            };\n                        }\n                    });\n                } else if (current) {\n                    sanitizedLabels = { ...sanitizedLabels, [key]: sanitize(current as string) };\n                }\n            });\n\n            this.#options.labels = { ...this.#defaultOptions.labels, ...sanitizedLabels };\n        }\n    }\n\n    private _enableKeyBindings(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.activeElement();\n        const isAd = this.isAd();\n        const playerFocused = document?.activeElement?.classList.contains('op-player');\n\n        switch (key) {\n            // Toggle play/pause using letter K, Tab or Enter\n            case 13:\n            case 32:\n            case 75:\n                // Avoid interference of Enter/Space keys when focused in the player container\n                if (playerFocused && (key === 13 || key === 32)) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                } else if (key === 75) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // End key ends video\n            case 35:\n                if (!isAd && el.duration !== Infinity) {\n                    el.currentTime = el.duration;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Home key resets progress\n            case 36:\n                if (!isAd) {\n                    el.currentTime = 0;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the left and right arrow keys to manipulate current media time.\n            // Letter J/L will set double of step forward/backward\n            case 37:\n            case 39:\n            case 74:\n            case 76:\n                if (!isAd && el.duration !== Infinity) {\n                    let newStep = 5;\n                    const configStep = this.getOptions().step;\n                    if (configStep) {\n                        newStep = key === 74 || key === 76 ? configStep * 2 : configStep;\n                    } else if (key === 74 || key === 76) {\n                        newStep = 10;\n                    }\n                    const step = el.duration !== Infinity ? newStep : this.getOptions().progress?.duration || 0;\n                    el.currentTime += key === 37 || key === 74 ? step * -1 : step;\n                    if (el.currentTime < 0) {\n                        el.currentTime = 0;\n                    } else if (el.currentTime >= el.duration) {\n                        el.currentTime = el.duration;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the up/down arrow keys to manipulate volume.\n            case 38:\n            case 40:\n                const newVol = key === 38 ? Math.min(el.volume + 0.1, 1) : Math.max(el.volume - 0.1, 0);\n                el.volume = newVol;\n                el.muted = !(newVol > 0);\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // Letter F sets fullscreen (only video)\n            case 70:\n                if (isVideo(this.#element) && !e.ctrlKey) {\n                    this.#fullscreen = new Fullscreen(this, '', '');\n                    if (typeof this.#fullscreen.fullScreenEnabled !== 'undefined') {\n                        this.#fullscreen.toggleFullscreen();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n                break;\n            // Letter M toggles mute\n            case 77:\n                el.muted = !el.muted;\n                if (el.muted) {\n                    el.volume = 0;\n                } else {\n                    el.volume = this.#volume;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // < and > will decrease/increase the speed of playback by 0.25\n            // , and . will go to the prev/next frame of the media\n            case 188:\n            case 190:\n                if (!isAd && e.shiftKey) {\n                    const elem = el as Media;\n                    elem.playbackRate =\n                        key === 188 ? Math.max(elem.playbackRate - 0.25, 0.25) : Math.min(elem.playbackRate + 0.25, 2);\n                    // Show playbackRate and update controls to reflect change in settings\n                    const target = this.getContainer().querySelector('.op-status>span');\n                    if (target) {\n                        target.textContent = `${elem.playbackRate}x`;\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-hidden', 'false');\n                        }\n                        setTimeout((): void => {\n                            if (target.parentElement) {\n                                target.parentElement.setAttribute('aria-hidden', 'true');\n                            }\n                        }, 500);\n                    }\n                    const ev = addEvent('controlschanged');\n                    dispatchEvent(ev);\n                    e.preventDefault();\n                    e.stopPropagation();\n                } else if (!isAd && el.paused) {\n                    el.currentTime += (1 / 25) * (key === 188 ? -1 : 1);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default Player;\n\n// Expose element globally.\nif (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayer = Player;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayerJS = Player;\n    Player.init();\n}\n"],"names":["NAV","UA","IS_IPHONE","IS_IOS","IS_ANDROID","IS_CHROME","IS_SAFARI","HAS_MSE","SUPPORTS_HLS","mediaSource","sourceBuffer","isTypeSupported","sourceBufferValidAPI","DVR_THRESHOLD","EVENT_OPTIONS","isVideo","element","isAudio","loadScript","url","resolve","reject","script","offset","el","rect","sanitize","html","plainText","formattedContent","scripts","i","total","clean","nodes","node","attributes","j","t","name","value","val","isXml","input","parsedXml","text","addEvent","event","details","detail","Captions","#player","#button","#captions","#menu","#events","#mediaTrackList","#hasTracks","#currentTrack","#default","#controlPosition","#controlLayer","player","position","layer","textTracks","labels","detachMenus","k","target","itemContainer","track","item","label","e","button","menus","menuItem","option","language","captions","caption","cue","content","targetTrack","matchTrack","subitems","items","options","Fullscreen","#isFullscreen","#fullscreenEvents","#fullscreenWidth","#fullscreenHeight","#clickEvent","video","screen","width","height","isFullscreen","wrapper","styles","defaultWidth","defaultHeight","key","getExtension","baseName","isHlsSource","media","isDashSource","isFlvSource","predictMimeType","extension","isAutoplaySupported","defaultVol","autoplay","muted","callback","playPromise","Levels","#levels","#defaultLevel","startLevel","initialLevel","menuItems","defaultLevel","defaultLabel","levelSet","loadLevelsEvent","currentTime","isPaused","levelVal","level","levels","connection","type","acc","current","a","b","className","menu","Play","isAudioEl","Player","formatTime","seconds","frameRate","f","m","h","wrap","formattedVal","Progress","#progress","#slider","#buffer","#played","#tooltip","#forcePause","progress","setInitialProgress","lastCurrentTime","defaultDuration","duration","min","max","updateSlider","forcePause","releasePause","mobileForcePause","changedTouches","time","x","pos","half","percentage","mediaContainer","limit","isAd","step","Settings","#submenu","#originalOutput","timeout","id","rate","defaultValue","submenu","dataValue","submenuMatch","mainMenu","subItems","labelEl","fragments","menuTarget","prev","minItems","settingsBtnFocused","menuFocused","Time","#currentTime","#delimiter","#duration","#container","showOnlyCurrent","controls","setInitialTime","showLiveLabel","showCurrentTimeOnly","Volume","#display","#volume","mediaVolume","vol","updateButton","updateVolume","unmuteEl","Controls","#timer","#controlEls","#settings","#controls","#items","isMediaVideo","alwaysVisible","showControls","messageContainer","isVideoEl","controlPositions","layersExist","controlLayer","layers","v","currentLayer","allowDefault","s","itemIcon","subitem","control","Native","#customPlayer","customPlayer","DashMedia","#options","mimeType","bitrates","errorEvent","FlvMedia","args","configs","rest","data","errorDetails","HlsMedia","#recoverDecodingErrorDate","#recoverSwapAudioCodecDate","#autoplay","fatal","now","mediaEvent","networkEvent","fatalEvent","err","timeEvent","metaEvent","HTML5Media","#currentLevel","#levelList","#isStreaming","#retryCount","#started","mediaFile","idx","source","metaDataEvent","message","defaultMessage","error","Media","#element","#media","#files","#promisePlay","#mediaLoaded","#customMedia","#currentSrc","customMedia","source.predictMimeType","file","sources","loaded","mediaFiles","sourceTags","nodeSource","src","playHLSNatively","activeLevels","customRef","rule","customOptions","source.isHlsSource","hlsOptions","source.isDashSource","dashOptions","source.isFlvSource","flvOptions","Ads","ads","autostart","autostartMuted","#ended","#done","#active","#intervalTimer","#muted","#manager","#autostart","#autostartMuted","#playTriggered","#currentIndex","#lastTimePaused","#mediaSources","#mediaStarted","#adEvent","defaultOpts","#ads","#originalVolume","path","#promise","#loader","#customClickContainer","#skipElement","#displayContainer","#request","#preloadContent","force","existingContainer","vpaidModeMap","mouseEvents","destroy","mode","formattedWidth","percentageWidth","formattedHeight","percentageHeight","ad","waitingEvent","loadedEvent","playEvent","resized","endEvent","skipEvent","volumeEvent","endedEvent","pauseEvent","progressData","canSkip","remainingTime","adData","fatalErrorCodes","managerLoadedEvent","adsRenderingSettings","manager","volume","#uid","#canAutoplay","#canAutoplayMuted","#processedAutoplay","#customElements","#defaultOptions","targets","settings","valid","#adsInstance","#fullscreen","parent","tracks","controlName","preload","adsOptions","paused","container","fitWrapper","style","cryptoLib","encryption","postRollCalled","volumeEl","action","playerOptions","opts","currOption","keys","sanitizedLabels","lang","playerFocused","newStep","configStep","newVol","elem","ev","Player$1"],"mappings":"2NASO,MAAMA,EAAwB,OAAO,OAAW,IAAc,OAAO,UAAY,KAE3EC,EAAoBD,EAAMA,EAAI,UAAU,cAAgB,KAIxDE,EAAYD,EAAK,UAAU,KAAKA,CAAE,GAAK,CAAC,OAAO,SAAW,GAI1DE,EAASF,EAAK,oBAAoB,KAAKA,CAAE,GAAK,CAAC,OAAO,SAAW,GAEjEG,EAAaH,EAAK,WAAW,KAAKA,CAAE,EAAI,GAIxCI,EAAYJ,EAAK,UAAU,KAAKA,CAAE,EAAI,GAItCK,EAAYL,EAAK,UAAU,KAAKA,CAAE,GAAK,CAACI,EAAY,GAIpDE,EAAU,OAAO,OAAW,IAAc,gBAAiB,OAAS,GAGpEC,EAAe,IAAe,CACnC,GAAA,OAAO,OAAW,IACX,MAAA,GAEL,MAAAC,EAAc,OAAO,aAAe,OAAO,kBAC3CC,EAAe,OAAO,cAAgB,OAAO,mBAC7CC,EACFF,GACA,OAAOA,EAAY,iBAAoB,YACvCA,EAAY,gBAAgB,2CAA2C,EAErEG,EACF,CAACF,GACAA,EAAa,WACV,OAAOA,EAAa,UAAU,cAAiB,YAC/C,OAAOA,EAAa,UAAU,QAAW,WAIjD,MAAO,CAAC,CAACC,GAAmB,CAAC,CAACC,GAAwB,CAACN,CAC3D,EAEaO,EAAgB,IAEhBC,EAAgB,CAAE,QAAS,EAAM,ECtDvC,SAASC,EAAQC,EAA2B,CACxC,OAAAA,EAAQ,QAAQ,YAAA,IAAkB,OAC7C,CAEO,SAASC,EAAQD,EAA2B,CACxC,OAAAA,EAAQ,QAAQ,YAAA,IAAkB,OAC7C,CAEO,SAASE,EAAWC,EAA4B,CACnD,OAAO,IAAI,QAAc,CAACC,EAASC,IAAW,CACpC,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,IAAMH,EACbG,EAAO,MAAQ,GACfA,EAAO,OAAS,IAAY,CACxBA,EAAO,OAAO,EACNF,GAAA,EAEZE,EAAO,QAAU,IAAY,CACzBA,EAAO,OAAO,EACdD,EAAO,IAAI,MAAM,GAAGF,CAAG,sBAAsB,CAAC,CAAA,EAE9C,SAAS,MACA,SAAA,KAAK,YAAYG,CAAM,CACpC,CACH,CACL,CAEO,SAASC,EAAOC,EAAgD,CAC7D,MAAAC,EAAOD,EAAG,wBACT,MAAA,CACH,KAAMC,EAAK,MAAQ,OAAO,aAAe,SAAS,gBAAgB,YAClE,IAAKA,EAAK,KAAO,OAAO,aAAe,SAAS,gBAAgB,UAAA,CAExE,CAEgB,SAAAC,EAASC,EAAcC,EAAY,GAAc,CAG7D,MAAMC,EAFS,IAAI,YACI,gBAAgBF,EAAM,WAAW,EACvB,MAAQ,SAAS,cAAc,MAAM,EAEhEG,EAAUD,EAAiB,iBAAiB,QAAQ,EAC1D,QAASE,EAAI,EAAGC,EAAQF,EAAQ,OAAQC,EAAIC,EAAOD,IACvCD,EAAAC,CAAC,EAAE,SAGT,MAAAE,EAASjB,GAA2B,CACtC,MAAMkB,EAAQlB,EAAQ,SACtB,QAASe,EAAI,EAAGC,EAAQE,EAAM,OAAQH,EAAIC,EAAOD,IAAK,CAC5C,MAAAI,EAAOD,EAAMH,CAAC,EACd,CAAE,WAAAK,CAAe,EAAAD,EACvB,QAASE,EAAI,EAAGC,EAAIF,EAAW,OAAQC,EAAIC,EAAGD,IAAK,CAC/C,KAAM,CAAE,KAAAE,EAAM,MAAAC,CAAM,EAAIJ,EAAWC,CAAC,EAC9BI,EAAMD,EAAM,QAAQ,OAAQ,EAAE,EAAE,cAClC,CAAC,MAAO,OAAQ,YAAY,EAAE,SAASD,CAAI,IAEvCE,EAAI,SAAS,aAAa,GAAKA,EAAI,SAAS,OAAO,IACnDN,EAAK,gBAAgBI,CAAI,EAG7BA,EAAK,WAAW,IAAI,GACpBJ,EAAK,gBAAgBI,CAAI,CAEjC,CACAN,EAAME,CAAI,CACd,CAAA,EAGJ,OAAAF,EAAMJ,CAAgB,EACfD,GAAaC,EAAiB,aAAe,IAAI,QAAQ,UAAW,EAAE,EAAIA,EAAiB,SACtG,CAEO,SAASa,EAAMC,EAAwB,CACtC,IAAAC,EAEA,GAAA,OAAO,UAAc,IACrBA,EAAaC,GAA2B,IAAI,UAAY,EAAA,gBAAgBA,EAAM,UAAU,MAEjF,OAAA,GAGP,GAAA,CAEA,GADiBD,EAAUD,CAAK,EACnB,qBAAqB,aAAa,EAAE,OAAS,EAC/C,MAAA,QAEH,CACD,MAAA,EACX,CACO,MAAA,EACX,CAiBgB,SAAAG,EAASC,EAAeC,EAAwC,CAC5E,IAAIC,EAAS,CAAA,EACT,OAAAD,GAAWA,EAAQ,SACVC,EAAA,CAAE,OAAQD,EAAQ,MAAO,GAE/B,IAAI,YAAYD,EAAOE,CAAM,CACxC,CCjHA,MAAMC,CAAoC,CACtCC,GAEAC,GAEAC,GAEAC,GAEAC,GAAsB,CAClB,OAAQ,CAAC,EACT,OAAQ,CAAC,EACT,MAAO,CAAC,CAAA,EAGZC,GAEAC,GAEAC,GAEAC,GAAW,MAEXC,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,EAErB,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EACvD,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,CAC3D,CAIA,QAAe,CACX,KAAM,CAAE,WAAAC,CAAe,EAAA,KAAKd,GAAQ,WAAW,EACzC,CAAE,OAAAe,EAAQ,YAAAC,CAAA,EAAgB,KAAKhB,GAAQ,aAQzC,GANC,KAAAK,GAAkB,OAAO,KAAKS,CAAU,EACxC,IAAKG,GAAMH,EAAW,OAAOG,CAAC,CAAC,CAAC,EAChC,OAAQ5C,GAAO,CAAC,YAAa,UAAU,EAAE,SAASA,EAAG,IAAI,GAAKA,EAAG,QAAQ,EAE9E,KAAKiC,GAAa,CAAC,CAAC,KAAKD,GAAgB,OAErC,CAAC,KAAKC,GACN,OAGC,KAAAL,GAAU,SAAS,cAAc,QAAQ,EAC9C,KAAKA,GAAQ,UAAY,qCAAqC,KAAKQ,EAAgB,GACnF,KAAKR,GAAQ,SAAW,EACnB,KAAAA,GAAQ,MAAQc,GAAQ,gBAAkB,GAC/C,KAAKd,GAAQ,aAAa,gBAAiB,KAAKD,GAAQ,EAAE,EACrD,KAAAC,GAAQ,aAAa,eAAgB,OAAO,EACjD,KAAKA,GAAQ,aAAa,aAAcc,GAAQ,gBAAkB,EAAE,EAC/D,KAAAd,GAAQ,aAAa,uBAAwB,KAAK,EAGlD,KAAAC,GAAY,SAAS,cAAc,KAAK,EAC7C,KAAKA,GAAU,UAAY,cACrB,MAAAgB,EAAS,KAAKlB,GAAQ,aAAa,EAGzC,GAFAkB,EAAO,aAAa,KAAKhB,GAAWgB,EAAO,UAAU,EAEjDF,EAAa,CACR,KAAAf,GAAQ,UAAU,IAAI,sBAAsB,EAC5C,KAAAE,GAAQ,SAAS,cAAc,KAAK,EACzC,KAAKA,GAAM,UAAY,gCAClB,KAAAA,GAAM,aAAa,cAAe,MAAM,EAC7C,KAAKA,GAAM,UAAY;AAAA,yGAEf,KAAKK,KAAa,MAAQ,OAAS,OACvC;AAAA,6GAEQO,GAAQ,GACZ;AAAA;AAAA,oBAIF,MAAAI,EAAgB,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAY,sCAAsC,KAAKV,EAAgB,GACrFU,EAAc,OAAO,KAAKlB,GAAS,KAAKE,EAAK,EACxC,KAAAH,GAAQ,cAAc,SAAS,KAAKU,EAAa,EAAE,OAAOS,CAAa,EAEjE,UAAAC,KAAS,KAAKf,GAAiB,CAChC,MAAAgB,EAAO,SAAS,cAAc,KAAK,EACnCC,EAAQP,GAAQ,OAAOK,EAAM,QAAQ,GAAK,KAChDC,EAAK,UAAY,4BACjBA,EAAK,SAAW,EACXA,EAAA,aAAa,OAAQ,eAAe,EACzCA,EAAK,aAAa,eAAgB,KAAKb,KAAaY,EAAM,SAAW,OAAS,OAAO,EACrFC,EAAK,UAAY;AAAA,2CACUD,EAAM,QAAQ;AAAA,sBACnCE,GAASF,EAAM,KAAK;AAAA,wBAErB,KAAAjB,GAAM,OAAOkB,CAAI,CAC1B,CAAA,MAEK,KAAArB,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAAE,OAAO,KAAKT,EAAO,EAI/E,KAAKG,GAAQ,OAAO,MAASmB,GAAmB,CAC5C,MAAMC,EAASD,EAAE,OACjB,GAAIP,EAAa,CACb,MAAMS,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EACzE,UAAW0B,KAAY,MAAM,KAAKD,CAAK,EAC/BC,IAAa,KAAKvB,IACTuB,EAAA,aAAa,cAAe,MAAM,EAG/C,KAAKvB,GAAM,aAAa,aAAa,IAAM,OACtC,KAAAA,GAAM,aAAa,cAAe,OAAO,EAEzC,KAAAA,GAAM,aAAa,cAAe,MAAM,CACjD,KACG,CACIqB,EAAA,aAAa,eAAgB,MAAM,EACtCA,EAAO,UAAU,SAAS,2BAA2B,GAC9CA,EAAA,UAAU,OAAO,2BAA2B,EAC5CA,EAAA,aAAa,uBAAwB,KAAK,IAE1CA,EAAA,UAAU,IAAI,2BAA2B,EAChDA,EAAO,aAAa,uBAAwB,KAAKjB,IAAe,UAAY,EAAE,GAGvE,UAAAa,KAAS,KAAKf,GACrBe,EAAM,KAAOI,EAAO,aAAa,sBAAsB,IAAMJ,EAAM,SAAW,UAAY,QAElG,CAAA,EAGC,KAAAhB,GAAQ,OAAO,UAAY,IAAY,CACxC,GAAI,CAACpD,GAAU,CAACC,GAAc+D,EAAa,CACvC,MAAMS,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EAChE,QAAApB,EAAI,EAAGC,EAAQ4C,EAAM,OAAQ7C,EAAIC,EAAO,EAAED,EAC3C6C,EAAM7C,CAAC,IAAM,KAAKuB,IAClBsB,EAAM7C,CAAC,EAAE,aAAa,cAAe,MAAM,EAG/C,KAAKuB,GAAM,aAAa,aAAa,IAAM,QACtC,KAAAA,GAAM,aAAa,cAAe,OAAO,CAEtD,CAAA,EAEC,KAAAC,GAAQ,OAAO,SAAW,IAAY,CACvC,GAAI,CAACpD,GAAU,CAACC,GAAc+D,EAAa,CACvC,MAAMS,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EAChE,QAAApB,EAAI,EAAGC,EAAQ4C,EAAM,OAAQ7C,EAAIC,EAAO,EAAED,EAC/C6C,EAAM7C,CAAC,EAAE,aAAa,cAAe,MAAM,EAE3C,KAAKuB,GAAM,aAAa,aAAa,IAAM,SACtC,KAAAA,GAAM,aAAa,cAAe,MAAM,CAErD,CAAA,EAGJ,KAAKF,GAAQ,iBAAiB,QAAS,KAAKG,GAAQ,OAAO,MAAOzC,CAAa,EAE/E,KAAKyC,GAAQ,OAAO,MAASmB,GAAmB,CAC5C,MAAMI,EAASJ,EAAE,OACjB,GAAII,EAAO,QAAQ,IAAI,KAAK3B,GAAQ,EAAE,EAAE,GAAK2B,EAAO,UAAU,SAAS,sBAAsB,EAAG,CAC5F,MAAMC,EAAWD,EAAO,aAAa,YAAY,EAAG,QAAQ,YAAa,EAAE,EAEhE,UAAAP,KAAS,KAAKf,GACrBe,EAAM,KAAOA,EAAM,WAAaQ,EAAW,UAAY,SACnDR,EAAM,WAAaQ,IACnB,KAAKrB,GAAgBa,GAI7B,GAAIJ,EAAa,CACT,KAAKf,GAAQ,UAAU,SAAS,2BAA2B,GACtD,KAAAA,GAAQ,UAAU,OAAO,2BAA2B,EACpD,KAAAA,GAAQ,aAAa,uBAAwB,KAAK,IAElD,KAAAA,GAAQ,UAAU,IAAI,2BAA2B,EACjD,KAAAA,GAAQ,aAAa,uBAAwB2B,CAAQ,GAG9D,MAAMC,EAAW,KAAK1B,GAAM,iBAAiB,4BAA4B,EACzE,UAAW2B,KAAW,MAAM,KAAKD,CAAQ,EAC7BC,EAAA,aAAa,eAAgB,OAAO,EAEzCH,EAAA,cAAe,aAAa,eAAgB,MAAM,EACpD,KAAAxB,GAAM,aAAa,cAAe,OAAO,CAAA,MAEzC,KAAAF,GAAQ,aAAa,uBAAwB2B,CAAQ,EAExD,MAAAhC,EAAQD,EAAS,iBAAiB,EACxC,KAAKK,GAAQ,WAAa,EAAA,cAAcJ,CAAK,CACjD,CAAA,EAGJ,KAAKQ,GAAQ,OAAO,UAAamB,GAAmB,CACzC,KAAA,KAAKrB,GAAU,WAClB,KAAKA,GAAU,YAAY,KAAKA,GAAU,SAAS,EAEvD,MAAMf,EAAIoC,EAAE,OACR,GAAApC,EAAE,OAAS,UAIf,GAAIA,EAAE,YAAcA,EAAE,YAAY,OAAS,EACvC,UAAW4C,KAAO,MAAM,KAAK5C,EAAE,UAAU,EAAG,CAClC,MAAA6C,EAAWD,GAAgB,MAAQ,GACzC,GAAIC,EAAS,CACJ,KAAA9B,GAAU,UAAU,IAAI,iBAAiB,EACxC,MAAA4B,EAAU,SAAS,cAAc,MAAM,EAC7CA,EAAQ,UAAYE,EACf,KAAA9B,GAAU,QAAQ4B,CAAO,CAAA,KAEvB,MAAA,KAAK5B,GAAU,WAClB,KAAKA,GAAU,YAAY,KAAKA,GAAU,SAAS,CAG/D,KAEO,MAAA,KAAKA,GAAU,WAClB,KAAKA,GAAU,YAAY,KAAKA,GAAU,SAAS,CAE3D,EAGAc,IACA,KAAKf,GAAQ,iBAAiB,YAAa,KAAKG,GAAQ,OAAO,UAAWzC,CAAa,EACvF,KAAKwC,GAAM,iBAAiB,YAAa,KAAKC,GAAQ,OAAO,UAAWzC,CAAa,EACrF,KAAKwC,GAAM,iBAAiB,WAAY,KAAKC,GAAQ,OAAO,SAAUzC,CAAa,EAC9E,KAAAqC,GAAQ,WAAa,EAAA,iBAAiB,iBAAkB,KAAKI,GAAQ,OAAO,SAAUzC,CAAa,GAG5G,SAAS,iBAAiB,QAAS,KAAKyC,GAAQ,OAAO,MAAOzC,CAAa,EAEhE,UAAAyD,KAAS,KAAKf,GACrBe,EAAM,KAAOA,EAAM,OAAS,UAAY,SAAWA,EAAM,KACzDA,EAAM,iBAAiB,YAAa,KAAKhB,GAAQ,OAAO,UAAWzC,CAAa,EAGpF,MAAMsE,EAAc,KAAKjC,GACpB,WAAW,EACX,cAAc,yDAAyD,EAC5E,GAAIiC,EAAa,CACP,MAAAC,EAAa,KAAK7B,GAAgB,KAAMhC,GAAOA,EAAG,WAAa4D,EAAY,OAAO,EACpFC,GACA,KAAK,iBAAiBA,CAAU,CAExC,CACJ,CAEA,SAAgB,CACZ,KAAM,CAAE,YAAAlB,CAAgB,EAAA,KAAKhB,GAAQ,WAAW,EAE5C,GAAC,KAAKM,GAIC,WAAAc,KAAS,KAAKf,GACrBe,EAAM,oBAAoB,YAAa,KAAKhB,GAAQ,OAAO,SAAS,EAGxE,SAAS,oBAAoB,QAAS,KAAKA,GAAQ,OAAO,KAAK,EAC/D,KAAKH,GAAQ,oBAAoB,QAAS,KAAKG,GAAQ,OAAO,KAAK,EAC/DY,IACA,KAAKf,GAAQ,oBAAoB,YAAa,KAAKG,GAAQ,OAAO,SAAS,EAC3E,KAAKD,GAAM,oBAAoB,YAAa,KAAKC,GAAQ,OAAO,SAAS,EACzE,KAAKD,GAAM,oBAAoB,WAAY,KAAKC,GAAQ,OAAO,QAAQ,EAClE,KAAAJ,GAAQ,aAAa,oBAAoB,iBAAkB,KAAKI,GAAQ,OAAO,QAAQ,EAC5F,KAAKD,GAAM,UAEf,KAAKF,GAAQ,SACjB,CAEA,aAAsC,CAClC,KAAM,CAAE,YAAAe,EAAa,OAAAD,CAAA,EAAW,KAAKf,GAAQ,aAC7C,GAAIgB,GAAe,KAAKX,GAAgB,QAAU,EAC9C,MAAO,GAEL,MAAA8B,EAAW,KAAK,mBAGf,OAAAA,EAAS,OAAS,EACnB,CACI,UAAW,uBACX,QAAS,KAAK3B,IAAY,MAC1B,IAAK,WACL,KAAMO,GAAQ,UAAY,GAC1B,SAAAoB,GAEJ,EACV,CAEQ,kBAAsC,CAC1C,KAAM,CAAE,OAAApB,EAAQ,YAAAC,CAAA,EAAgB,KAAKhB,GAAQ,aAC7C,GAAI,KAAKK,GAAgB,QAAU,GAAK,CAACW,EACrC,MAAO,GAGP,IAAAoB,EAAQ,CAAC,CAAE,IAAK,MAAO,MAAOrB,GAAQ,KAAO,EAAA,CAAI,EAC1C,UAAAK,KAAS,KAAKf,GAAiB,CACtC,MAAMiB,EAAQP,GAAQ,KAAOA,EAAO,KAAKK,EAAM,QAAQ,EAAI,KAE3DgB,EAAQA,EAAM,OAAQ/D,GAAOA,EAAG,MAAQ+C,EAAM,QAAQ,EAChDgB,EAAA,KAAK,CAAE,IAAKhB,EAAM,SAAU,MAAOE,GAASF,EAAM,KAAA,CAAO,CACnE,CAEO,OAAAgB,CACX,CAEQ,iBAAiBhB,EAAwB,CAC7CA,EAAM,KAAO,UACb,KAAKZ,GAAWY,EAAM,SACtB,KAAKnB,GAAQ,aAAa,uBAAwB,KAAKO,EAAQ,EAC1D,KAAAP,GAAQ,UAAU,IAAI,2BAA2B,EACtD,KAAKM,GAAgBa,EAErB,MAAMiB,EAAU,SAAS,iBAAiB,4BAA4B,GAAK,CAAA,EAC3E,UAAWV,KAAU,MAAM,KAAKU,CAAO,EAC5BV,EAAA,aAAa,eAAgB,OAAO,EAI1C,SAAA,cAAc,8CAA8CP,EAAM,QAAQ,IAAI,GAC7E,eAAe,aAAa,eAAgB,MAAM,CAC5D,CACJ,CCxUA,MAAMkB,CAAsC,CAGxCtC,GAEAuC,GAEAtC,GAEAuC,GAA8B,CAAA,EAE9BC,GAAmB,EAEnBC,GAAoB,EAEpBC,GAEAlC,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,EACrB,KAAK0B,GAAgB,SAAS,KAAK,UAAU,SAAS,mBAAmB,EAEzE,MAAMrB,EAAS,SAGf,KAAK,kBAAoB,CAAC,EACtBA,EAAO,mBACPA,EAAO,sBACPA,EAAO,qBACPA,EAAO,0BACPA,EAAO,yBACN,SAAS,cAAc,OAAO,EAAwB,yBAG3D,KAAK,oBAAsB,KAAK,oBAAoB,KAAK,IAAI,EAC7D,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,kBAAoB,KAAK,kBAAkB,KAAK,IAAI,EACzD,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EAEvD,KAAKsB,GAAoB,CACrB,mBACA,sBACA,yBACA,oBAAA,EAGC,KAAAA,GAAkB,QAAS5C,GAAU,CACtC,SAAS,iBAAiBA,EAAO,KAAK,kBAAmBjC,CAAa,CAAA,CACzE,EACD,KAAK,mBAAmB,EAAK,EAE7B,KAAKqC,GAAQ,eAAe,iBAAiB,UAAW,KAAK,oBAAqBrC,CAAa,EAG3FZ,IACA,KAAKiD,GAAQ,aAAa,iBAAiB,wBAAyB,KAAK,eAAgBrC,CAAa,EACtG,KAAKqC,GAAQ,aAAa,iBAAiB,sBAAuB,KAAK,iBAAkBrC,CAAa,EAE9G,CAEA,QAAe,CACX,KAAM,CAAE,OAAAoD,CAAW,EAAA,KAAKf,GAAQ,WAAW,EACtC,KAAAC,GAAU,SAAS,cAAc,QAAQ,EAC9C,KAAKA,GAAQ,KAAO,SACpB,KAAKA,GAAQ,UAAY,uCAAuC,KAAKQ,EAAgB,GACrF,KAAKR,GAAQ,SAAW,EACnB,KAAAA,GAAQ,MAAQc,GAAQ,YAAc,GAC3C,KAAKd,GAAQ,aAAa,gBAAiB,KAAKD,GAAQ,EAAE,EACrD,KAAAC,GAAQ,aAAa,eAAgB,OAAO,EACjD,KAAKA,GAAQ,aAAa,aAAcc,GAAQ,YAAc,EAAE,EAEhE,KAAK4B,GAAc,IAAY,CACtB,KAAA1C,GAAQ,aAAa,eAAgB,MAAM,EAChD,KAAK,iBAAiB,CAAA,EAG1B,KAAK0C,GAAc,KAAKA,GAAY,KAAK,IAAI,EAE7C,KAAK1C,GAAQ,iBAAiB,QAAS,KAAK0C,GAAahF,CAAa,EAEjE,KAAAqC,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAAE,YAAY,KAAKT,EAAO,CACpF,CAEA,SAAgB,CACZ,KAAKD,GAAQ,aAAa,EAAE,oBAAoB,UAAW,KAAK,mBAAmB,EAE9E,KAAAwC,GAAkB,QAAS5C,GAAU,CAC7B,SAAA,oBAAoBA,EAAO,KAAK,iBAAiB,CAAA,CAC7D,EACG7C,IACA,KAAKiD,GAAQ,WAAW,EAAE,oBAAoB,wBAAyB,KAAK,cAAc,EAC1F,KAAKA,GAAQ,WAAW,EAAE,oBAAoB,sBAAuB,KAAK,gBAAgB,GAE9F,KAAKC,GAAQ,oBAAoB,QAAS,KAAK0C,EAAW,EAC1D,KAAK1C,GAAQ,QACjB,CAEA,kBAAyB,CAGrB,GAAI,KAAKsC,GAAe,CACpB,MAAMrB,EAAS,SACXA,EAAO,eACPA,EAAO,eAAe,EACfA,EAAO,oBACdA,EAAO,oBAAoB,EACpBA,EAAO,uBACdA,EAAO,uBAAuB,EACvBA,EAAO,iBACdA,EAAO,iBAAiB,EAExB,KAAK,kBAAkB,EAElB,SAAA,KAAK,UAAU,OAAO,mBAAmB,CAAA,KAC/C,CAEG,MAAA0B,EAAQ,KAAK5C,GAAQ,WAAW,EACjC,KAAAyC,GAAmB,OAAO,OAAO,MACjC,KAAAC,GAAoB,OAAO,OAAO,OAEnCE,EAAM,kBACNA,EAAM,cAAc,oBACbA,EAAM,qBACbA,EAAM,cAAc,uBACbA,EAAM,wBACbA,EAAM,cAAc,0BACbA,EAAM,oBACbA,EAAM,cAAc,sBACbA,EAAM,sBACbA,EAAM,sBAAsB,EAE5B,KAAK,kBAAkB,EAGlB,SAAA,KAAK,UAAU,IAAI,mBAAmB,CACnD,CAEA,GAAI,OAAO,OAAW,MAAgB3F,GAAcF,GAAY,CAEtD,KAAA,CAAE,OAAA8F,CAAW,EAAA,OACfA,EAAO,aAAe,CAAC,KAAKN,IACrBM,EAAA,YAAY,KAAK,WAAW,CAE3C,CACJ,CAEQ,mBAA0B,CAC9B,MAAMC,EAAQ,KAAKP,GAAgB,OAAY,KAAKE,GAC9CM,EAAS,KAAKR,GAAgB,OAAY,KAAKG,GAChD,KAAA,mBAAmB,CAAC,KAAKH,EAAa,EAEvC,KAAKvC,GAAQ,QACb,KAAKA,GAAQ,MAAA,EAAQ,UAAU8C,EAAOC,CAAM,EAE3C,KAAAR,GAAgB,CAAC,KAAKA,GAEvB,KAAKA,GACI,SAAA,KAAK,UAAU,IAAI,mBAAmB,EAEtC,SAAA,KAAK,UAAU,OAAO,mBAAmB,EAEjD,KAAA,QAAQO,EAAOC,CAAM,CAC9B,CAEQ,mBAAmBC,EAA6B,CAC/C,KAAAhD,GAAQ,eAAe,aAAa,mBAAoB,CAAC,CAACgD,GAAc,SAAA,CAAU,EACnF,KAAK/C,KACD+C,EACK,KAAA/C,GAAQ,UAAU,IAAI,8BAA8B,EAEpD,KAAAA,GAAQ,UAAU,OAAO,8BAA8B,EAGxE,CAEQ,QAAQ6C,EAAgBC,EAAuB,CAC7C,MAAAE,EAAU,KAAKjD,GAAQ,aAAa,EACpC4C,EAAQ,KAAK5C,GAAQ,WAAW,EAChCqC,EAAU,KAAKrC,GAAQ,WAAW,EACxC,IAAIkD,EAAS,GACb,GAAIJ,EACAG,EAAQ,MAAM,MAAQ,OACtBL,EAAM,MAAM,MAAQ,eACbP,EAAQ,MAAO,CAChB,MAAAc,EAAe,OAAOd,EAAQ,OAAU,SAAW,GAAGA,EAAQ,KAAK,KAAOA,EAAQ,MACxFa,GAAU,UAAUC,CAAY,eAC1BP,EAAA,MAAM,eAAe,OAAO,CAAA,MAE5BA,EAAA,MAAM,eAAe,OAAO,EAC1BK,EAAA,MAAM,eAAe,OAAO,EAExC,GAAIF,EACAH,EAAM,MAAM,OAAS,OACrBK,EAAQ,MAAM,OAAS,eAChBZ,EAAQ,OAAQ,CACjB,MAAAe,EAAgB,OAAOf,EAAQ,QAAW,SAAW,GAAGA,EAAQ,MAAM,KAAOA,EAAQ,OAC3Fa,GAAU,WAAWE,CAAa,eAC5BR,EAAA,MAAM,eAAe,QAAQ,CAAA,MAE7BA,EAAA,MAAM,eAAe,QAAQ,EAC3BK,EAAA,MAAM,eAAe,QAAQ,EAGrCC,GACQD,EAAA,aAAa,QAASC,CAAM,CAE5C,CAEQ,oBAAoB3B,EAAwB,CAChD,MAAM8B,EAAM9B,EAAE,OAASA,EAAE,SAAW,EACP,UAAU,eAAe,UAAU,SAAS,yBAAyB,IACrE8B,IAAQ,IAAMA,IAAQ,MAC/C,KAAK,iBAAiB,EACtB9B,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAE1B,CAEQ,gBAAuB,CAC3B,KAAKgB,GAAgB,GACrB,KAAK,mBAAmB,EAAI,EACnB,SAAA,KAAK,UAAU,IAAI,mBAAmB,CACnD,CAEQ,kBAAyB,CAC7B,KAAKA,GAAgB,GACrB,KAAK,mBAAmB,EAAK,EACpB,SAAA,KAAK,UAAU,OAAO,mBAAmB,CACtD,CACJ,CC5OO,SAASe,EAAatF,EAAqB,CAK9C,MAAMuF,MAJUvF,EAAI,MAAM,GAAG,EAAE,CAAC,GACF,IAAI,MAAM,IAAI,GACN,CAAC,GAAG,IAAI,GACJ,IAAI,MAAM,GAAG,GACpB,CAAC,GAAG,OAAS,GACzC,OAAAuF,EAAS,SAAS,GAAG,EAAIA,EAAS,UAAUA,EAAS,YAAY,GAAG,EAAI,CAAC,EAAI,EACxF,CAEO,SAASC,EAAYC,EAAwB,CAE5C,MAAA,WAAW,KAAKA,EAAM,GAAG,GAAK,CAAC,wBAAyB,+BAA+B,EAAE,SAASA,EAAM,IAAI,CAEpH,CAMO,SAASC,EAAaD,EAAwB,CACjD,MAAO,SAAS,KAAKA,EAAM,GAAG,GAAKA,EAAM,OAAS,sBACtD,CAEO,SAASE,EAAYF,EAAwB,CACzC,MAAA,uBAAuB,KAAKA,EAAM,GAAG,GAAK,CAAC,cAAe,WAAW,EAAE,SAASA,EAAM,IAAI,CACrG,CAEgB,SAAAG,EAAgB5F,EAAaH,EAAmC,CACtE,MAAAgG,EAAYP,EAAatF,CAAG,EAGlC,GAAI,CAAC6F,EACM,OAAA/F,EAAQD,CAAO,EAAI,YAAc,YAI5C,OAAQgG,EAAW,CACf,IAAK,OACL,IAAK,MACM,MAAA,wBACX,IAAK,MACM,MAAA,uBACX,IAAK,MACM,OAAA/F,EAAQD,CAAO,EAAI,YAAc,YAC5C,IAAK,MACM,MAAA,YACX,IAAK,OACM,OAAAC,EAAQD,CAAO,EAAI,aAAe,aAC7C,IAAK,MACM,OAAAC,EAAQD,CAAO,EAAI,YAAc,YAC5C,IAAK,MACM,MAAA,YACX,IAAK,MACM,MAAA,YACX,IAAK,MACM,MAAA,aACX,IAAK,MACM,MAAA,YACX,IAAK,MACM,MAAA,YACX,IAAK,OACM,MAAA,aACX,QACW,OAAAC,EAAQD,CAAO,EAAI,YAAc,WAChD,CACJ,CAIO,SAASiG,EACZL,EACAM,EACAC,EACAC,EACAC,EACI,CACE,MAAAC,EAAcV,EAAM,OACtBU,IAAgB,OAChBA,EACK,KAAK,IAAM,CAERV,EAAM,MAAM,EACZO,EAAS,EAAI,EACbC,EAAM,EAAK,EACFC,GAAA,CACZ,EACA,MAAM,IAAM,CAETT,EAAM,OAAS,EACfA,EAAM,MAAQ,GAETA,EAAA,OACA,KAAK,IAAM,CAERA,EAAM,MAAM,EACZO,EAAS,EAAI,EACbC,EAAM,EAAI,EACDC,GAAA,CACZ,EACA,MAAM,IAAM,CAETT,EAAM,OAASM,EACfN,EAAM,MAAQ,GACdO,EAAS,EAAK,EACdC,EAAM,EAAK,EACFC,GAAA,CACZ,CAAA,CACR,GAELF,EAAS,CAACP,EAAM,QAAW,YAAa,QAAWU,aAAyC,OAAQ,EACpGV,EAAM,MAAM,EACZQ,EAAM,EAAK,EACFC,IAEjB,CC/GA,MAAME,EAAkC,CACpCpE,GAEAC,GAEAE,GAEAC,GAAsB,CAClB,OAAQ,CAAC,EACT,OAAQ,CAAC,EACT,MAAO,CAAC,CAAA,EAGZiE,GAAmB,CAAA,EAEnBC,GAAgB,GAEhB7D,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,CACzB,CAEA,QAAe,CACL,KAAA,CAAE,OAAAE,EAAQ,aAAcwD,EAAY,YAAAvD,GAAgB,KAAKhB,GAAQ,aACjEwE,EAAeD,IAAe,KAAO,SAASA,GAAc,IAAK,EAAE,EAAI,KAAKvE,GAAQ,SAAA,EAAW,MAChG,KAAAsE,GAAgB,GAAGE,CAAY,GAC9B,MAAAC,EAAY,KAAK,mBACjBC,EAAeD,EAAU,OAASA,EAAU,KAAMrC,GAAUA,EAAM,MAAQ,KAAKkC,EAAa,EAAI,KAChGK,EAAeD,EAAeA,EAAa,MAAQ3D,GAAQ,MAAQ,GACzE,IAAI6D,EAAW,GAEV,KAAA3E,GAAU,SAAS,cAAc,QAAQ,EAC9C,KAAKA,GAAQ,UAAY,mCAAmC,KAAKQ,EAAgB,GACjF,KAAKR,GAAQ,SAAW,EACnB,KAAAA,GAAQ,MAAQc,GAAQ,aAAe,GAC5C,KAAKd,GAAQ,aAAa,gBAAiB,KAAKD,GAAQ,EAAE,EAC1D,KAAKC,GAAQ,aAAa,aAAcc,GAAQ,aAAe,EAAE,EACjE,KAAKd,GAAQ,aAAa,oBAAqB,KAAKqE,EAAa,EAC5D,KAAArE,GAAQ,UAAY,SAAS0E,CAAY,UAE9C,MAAME,EAAkB,IAAY,CAC3B,KAAKR,GAAQ,OAONO,IACH,KAAA5E,GAAQ,WAAW,MAAQwE,EACrBI,EAAA,KARX,KAAK,cAAc,EACnB,WAAW,IAAY,CACd,KAAA5E,GAAQ,WAAW,MAAQwE,EAC1B,MAAAjD,EAAI5B,EAAS,iBAAiB,EACpC,KAAKK,GAAQ,WAAa,EAAA,cAAcuB,CAAC,GAC1C,CAAC,EAIR,EAGJ,KAAKnB,GAAQ,MAAM,eAAiByE,EAAgB,KAAK,IAAI,EAC7D,KAAKzE,GAAQ,MAAM,eAAiByE,EAAgB,KAAK,IAAI,EAC7D,KAAKzE,GAAQ,MAAM,kBAAoByE,EAAgB,KAAK,IAAI,EAE5D7D,IACA,KAAK,WAAW,EACX,KAAAZ,GAAQ,OAAO,MAAQ,IAAY,CACpC,GAAIY,EAAa,CACb,MAAMS,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EAChE,QAAApB,EAAI,EAAGC,EAAQ4C,EAAM,OAAQ7C,EAAIC,EAAO,EAAED,EAC3C6C,EAAM7C,CAAC,IAAM,KAAKuB,IAClBsB,EAAM7C,CAAC,EAAE,aAAa,cAAe,MAAM,EAG/C,KAAKuB,GAAM,aAAa,aAAa,IAAM,OACtC,KAAAA,GAAM,aAAa,cAAe,OAAO,EAEzC,KAAAA,GAAM,aAAa,cAAe,MAAM,CAErD,CAAA,EAEC,KAAAC,GAAQ,OAAO,UAAY,IAAY,CACpC,GAAA,CAACpD,GAAU,CAACC,EAAY,CACxB,MAAMwE,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EAChE,QAAApB,EAAI,EAAGC,EAAQ4C,EAAM,OAAQ7C,EAAIC,EAAO,EAAED,EAC3C6C,EAAM7C,CAAC,IAAM,KAAKuB,IAClBsB,EAAM7C,CAAC,EAAE,aAAa,cAAe,MAAM,EAG/C,KAAKuB,GAAM,aAAa,aAAa,IAAM,QACtC,KAAAA,GAAM,aAAa,cAAe,OAAO,CAEtD,CAAA,EAEC,KAAAC,GAAQ,OAAO,SAAW,IAAY,CACnC,GAAA,CAACpD,GAAU,CAACC,EAAY,CACxB,MAAMwE,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EAChE,QAAApB,EAAI,EAAGC,EAAQ4C,EAAM,OAAQ7C,EAAIC,EAAO,EAAED,EAC/C6C,EAAM7C,CAAC,EAAE,aAAa,cAAe,MAAM,EAE3C,KAAKuB,GAAM,aAAa,aAAa,IAAM,SACtC,KAAAA,GAAM,aAAa,cAAe,MAAM,CAErD,CAAA,EAGJ,KAAKF,GAAQ,iBAAiB,QAAS,KAAKG,GAAQ,OAAO,MAAOzC,CAAa,EAC/E,KAAKsC,GAAQ,iBAAiB,YAAa,KAAKG,GAAQ,OAAO,UAAWzC,CAAa,EACvF,KAAKwC,GAAM,iBAAiB,YAAa,KAAKC,GAAQ,OAAO,UAAWzC,CAAa,EACrF,KAAKwC,GAAM,iBAAiB,WAAY,KAAKC,GAAQ,OAAO,SAAUzC,CAAa,EAC9E,KAAAqC,GAAQ,WAAa,EAAA,iBAAiB,iBAAkB,KAAKI,GAAQ,OAAO,SAAUzC,CAAa,GAG5G,KAAKyC,GAAQ,OAAO,MAASmB,GAAmB,CAC5C,MAAMI,EAASJ,EAAE,OACX,CAAE,YAAAuD,CAAgB,EAAA,KAAK9E,GAAQ,SAAS,EACxC+E,EAAW,KAAK/E,GAAQ,SAAA,EAAW,OACzC,GAAI2B,EAAO,QAAQ,IAAI,KAAK3B,GAAQ,EAAE,EAAE,GAAK2B,EAAO,UAAU,SAAS,mBAAmB,EAAG,CACnF,MAAAqD,EAAWrD,EAAO,aAAa,YAAY,EAC3CsD,EAAQD,EAAWA,EAAS,QAAQ,UAAW,EAAE,EAAI,KAE3D,GADK,KAAAV,GAAgB,GAAGW,CAAK,GACzBjE,EAAa,CACb,KAAKf,GAAQ,aAAa,oBAAqB,GAAGgF,CAAK,EAAE,EACzD,KAAKhF,GAAQ,UAAY,SAAS1B,EAASoD,EAAO,UAAW,EAAI,CAAC,UAClE,MAAMuD,EACFvD,EAAO,eAAiBA,EAAO,cAAc,cACvCA,EAAO,cAAc,cAAc,iBAAiB,4BAA4B,EAChF,CAAA,EACD,QAAA/C,EAAI,EAAGC,GAAQqG,EAAO,OAAQtG,EAAIC,GAAO,EAAED,EAChDsG,EAAOtG,CAAC,EAAE,aAAa,eAAgB,OAAO,EAE9C+C,EAAO,eACAA,EAAA,cAAc,aAAa,eAAgB,MAAM,EAEvD,KAAAxB,GAAM,aAAa,cAAe,OAAO,CAClD,CACK,KAAAH,GAAQ,WAAW,MAAQiF,EAC3B,KAAAjF,GAAQ,WAAW,YAAc8E,EACjCC,GACD,KAAK/E,GAAQ,OAGX,MAAAJ,EAAQD,EAAS,eAAgB,CACnC,OAAQ,CACJ,MAAOgC,EAAO,UAAU,KAAK,EAC7B,MAAAsD,CACJ,CAAA,CACH,EACD,KAAKjF,GAAQ,WAAa,EAAA,cAAcJ,CAAK,EAC7C2B,EAAE,eAAe,EACjBA,EAAE,gBAAgB,CACtB,CAAA,EAGJ,MAAM4D,EAAatI,GAAK,YAAcA,GAAK,eAAiBA,GAAK,iBAC5D,KAAAuD,GAAQ,OAAO,WAAa,IAAY,CAEzC,MAAMqD,EAAQ,KAAKzD,GAAQ,SAAA,EAAW,QACtC,GAAI,CAAC0D,EAAaD,CAAK,GAAK,CAACD,EAAYC,CAAK,EAAG,CACvC,MAAA2B,EAAOD,GAAY,eAAiB,GACpCD,EAAS,KAAKb,GAAQ,IAAKhD,IAAU,CACvC,GAAGA,EACH,WAAY,SAASA,EAAK,MAAM,QAAQ,IAAK,EAAE,EAAG,EAAE,CACtD,EAAA,EAEF,IAAI4D,EAAQC,EAAO,KAAM7D,GAASA,EAAK,WAAa,GAAG,EACnD+D,IAAS,KACTH,EAAQC,EAAO,KAAM7D,GAASA,EAAK,YAAc,GAAG,EAC7C+D,IAAS,OACRH,EAAAC,EAAO,KAAM7D,GAASA,EAAK,YAAc,KAAOA,EAAK,WAAa,GAAG,GAG7E4D,IACA,KAAKjF,GAAQ,QACb,KAAKA,GAAQ,SAAA,EAAW,MAAQiF,EAAM,GACtC,KAAKjF,GAAQ,OAErB,CAAA,EAGJ,OAAO,KAAK,KAAKI,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAW,EAAE,iBAAiBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,EAAGjC,CAAa,CAAA,CAC7F,EAED,SAAS,iBAAiB,QAAS,KAAKyC,GAAQ,OAAO,MAAOzC,CAAa,EACvEwH,GACAA,EAAW,iBAAiB,SAAU,KAAK/E,GAAQ,OAAO,WAAYzC,CAAa,CAE3F,CAEA,SAAgB,CACZ,KAAM,CAAE,YAAAqD,CAAgB,EAAA,KAAKhB,GAAQ,WAAW,EAC1CmF,EAAatI,GAAK,YAAcA,GAAK,eAAiBA,GAAK,iBAEjE,OAAO,KAAK,KAAKuD,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAa,EAAA,oBAAoBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,CAAC,CAAA,CACjF,EACD,SAAS,oBAAoB,QAAS,KAAKQ,GAAQ,OAAO,KAAK,EAC3D+E,GACAA,EAAW,oBAAoB,SAAU,KAAK/E,GAAQ,OAAO,UAAU,EAEvEY,IACA,KAAKf,GAAQ,oBAAoB,QAAS,KAAKG,GAAQ,OAAO,KAAK,EACnE,KAAKH,GAAQ,SACb,KAAKA,GAAQ,oBAAoB,YAAa,KAAKG,GAAQ,OAAO,SAAS,EAC3E,KAAKD,GAAM,oBAAoB,YAAa,KAAKC,GAAQ,OAAO,SAAS,EACzE,KAAKD,GAAM,oBAAoB,WAAY,KAAKC,GAAQ,OAAO,QAAQ,EAClE,KAAAJ,GAAQ,aAAa,oBAAoB,iBAAkB,KAAKI,GAAQ,OAAO,QAAQ,EAC5F,KAAKD,GAAM,SAEnB,CAEA,aAAsC,CAClC,KAAM,CAAE,OAAAY,EAAQ,YAAAC,CAAA,EAAgB,KAAKhB,GAAQ,aAC7C,GAAIgB,EACA,MAAO,GAEL,MAAAmB,EAAW,KAAK,mBAEf,OAAAA,EAAS,OAAS,EACnB,CACI,UAAW,oBACX,QAAS,KAAKmC,IAAiB,KAC/B,IAAK,SACL,KAAMvD,GAAQ,OACd,SAAAoB,GAEJ,EACV,CAEQ,kBAAsC,CAC1C,KAAM,CAAE,OAAApB,CAAW,EAAA,KAAKf,GAAQ,WAAW,EACrCkF,EAAS,KAAK,gBACdrG,EAAQqG,EAAO,OACjB,IAAA9C,EAAQvD,EAAQ,CAAC,CAAE,IAAK,KAAM,MAAOkC,GAAQ,KAAM,EAAI,GAC3D,QAASnC,EAAI,EAAGA,EAAIC,EAAOD,IAAK,CACtB,MAAAqG,EAAQC,EAAOtG,CAAC,EACtBwD,EAAQA,EAAM,OAAQ/D,GAAOA,EAAG,MAAQ4G,EAAM,EAAE,EAC1C7C,EAAA,KAAK,CAAE,IAAK6C,EAAM,GAAI,MAAOA,EAAM,MAAO,CACpD,CAGA,OAAO7C,EACF,OAAO,CAACiD,EAAwBC,IACXD,EAAI,KAAMhE,GAASA,EAAK,QAAUiE,EAAQ,KAAK,EAI1DD,EAFIA,EAAI,OAAO,CAACC,CAAO,CAAC,EAGhC,CAAE,CAAA,EACJ,KAAK,CAACC,EAAGC,IAAO,SAASD,GAAG,OAAS,GAAI,EAAE,EAAI,SAASC,GAAG,OAAS,GAAI,EAAE,EAAI,EAAI,EAAG,CAC9F,CAGQ,qBAAqBzC,EAAwB,CACjD,KAAM,CAAE,OAAAhC,CAAW,EAAA,KAAKf,GAAQ,WAAW,EAC3C,OAAI+C,GAAU,KACH,KAEPA,GAAU,KACH,KAEPA,GAAU,KACH,QAEPA,GAAU,KACH,QAEPA,GAAU,IACH,OAEPA,GAAU,IACH,OAEPA,GAAU,IACH,OAEPA,GAAU,IACH,OAEPA,GAAU,IACH,OAEJhC,GAAQ,MAAQ,EAC3B,CAEQ,eAAyB,CACzB,OAAC,KAAKsD,GAAQ,QACd,KAAKrE,GAAQ,SAAS,EAAE,OAAO,QAASiF,GAAiB,CACrD,KAAKZ,GAAQ,KAAK,CAAE,GAAGY,EAAO,MAAOA,EAAM,OAAS,KAAK,qBAAqBA,EAAM,MAAM,CAAG,CAAA,CAAA,CAChG,EAEE,KAAKZ,EAChB,CAEQ,YAAmB,CACvB,KAAM,CAAE,YAAArD,CAAgB,EAAA,KAAKhB,GAAQ,WAAW,EAEhD,GAAIgB,EAAa,CACR,KAAAf,GAAQ,UAAU,IAAI,sBAAsB,EAC5C,KAAAE,GAAQ,SAAS,cAAc,KAAK,EACzC,KAAKA,GAAM,UAAY,8BAClB,KAAAA,GAAM,aAAa,cAAe,MAAM,EAC7C,MAAMsF,EAAY,oBAIZC,EAAO;AAAA,kBAHG,KAAK,mBAKZ,IACIrE,GAAS;AAAA;AAAA,oCAEE,KAAKiD,KAAkBjD,EAAK,IAAM,OAAS,OAAO;AAAA,6DACzBoE,CAAe,wBAAwBpE,EAAK,GAAG,KAChFA,EAAK,KACT;AAAA,uBAAA,EAGH,KAAK,EAAE,CAAC;AAAA,oBAEjB,KAAKlB,GAAM,UAAYuF,EAEjB,MAAAvE,EAAgB,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAY,sCAAsC,KAAKV,EAAgB,GACvEU,EAAA,YAAY,KAAKlB,EAAO,EACxBkB,EAAA,YAAY,KAAKhB,EAAK,EAC/B,KAAAH,GAAQ,cAAc,SAAS,KAAKU,EAAa,EAAE,YAAYS,CAAa,CACrF,CACJ,CACJ,CCzUA,MAAMwE,EAAgC,CAClC3F,GAEAC,GAEAG,GAAsB,CAClB,SAAU,CAAC,EACX,MAAO,CAAC,CAAA,EAGZK,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,EAErB,KAAK,oBAAsB,KAAK,oBAAoB,KAAK,IAAI,CACjE,CAEA,QAAe,CACX,KAAM,CAAE,OAAAE,CAAW,EAAA,KAAKf,GAAQ,WAAW,EACtC,KAAAC,GAAU,SAAS,cAAc,QAAQ,EAC9C,KAAKA,GAAQ,KAAO,SACpB,KAAKA,GAAQ,UAAY,sCAAsC,KAAKQ,EAAgB,GACpF,KAAKR,GAAQ,SAAW,EACnB,KAAAA,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,gBAAiB,KAAKD,GAAQ,EAAE,EACrD,KAAAC,GAAQ,aAAa,eAAgB,OAAO,EACjD,KAAKA,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,EAErD,KAAAf,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAAE,YAAY,KAAKT,EAAO,EAE3E,KAAAG,GAAQ,OAAUmB,GAAmB,CACjC,KAAAtB,GAAQ,aAAa,eAAgB,MAAM,EAC1C,MAAA5B,EAAK,KAAK2B,GAAQ,cAAc,EAElC3B,EAAG,QAAUA,EAAG,OACZ,KAAK2B,GAAQ,UACR,KAAAA,GAAQ,QAAQ,cAAgB,IAGzC3B,EAAG,KAAK,EACH,KAAA+B,GAAQ,MAAM,SAEnB/B,EAAG,MAAM,EACJ,KAAA+B,GAAQ,MAAM,SAGvBmB,EAAE,eAAe,EACjBA,EAAE,gBAAgB,CAAA,EAGtB,MAAMqE,EAAY9H,EAAQ,KAAKkC,GAAQ,WAAY,CAAA,EAE9C,KAAAI,GAAQ,MAAM,KAAO,IAAY,CAC9B,KAAKJ,GAAQ,cAAc,EAAE,OACzB,KAAKA,GAAQ,UACR,KAAAC,GAAQ,UAAU,IAAI,gCAAgC,EAEtD,KAAAA,GAAQ,UAAU,IAAI,+BAA+B,EAEzD,KAAAA,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,IAErD,KAAAd,GAAQ,UAAU,OAAO,gCAAgC,EACzD,KAAAA,GAAQ,UAAU,IAAI,+BAA+B,EAErD,KAAAA,GAAQ,MAAQc,GAAQ,OAAS,GACtC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,OAAS,EAAE,EAEvD,KAAKf,GAAQ,WAAW,GAAG,aAC3B,OAAO,KAAK6F,EAAO,SAAS,EAAE,QAASxC,GAAQ,CACvCA,IAAQ,KAAKrD,GAAQ,IACN6F,EAAO,UAAUxC,CAAG,EAAE,cAAc,EAC5C,MAAM,CACjB,CACH,EAET,EAEC,KAAAjD,GAAQ,MAAM,eAAiB,IAAY,CACxC,KAAKH,GAAQ,UAAU,SAAS,+BAA+B,IAC1D,KAAAA,GAAQ,UAAU,OAAO,gCAAgC,EACzD,KAAAA,GAAQ,UAAU,OAAO,+BAA+B,EACxD,KAAAA,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,EAC9D,EAEC,KAAAX,GAAQ,MAAM,QAAU,IAAY,CAChC,KAAKH,GAAQ,UAAU,SAAS,+BAA+B,IAC3D,KAAAA,GAAQ,UAAU,OAAO,gCAAgC,EACzD,KAAAA,GAAQ,UAAU,IAAI,+BAA+B,EACrD,KAAAA,GAAQ,MAAQc,GAAQ,OAAS,GACtC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,OAAS,EAAE,EAC/D,EAEC,KAAAX,GAAQ,MAAM,MAAQ,IAAY,CAC9B,KAAAH,GAAQ,UAAU,OAAO,+BAA+B,EACxD,KAAAA,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,CAAA,EAEzD,KAAAX,GAAQ,MAAM,MAAQ,IAAY,CAC/B,KAAKJ,GAAQ,cAAc,EAAE,OAAS,KAAKA,GAAQ,WAC9C,KAAAC,GAAQ,UAAU,IAAI,gCAAgC,EACtD,KAAAA,GAAQ,UAAU,OAAO,+BAA+B,GAE7D,KAAKD,GAAQ,WAAW,EAAE,aAAe,KAAKA,GAAQ,WAAW,EAAE,UACnE,KAAKA,GAAQ,WAAW,EAAE,aAAe,GAEpC,KAAAC,GAAQ,UAAU,IAAI,gCAAgC,EACtD,KAAAA,GAAQ,UAAU,OAAO,+BAA+B,IAExD,KAAAA,GAAQ,UAAU,OAAO,gCAAgC,EACzD,KAAAA,GAAQ,UAAU,IAAI,+BAA+B,GAEzD,KAAAA,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,CAAA,EAEzD,KAAAX,GAAQ,MAAM,cAAgB,IAAY,CACtC,KAAAH,GAAQ,UAAU,OAAO,gCAAgC,EACzD,KAAAA,GAAQ,UAAU,IAAI,+BAA+B,EACrD,KAAAA,GAAQ,MAAQc,GAAQ,OAAS,GACtC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,OAAS,EAAE,CAAA,EAE1D,KAAAX,GAAQ,MAAM,YAAc,IAAY,CACrCwF,GACW,KAAK5F,GAAQ,cAAc,EACnC,MAAM,CACb,EAGE,MAAAnC,EAAU,KAAKmC,GAAQ,WAAW,EACnC,KAAAI,GAAQ,SAAS,gBAAkB,IAAY,CAChD,GAAI,CAAC,KAAKJ,GAAQ,cAAA,EAAgB,OAAQ,CAChC,MAAAJ,EAAQD,EAAS,SAAS,EAChC9B,EAAQ,cAAc+B,CAAK,CAC/B,CAAA,EAGJ,OAAO,KAAK,KAAKQ,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC/C/B,EAAQ,iBAAiB+B,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,EAAGjC,CAAa,CAAA,CAC3E,EAEG,KAAKqC,GAAQ,WAAW,EAAE,OAAO,cACjCnC,EAAQ,iBAAiB,QAAS,KAAKuC,GAAQ,OAAQzC,CAAa,EAGnE,KAAAqC,GACA,cACA,aAAa,EACb,iBAAiB,kBAAmB,KAAKI,GAAQ,SAAS,gBAAiBzC,CAAa,EAE7F,KAAKqC,GAAQ,eAAe,iBAAiB,UAAW,KAAK,oBAAqBrC,CAAa,EAC/F,KAAKsC,GAAQ,iBAAiB,QAAS,KAAKG,GAAQ,OAAQzC,CAAa,CAC7E,CAEA,SAAgB,CACZ,OAAO,KAAK,KAAKyC,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAa,EAAA,oBAAoBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,CAAC,CAAA,CACjF,EAEG,KAAKI,GAAQ,WAAW,EAAE,OAAO,cACjC,KAAKA,GAAQ,aAAa,oBAAoB,QAAS,KAAKI,GAAQ,MAAM,EAGzE,KAAAJ,GACA,YAAY,EACZ,aAAa,EACb,oBAAoB,kBAAmB,KAAKI,GAAQ,SAAS,eAAe,EAEjF,KAAKJ,GAAQ,aAAa,EAAE,oBAAoB,UAAW,KAAK,mBAAmB,EACnF,KAAKC,GAAQ,oBAAoB,QAAS,KAAKG,GAAQ,MAAM,EAC7D,KAAKH,GAAQ,QACjB,CAEQ,oBAAoBsB,EAAwB,CAChD,MAAM8B,EAAM9B,EAAE,OAASA,EAAE,SAAW,EACb,UAAU,eAAe,UAAU,SAAS,wBAAwB,IACpE8B,IAAQ,IAAMA,IAAQ,KACpC,KAAAjD,GAAQ,OAAOmB,CAAC,CAE7B,CACJ,CC9LgB,SAAAuE,EAAWC,EAAiBC,EAA4B,CACpE,MAAMC,EAAI,KAAK,MAAOF,EAAU,GAAMC,GAAa,EAAE,EACjD,IAAA,EAAI,KAAK,MAAMD,CAAO,EACtBG,EAAI,KAAK,MAAM,EAAI,EAAE,EACzB,MAAMC,EAAI,KAAK,MAAMD,EAAI,EAAE,EACrBE,EAAQ/G,GAA0B,CAC9B,MAAAgH,EAAehH,EAAM,WAC3B,OAAIA,EAAQ,GACJA,GAAS,EACF,KAEJ,IAAIgH,CAAY,GAEpBA,CAAA,EAEN,OAAAH,GAAA,GACA,GAAA,GACE,GAAGC,EAAI,EAAI,GAAGC,EAAKD,CAAC,CAAC,IAAM,EAAE,GAAGC,EAAKF,CAAC,CAAC,IAAIE,EAAK,CAAC,CAAC,GAAGH,EAAI,IAAIG,EAAKH,CAAC,CAAC,GAAK,EAAE,EACtF,CCZA,MAAMK,EAAoC,CACtCtG,GAEAuG,GAEAC,GAEAC,GAEAC,GAEAC,GAEAvG,GAAsB,CAClB,UAAW,CAAC,EACZ,SAAU,CAAC,EACX,OAAQ,CAAC,EACT,MAAO,CAAC,EACR,OAAQ,CAAC,CAAA,EAGbwG,GAAc,GAEdnG,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,EAErB,KAAK,oBAAsB,KAAK,oBAAoB,KAAK,IAAI,CACjE,CAEA,QAAe,CACX,KAAM,CAAE,OAAAE,EAAQ,SAAA8F,CAAA,EAAa,KAAK7G,GAAQ,aACrC,KAAAuG,GAAY,SAAS,cAAc,KAAK,EAC7C,KAAKA,GAAU,UAAY,qCAAqC,KAAK9F,EAAgB,GACrF,KAAK8F,GAAU,SAAW,EAC1B,KAAKA,GAAU,aAAa,aAAcxF,GAAQ,gBAAkB,EAAE,EACjE,KAAAwF,GAAU,aAAa,gBAAiB,GAAG,EAC3C,KAAAA,GAAU,aAAa,gBAAiB,GAAG,EAC3C,KAAAA,GAAU,aAAa,OAAQ,QAAQ,EAEvC,KAAAC,GAAU,SAAS,cAAc,OAAO,EAC7C,KAAKA,GAAQ,KAAO,QACpB,KAAKA,GAAQ,UAAY,8BACzB,KAAKA,GAAQ,SAAW,GACnB,KAAAA,GAAQ,aAAa,MAAO,GAAG,EAC/B,KAAAA,GAAQ,aAAa,OAAQ,KAAK,EACvC,KAAKA,GAAQ,MAAQ,IACrB,KAAKA,GAAQ,aAAa,aAAczF,GAAQ,cAAgB,EAAE,EAC7D,KAAAyF,GAAQ,aAAa,OAAQ,QAAQ,EAErC,KAAAC,GAAU,SAAS,cAAc,UAAU,EAChD,KAAKA,GAAQ,UAAY,gCACpB,KAAAA,GAAQ,aAAa,MAAO,KAAK,EACtC,KAAKA,GAAQ,MAAQ,EAEhB,KAAAC,GAAU,SAAS,cAAc,UAAU,EAChD,KAAKA,GAAQ,UAAY,gCACpB,KAAAA,GAAQ,aAAa,MAAO,KAAK,EACtC,KAAKA,GAAQ,MAAQ,EAEhB,KAAAH,GAAU,YAAY,KAAKC,EAAO,EAClC,KAAAD,GAAU,YAAY,KAAKG,EAAO,EAClC,KAAAH,GAAU,YAAY,KAAKE,EAAO,EAEnC,CAACzJ,GAAU,CAACC,IACP,KAAA0J,GAAW,SAAS,cAAc,MAAM,EAC7C,KAAKA,GAAS,UAAY,uBAC1B,KAAKA,GAAS,SAAW,GACzB,KAAKA,GAAS,UAAY,QACrB,KAAAJ,GAAU,YAAY,KAAKI,EAAQ,GAG5C,MAAMG,EAAqB,IAAY,CAC/B,KAAKN,GAAQ,UAAU,SAAS,OAAO,GAClC,KAAAA,GAAQ,UAAU,OAAO,OAAO,EAEnC,MAAAnI,EAAK,KAAK2B,GAAQ,cAAc,EACtC,GACI3B,EAAG,WAAa,KAChB,CAAC,KAAK2B,GAAQ,aAAa,aAAa,kBAAkB,GAC1D,CAAC,KAAKA,GAAQ,aAAa,aAAa,iBAAiB,EAC3D,CACQ,MAAAsF,EAAU,KAAKtF,GAAQ,UAAY3B,EAAG,YAAcA,EAAG,SAAWA,EAAG,YACtE,KAAAmI,GAAQ,MAAQlB,EAAQ,SAAS,EACjC,OAAO,MAAMjH,EAAG,QAAQ,IACzB,KAAKmI,GAAQ,aAAa,MAAO,GAAGnI,EAAG,QAAQ,EAAE,EACjD,KAAKkI,GAAU,aAAa,gBAAiBlI,EAAG,SAAS,UAAU,EACvE,MACO,KAAK2B,GAAQ,aAAa,aAAa,iBAAiB,GAC1D,KAAAwG,GAAQ,aAAa,MAAO,GAAG,EACpC,KAAKA,GAAQ,MAAQ,IAChB,KAAAA,GAAQ,MAAM,eAAiB,YACpC,KAAKE,GAAQ,MAAQ,EAChB,KAAAH,GAAU,aAAa,gBAAiB,GAAG,EAC3C,KAAAA,GAAU,aAAa,cAAe,OAAO,GAC1C,KAAKvG,GAAQ,WAAW,EAAE,MAAM,cACnC,KAAAuG,GAAU,aAAa,cAAe,MAAM,CACrD,EAGJ,IAAIQ,EAAkB,EACtB,MAAMC,EAAkB,KAAKhH,GAAQ,WAAW,EAAE,UAAU,UAAY,EAClE4F,EAAY9H,EAAQ,KAAKkC,GAAQ,WAAY,CAAA,EAEnD,KAAKI,GAAQ,MAAM,eAAiB0G,EAAmB,KAAK,IAAI,EAChE,KAAK1G,GAAQ,SAAS,gBAAkB0G,EAAmB,KAAK,IAAI,EAEpE,KAAK1G,GAAQ,MAAM,SAAYmB,GAAmB,CAC9C,MAAMlD,EAAKkD,EAAE,OACT,GAAAlD,EAAG,WAAa,KAAY,CAAC,KAAK2B,GAAQ,WAAW,EAAE,aAAa,kBAAkB,GAClF,GAAA3B,EAAG,SAAW,GACL,QAAAO,EAAI,EAAGC,EAAQR,EAAG,SAAS,OAAQO,EAAIC,EAAOD,IAC/C,GAAAP,EAAG,SAAS,MAAMA,EAAG,SAAS,OAAS,EAAIO,CAAC,EAAIP,EAAG,YAAa,CAChE,KAAKoI,GAAQ,MAASpI,EAAG,SAAS,IAAIA,EAAG,SAAS,OAAS,EAAIO,CAAC,EAAIP,EAAG,SAAY,IACnF,KACJ,OAIR,CAAC,KAAK2B,GAAQ,WAAa,EAAA,aAAa,iBAAiB,GACzD,KAAKuG,GAAU,aAAa,aAAa,IAAM,SAC/C,CAAC,KAAKvG,GAAQ,WAAA,EAAa,MAAM,cAE5B,KAAAuG,GAAU,aAAa,cAAe,MAAM,CACrD,EAEC,KAAAnG,GAAQ,MAAM,QAAU,IAAY,CACjCwF,GAAa,CAAC,KAAKY,GAAQ,UAAU,SAAS,SAAS,GAClD,KAAAA,GAAQ,UAAU,IAAI,SAAS,EAEpCZ,GAAa,KAAKY,GAAQ,UAAU,SAAS,OAAO,GAC/C,KAAAA,GAAQ,UAAU,OAAO,OAAO,CACzC,EAEC,KAAApG,GAAQ,MAAM,YAAc,IAAY,CACrCwF,GAAa,CAAC,KAAKY,GAAQ,UAAU,SAAS,OAAO,GAChD,KAAAA,GAAQ,UAAU,IAAI,OAAO,EAElCZ,GAAa,KAAKY,GAAQ,UAAU,SAAS,SAAS,GACjD,KAAAA,GAAQ,UAAU,OAAO,SAAS,CAC3C,EAEC,KAAApG,GAAQ,MAAM,MAAQ,IAAY,CAC7B,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EAClC,GAAA3B,EAAG,WAAa,KAAY,CAAC,KAAK2B,GAAQ,WAAW,EAAE,aAAa,kBAAkB,EAAG,CACzF,MAAMsF,EAAUjH,EAAG,YACnB,KAAKkI,GAAU,aAAa,gBAAiBjB,EAAQ,UAAU,EAC/D,KAAKiB,GAAU,aAAa,iBAAkBT,EAAWR,CAAO,CAAC,CACrE,CAAA,EAEC,KAAAlF,GAAQ,MAAM,KAAO,IAAY,CAC9BwF,GAAa,KAAKY,GAAQ,UAAU,SAAS,SAAS,GACjD,KAAAA,GAAQ,UAAU,OAAO,SAAS,EAEvCZ,GAAa,KAAKY,GAAQ,UAAU,SAAS,OAAO,GAC/C,KAAAA,GAAQ,UAAU,OAAO,OAAO,EAGrC,KAAKxG,GAAQ,cAAc,EAAE,WAAa,KAC1C,CAAC,KAAKA,GAAQ,WAAA,EAAa,aAAa,kBAAkB,IAErD,KAAAuG,GAAU,gBAAgB,eAAe,EACzC,KAAAA,GAAU,gBAAgB,gBAAgB,EACnD,EAEC,KAAAnG,GAAQ,MAAM,QAAU,IAAY,CACjCwF,GAAa,KAAKY,GAAQ,UAAU,SAAS,SAAS,GACjD,KAAAA,GAAQ,UAAU,OAAO,SAAS,EAEvCZ,GAAa,KAAKY,GAAQ,UAAU,SAAS,OAAO,GAC/C,KAAAA,GAAQ,UAAU,OAAO,OAAO,CACzC,EAEC,KAAApG,GAAQ,MAAM,WAAa,IAAY,CAClC,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EACtC,GACI3B,EAAG,WAAa,MACf,CAAC,KAAK2B,GAAQ,aAAa,aAAa,kBAAkB,GACvD,KAAKA,GAAQ,WAAa,EAAA,aAAa,iBAAiB,GAC9D,EAEM,CAAC,KAAKwG,GAAQ,aAAa,KAAK,GAChC,KAAKA,GAAQ,aAAa,KAAK,IAAM,KACrC,WAAW,KAAKA,GAAQ,aAAa,KAAK,GAAK,IAAI,IAAMnI,EAAG,YAEvD,OAAO,MAAMA,EAAG,QAAQ,GACzB,KAAKmI,GAAQ,aAAa,MAAO,GAAGnI,EAAG,QAAQ,EAAE,EAEhD,KAAAkI,GAAU,aAAa,cAAe,OAAO,GAKhD,MAAAU,EAAW5I,EAAG,SAAWA,EAAG,YAAc,GAAK,IAAM,IAAMA,EAAG,SAAWA,EAAG,YAAc,EAC1FiH,EAAU,KAAKtF,GAAQ,QAAQ,EAAI3B,EAAG,YAAc4I,EACpDC,EAAM,WAAW,KAAKV,GAAQ,GAAG,EACjCW,EAAM,WAAW,KAAKX,GAAQ,GAAG,EAClC,KAAAA,GAAQ,MAAQlB,EAAQ,SAAS,EACjC,KAAAkB,GAAQ,MAAM,eAAiB,IAAKlB,EAAU4B,GAAO,KAAQC,EAAMD,EAAI,SAC5E,KAAKR,GAAQ,MACTrI,EAAG,UAAY,GAAK,OAAO,MAAMA,EAAG,QAAQ,GAAK,CAAC,OAAO,SAASA,EAAG,QAAQ,EACvE2I,EACC1B,EAAUjH,EAAG,SAAY,IAEhC,KAAK2B,GAAQ,WAAW,EAAE,aAAa,iBAAiB,GAAK,KAAK,MAAM,KAAK0G,GAAQ,KAAK,GAAK,KAC/FK,EAAkB1I,EAAG,YAChB,KAAAkI,GAAU,aAAa,cAAe,OAAO,EACtD,KAEA,CAAC,KAAKvG,GAAQ,WAAa,EAAA,aAAa,iBAAiB,GACzD,KAAKuG,GAAU,aAAa,aAAa,IAAM,SAC/C,CAAC,KAAKvG,GAAQ,WAAA,EAAa,MAAM,cAE5B,KAAAuG,GAAU,aAAa,cAAe,MAAM,CACrD,EAGC,KAAAnG,GAAQ,MAAM,eAAiB,IAAY,CACtC,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EAChCsF,EAAU,KAAKtF,GAAQ,UAAY3B,EAAG,YAAcA,EAAG,SAAWA,EAAG,YACtE,OAAO,MAAMA,EAAG,QAAQ,IACzB,KAAKmI,GAAQ,aAAa,MAAO,GAAGnI,EAAG,QAAQ,EAAE,EACjD,KAAKkI,GAAU,aAAa,gBAAiBlI,EAAG,SAAS,UAAU,GAEvE,KAAKqI,GAAQ,MACTrI,EAAG,UAAY,GAAK,OAAO,MAAMA,EAAG,QAAQ,GAAK,CAAC,OAAO,SAASA,EAAG,QAAQ,EACvE2I,EACC1B,EAAUjH,EAAG,SAAY,GAAA,EAGnC,KAAA+B,GAAQ,MAAM,MAAQ,IAAY,CAC9B,KAAAoG,GAAQ,MAAM,eAAiB,UAChC,KAAKA,GAAQ,aAAa,KAAK,GAC1B,KAAAA,GAAQ,aAAa,MAAO,GAAG,EAExC,KAAKC,GAAQ,MAAQ,EACrB,KAAKC,GAAQ,MAAQ,CAAA,EAGnB,MAAAU,EAAgB7F,GAAmB,CAC/B,MAAAlD,EAAK,KAAK2B,GAAQ,cAAc,EAChCkB,EAASK,EAAE,OACXlC,EAAQ,WAAW6B,EAAO,KAAK,EACrC,GACI,KAAKsF,GAAQ,UAAU,SAAS,sBAAsB,GACrDnH,EAAQhB,EAAG,aAAe,CAACwI,GAAU,aACrCxH,EAAQhB,EAAG,aAAe,CAACwI,GAAU,UACxC,CACE,KAAKL,GAAQ,MAAQnI,EAAG,YAAY,SAAS,EAC7C,MACJ,CACK,KAAAmI,GAAQ,UAAU,IAAI,uBAAuB,EAE5C,MAAAU,EAAM,WAAWhG,EAAO,GAAG,EAC3BiG,EAAM,WAAWjG,EAAO,GAAG,EAC3B5B,EAAM,WAAW4B,EAAO,KAAK,EAC9B,KAAAsF,GAAQ,MAAM,eAAiB,IAAKlH,EAAM4H,GAAO,KAAQC,EAAMD,EAAI,SACxE,KAAKR,GAAQ,MACTrI,EAAG,UAAY,GAAK,OAAO,MAAMA,EAAG,QAAQ,GAAK,CAAC,OAAO,SAASA,EAAG,QAAQ,EACvE2I,EACC1H,EAAMjB,EAAG,SAAY,IAE5B,KAAK2B,GAAQ,WAAa,EAAA,aAAa,iBAAiB,EACrD3B,EAAA,YAAc,KAAK,MAAM,KAAKqI,GAAQ,KAAK,GAAK,GAAKK,EAAkBzH,EAE1EjB,EAAG,YAAciB,EAGhB,KAAAkH,GAAQ,UAAU,OAAO,uBAAuB,CAAA,EAGnDa,EAAc9F,GAA2B,CACrC,MAAAlD,EAAK,KAAK2B,GAAQ,cAAc,EAChCqD,EAAM9B,EAAE,OAASA,EAAE,SAAW,EAC9BL,EAAS,KAAKsF,GACdnH,EAAQ,KAAK,MAAM,OAAO6B,EAAO,KAAK,CAAC,EACvCoE,EAAU,KAAK,MAAMjH,EAAG,WAAW,GAEpCgB,EAAQiG,GAAWuB,GAAU,aAAiBxH,GAASiG,GAAWuB,GAAU,aAG3CxD,IAAQ,GAAKA,IAAQ,IAAM,KAAKrD,GAAQ,QAAQ,GAAK,CAAC3B,EAAG,SAC3FA,EAAG,MAAM,EACT,KAAKuI,GAAc,GACvB,EAGEU,EAAe,IAAY,CACvB,MAAAjJ,EAAK,KAAK2B,GAAQ,cAAc,EAClC,KAAK4G,KAAgB,IAAQ,KAAK5G,GAAQ,WACtC3B,EAAG,SACHA,EAAG,KAAK,EACR,KAAKuI,GAAc,GAE3B,EAIEW,EAAoBhG,GAAwB,CACxC,MAAAlD,EAAK,KAAK2B,GAAQ,cAAc,EAClC,GAAA3B,EAAG,WAAa,IAAU,CACpB,KAAA,CAAE,eAAAmJ,CAAmB,EAAAjG,EAIrBkG,IAHID,EAAe,CAAC,GAAG,OAAS,GACtBpJ,EAAO,KAAKmI,EAAS,EAAE,MACd,KAAKA,GAAU,YACdlI,EAAG,UAGxBoJ,EAAOpJ,EAAG,aAAewI,GAAU,aACnCY,EAAOpJ,EAAG,aAAewI,GAAU,aAE/B,KAAAL,GAAQ,MAAQiB,EAAK,SAAS,EACnCL,EAAa7F,CAAC,EACTlD,EAAG,SACJA,EAAG,MAAM,EACT,KAAKuI,GAAc,IAG/B,CAAA,EAGJ,KAAKxG,GAAQ,OAAO,MAAQgH,EAAa,KAAK,IAAI,EAClD,KAAKhH,GAAQ,OAAO,OAASgH,EAAa,KAAK,IAAI,EACnD,KAAKhH,GAAQ,OAAO,UAAYiH,EAAW,KAAK,IAAI,EACpD,KAAKjH,GAAQ,OAAO,QAAUkH,EAAa,KAAK,IAAI,EACpD,KAAKlH,GAAQ,OAAO,WAAamH,EAAiB,KAAK,IAAI,EAC3D,KAAKnH,GAAQ,OAAO,SAAWkH,EAAa,KAAK,IAAI,EAEjD,CAACtK,GAAU,CAACC,IACZ,KAAKmD,GAAQ,UAAU,UAAamB,GAAwB,CAClD,MAAAlD,EAAK,KAAK2B,GAAQ,cAAc,EACtC,GAAI3B,EAAG,WAAa,KAAY,CAAC,KAAK2B,GAAQ,OAAQ,CAClD,MAAM0H,EAAInG,EAAE,MAEZ,IAAIoG,EAAMD,EAAItJ,EAAO,KAAKmI,EAAS,EAAE,KAC/B,MAAAqB,EAAO,KAAKjB,GAAS,YAAc,EACnCkB,EAAaF,EAAM,KAAKpB,GAAU,YAClCkB,EAAOI,EAAaxJ,EAAG,SACvByJ,EAAiB,KAAK9H,GAAQ,aAAa,EAC3C+H,EAAQD,EAAe,YAAc,KAAKnB,GAAS,YAErDgB,GAAO,GAAKD,EAAItJ,EAAO0J,CAAc,EAAE,MAAQF,EACzCD,EAAA,EACCD,EAAItJ,EAAO0J,CAAc,EAAE,MAAQC,EAC1CJ,EAAMI,EAAQ3J,EAAO,KAAKoI,EAAO,EAAE,KAAO,GAEnCmB,GAAAC,EAGPC,GAAc,GAAKA,GAAc,EAC5B,KAAAlB,GAAS,UAAU,IAAI,+BAA+B,EAEtD,KAAAA,GAAS,UAAU,OAAO,+BAA+B,EAGlE,KAAKA,GAAS,MAAM,KAAO,GAAGgB,CAAG,KAC5B,KAAAhB,GAAS,UAAY,OAAO,MAAMc,CAAI,EAAI,QAAU3B,EAAW2B,CAAI,CAC5E,CAAA,EAEJ,KAAKrH,GAAQ,OAAO,UAAamB,GAAwB,EACjD,CAAEA,EAAE,OAAuB,QAAQ,wBAAwB,GAAK,KAAKvB,GAAQ,SACxE,KAAA2G,GAAS,UAAU,OAAO,+BAA+B,CAClE,GAIR,OAAO,KAAK,KAAKvG,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAW,EAAE,iBAAiBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,EAAGjC,CAAa,CAAA,CAC7F,EAED,OAAO,KAAK,KAAKyC,GAAQ,MAAM,EAAE,QAASR,GAAU,CAC3C,KAAA4G,GAAQ,iBAAiB5G,EAAO,KAAKQ,GAAQ,OAAOR,CAAK,EAAGjC,CAAa,CAAA,CACjF,EAEI,KAAA4I,GAAU,iBAAiB,UAAW,KAAKvG,GAAQ,UAAU,EAAE,QAASrC,CAAa,EAC1F,KAAK4I,GAAU,iBAAiB,YAAa,KAAKnG,GAAQ,UAAU,UAAWzC,CAAa,EAC5F,SAAS,iBAAiB,YAAa,KAAKyC,GAAQ,OAAO,UAAWzC,CAAa,EACnF,KAAKqC,GAAQ,eAAe,iBAAiB,UAAW,KAAK,oBAAqBrC,CAAa,EAC1F,KAAAqC,GACA,cACA,aAAa,EACb,iBAAiB,kBAAmB,KAAKI,GAAQ,SAAS,gBAAiBzC,CAAa,EACxF,KAAAqC,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAAE,YAAY,KAAK6F,EAAS,CACtF,CAEA,SAAgB,CACZ,OAAO,KAAK,KAAKnG,EAAO,EAAE,QAASR,GAAU,CACpC,KAAAI,GAAQ,aAAa,oBAAoBJ,EAAO,KAAKQ,GAAQR,CAAK,CAAC,CAAA,CAC3E,EAED,OAAO,KAAK,KAAKQ,GAAQ,MAAM,EAAE,QAASR,GAAU,CAChD,KAAK4G,GAAQ,oBAAoB5G,EAAO,KAAKQ,GAAQ,OAAOR,CAAK,CAAC,CAAA,CACrE,EAED,KAAK2G,GAAU,oBAAoB,UAAW,KAAKvG,GAAQ,YAAY,OAAO,EAC9E,KAAKuG,GAAU,oBAAoB,YAAa,KAAKnG,GAAQ,UAAU,SAAS,EAEhF,SAAS,oBAAoB,YAAa,KAAKA,GAAQ,OAAO,SAAS,EAEvE,KAAKJ,GAAQ,aAAa,EAAE,oBAAoB,UAAW,KAAK,mBAAmB,EAC9E,KAAAA,GACA,YAAY,EACZ,aAAa,EACb,oBAAoB,kBAAmB,KAAKI,GAAQ,SAAS,eAAe,EAEjF,KAAKqG,GAAQ,SACb,KAAKC,GAAQ,SACb,KAAKF,GAAQ,SACT,CAACxJ,GAAU,CAACC,GACZ,KAAK0J,GAAS,SAElB,KAAKJ,GAAU,QACnB,CAEQ,oBAAoBhF,EAAwB,CAC1C,MAAAlD,EAAK,KAAK2B,GAAQ,cAAc,EAChCgI,EAAO,KAAKhI,GAAQ,KAAK,EACzBqD,EAAM9B,EAAE,OAASA,EAAE,SAAW,EAEhC,GAAA,CAACyG,GAAQ3E,GAAO,IAAMA,GAAO,IAAMhF,EAAG,WAAa,IAAU,CAC7D,IAAI4J,EAAO,EACX,QAASrJ,EAAI,GAAImJ,EAAQ,GAAInJ,GAAKmJ,EAAOnJ,IACjCA,EAAIyE,GACJ4E,IAGL5J,EAAA,YAAcA,EAAG,UAAY,GAAM4J,GACtC1G,EAAE,eAAe,EACjBA,EAAE,gBAAgB,CACtB,CACJ,CACJ,CCrbA,MAAM2G,CAAoC,CACtClI,GAEAmI,GAA4B,CAAA,EAE5BlI,GAEAE,GAEAC,GAAsB,CAClB,OAAQ,CAAC,EACT,MAAO,CAAC,CAAA,EAGZgI,GAAkB,GAElB3H,GAEAC,GAQA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,EACrB,KAAK,oBAAsB,KAAK,oBAAoB,KAAK,IAAI,CACjE,CAEA,QAAe,CACX,KAAM,CAAE,OAAAE,CAAW,EAAA,KAAKf,GAAQ,WAAW,EAEtC,KAAAC,GAAU,SAAS,cAAc,QAAQ,EAC9C,KAAKA,GAAQ,UAAY,qCAAqC,KAAKQ,EAAgB,GACnF,KAAKR,GAAQ,SAAW,EACnB,KAAAA,GAAQ,MAAQc,GAAQ,UAAY,GACzC,KAAKd,GAAQ,aAAa,gBAAiB,KAAKD,GAAQ,EAAE,EACrD,KAAAC,GAAQ,aAAa,eAAgB,OAAO,EACjD,KAAKA,GAAQ,aAAa,aAAcc,GAAQ,UAAY,EAAE,EAEzD,KAAAZ,GAAQ,SAAS,cAAc,KAAK,EACzC,KAAKA,GAAM,UAAY,cAClB,KAAAA,GAAM,aAAa,cAAe,MAAM,EAC7C,KAAKA,GAAM,UAAY,oDAEvB,KAAK,WAAa,IAAY,CACrB,KAAAF,GAAQ,aAAa,eAAgB,MAAM,EAChD,MAAMwB,EAAQ,KAAKzB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EAChE,QAAApB,EAAI,EAAGC,EAAQ4C,EAAM,OAAQ7C,EAAIC,EAAO,EAAED,EAC3C6C,EAAM7C,CAAC,IAAM,KAAKuB,IAClBsB,EAAM7C,CAAC,EAAE,aAAa,cAAe,MAAM,EAGnD,KAAKuB,GAAM,aACP,cACA,KAAKA,GAAM,aAAa,aAAa,IAAM,QAAU,OAAS,OAAA,CAClE,EAGJ,KAAK,UAAY,IAAY,CACrB,IAAAkI,EACAA,GAAW,OAAO,OAAW,KAC7B,OAAO,qBAAqBA,CAAO,EAGnC,OAAO,OAAW,MACRA,EAAA,OAAO,sBAAsB,IAAY,CAC1C,KAAAlI,GAAM,UAAY,KAAKiI,GACvB,KAAAjI,GAAM,aAAa,cAAe,MAAM,CAAA,CAChD,EACL,EAGC,KAAA,YAAe,GAAyB,CACzC,KAAM,CAAE,GAAAmI,EAAI,KAAAlD,GAAS,EAAE,OAClB,KAAA,WAAWkD,EAAIlD,CAAI,CAAA,EAG5B,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAE7C,KAAKhF,GAAQ,MAAM,eAAiB,KAAK,UAAU,KAAK,IAAI,EAC5D,KAAKA,GAAQ,MAAM,eAAiB,KAAK,YAAY,KAAK,IAAI,EAC9D,KAAKA,GAAQ,MAAM,KAAO,KAAK,UAAU,KAAK,IAAI,EAClD,KAAKA,GAAQ,MAAM,MAAQ,KAAK,UAAU,KAAK,IAAI,EAEnD,KAAKJ,GAAQ,eAAe,iBAAiB,UAAW,KAAK,oBAAqBrC,CAAa,EAE/F,KAAKyC,GAAQ,OAAO,MAAS,GAAmB,CACtC,KAAA,CAAE,OAAAc,CAAW,EAAA,EACboE,EAAUpE,EAChB,GAAIoE,GAAS,QAAQ,IAAI,KAAKtF,GAAQ,EAAE,EAAE,GAAKsF,GAAS,UAAU,SAAS,kBAAkB,EAAG,CAC5F,MAAML,EAAQK,GAAS,aAAa,YAAY,GAAK,GAChD,KAAAtF,GAAQ,SAAW,EAAA,aAAe,WAAWiF,EAAM,QAAQ,SAAU,EAAE,CAAC,CACjF,CAAA,EAEJ,KAAK7E,GAAQ,OAAO,OAAS,KAAK,UAAU,KAAK,IAAI,EAErD,KAAKH,GAAQ,iBAAiB,QAAS,KAAK,WAAYtC,CAAa,EACrE,OAAO,KAAK,KAAKyC,EAAO,EAAE,QAASR,GAAU,CACpC,KAAAI,GAAQ,WAAW,EAAE,iBAAiBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,EAAGjC,CAAa,CAAA,CAC7F,EACD,SAAS,iBAAiB,QAAS,KAAKyC,GAAQ,OAAO,MAAOzC,CAAa,EAC3E,SAAS,iBAAiB,UAAW,KAAKyC,GAAQ,OAAO,MAAOzC,CAAa,EACzE,OAAO,OAAW,KAClB,OAAO,iBAAiB,SAAU,KAAKyC,GAAQ,OAAO,OAAQzC,CAAa,EAG1E,KAAAqC,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAAE,YAAY,KAAKT,EAAO,EAChF,KAAKD,GAAQ,aAAA,EAAe,YAAY,KAAKG,EAAK,CACtD,CAEA,SAAgB,CACZ,KAAKF,GAAQ,oBAAoB,QAAS,KAAK,UAAU,EACzD,OAAO,KAAK,KAAKG,EAAO,EAAE,QAASR,GAAU,CACpC,KAAAI,GAAQ,WAAa,EAAA,oBAAoBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,CAAC,CAAA,CACjF,EACD,SAAS,oBAAoB,QAAS,KAAKQ,GAAQ,OAAO,KAAK,EAC/D,SAAS,oBAAoB,UAAW,KAAKA,GAAQ,OAAO,KAAK,EAC7D,OAAO,OAAW,KAClB,OAAO,oBAAoB,SAAU,KAAKA,GAAQ,OAAO,MAAM,EAE/D,KAAKA,GAAQ,OAAO,kBAAkB,IAAM,SAC5C,SAAS,oBAAoB,QAAS,KAAKA,GAAQ,OAAO,kBAAkB,CAAC,EAC7E,KAAKJ,GAAQ,WAAW,EAAE,oBAAoB,iBAAkB,KAAK,SAAS,GAGlF,KAAKA,GAAQ,aAAa,EAAE,oBAAoB,UAAW,KAAK,mBAAmB,EAEnF,KAAKG,GAAM,SACX,KAAKF,GAAQ,QACjB,CAEA,aAA4B,CAClB,MAAAwD,EAAQ,KAAKzD,GAAQ,SAAS,EAC9B,CAAE,OAAAe,CAAW,EAAA,KAAKf,GAAQ,WAAW,EAE3C,IAAIuI,EAAO,EACP,OAAA,KAAKvI,IAAWyD,IAChB8E,EAAO9E,EAAM,sBAAwBA,EAAM,aAAeA,EAAM,aAAeA,EAAM,qBAElF,CACH,UAAW,mBACX,QAAS8E,EAAK,SAAS,EACvB,IAAK,QACL,KAAMxH,GAAQ,OAAS,GACvB,SAAU,CACN,CAAE,IAAK,OAAQ,MAAO,MAAO,EAC7B,CAAE,IAAK,MAAO,MAAO,KAAM,EAC3B,CAAE,IAAK,OAAQ,MAAO,MAAO,EAC7B,CAAE,IAAK,IAAK,MAAOA,GAAQ,aAAe,EAAG,EAC7C,CAAE,IAAK,OAAQ,MAAO,MAAO,EAC7B,CAAE,IAAK,MAAO,MAAO,KAAM,EAC3B,CAAE,IAAK,IAAK,MAAO,GAAI,CAC3B,CAAA,CAER,CAEA,QAAQ3B,EAAciE,EAAamF,EAAsBC,EAA6BhD,EAA0B,CAE5G,MAAMiD,EAAY,GAAGrF,CAAG,IAAI9E,EAASiK,EAAc,EAAI,CAAC,GAClD9G,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,UAAY,yBACrBA,EAAS,SAAW,EACXA,EAAA,aAAa,OAAQ,eAAe,EAC7CA,EAAS,UAAY,oDAAoDgH,CAAS,KAAKtJ,CAAI,SAErF,MAAAuJ,EAAeF,EAAUA,EAAQ,KAAMf,GAAMA,EAAE,MAAQc,CAAY,EAAI,KACzEG,IACSjH,EAAA,WAAa,uDAAuDiH,EAAa,KAAK,UAGnG,MAAMC,EAAW,KAAKzI,GAAM,cAAc,oBAAoB,EAO9D,GANIyI,GACAA,EAAS,YAAYlH,CAAQ,EAE5B,KAAA0G,GAAkB,KAAKjI,GAAM,UAG9BsI,EAAS,CACT,MAAMI,EAAW;AAAA;AAAA,mFAEsDzJ,CAAI;AAAA;AAAA,2EAEZiE,CAAG;AAAA,sBACxDoF,EACG,IACIpH,GAA0B;AAAA,gGAE/BmH,IAAiBnH,EAAK,IAAM,OAAS,OACzC;AAAA,iEAC6CoE,GAAa,EAAE,8BAA8BpC,CAAG,IACjFhC,EAAK,GACT;AAAA,8BACEA,EAAK,KAAK;AAAA;AAAA,2BAAA,EAIf,KAAK,EAAE,CAAC;AAAA,wBAEhB,KAAA8G,GAAS9E,CAAG,EAAIwF,CACzB,CAEA,KAAKzI,GAAQ,OAAO,kBAAkB,EAAKmB,GAAmB,CAC1D,MAAML,EAASK,EAAE,OACjB,GAAIL,EAAO,QAAQ,IAAI,KAAKlB,GAAQ,EAAE,EAAE,GACpC,GAAIkB,EAAO,UAAU,SAAS,mBAAmB,EACxC,KAAAf,GAAM,UAAU,IAAI,sBAAsB,EAC/C,WAAW,IAAY,CACd,KAAAA,GAAM,UAAY,KAAKiI,GACvB,KAAAjI,GAAM,UAAU,OAAO,sBAAsB,GACnD,GAAG,UACCe,EAAO,UAAU,SAAS,2BAA2B,EAAG,CAC/D,MAAM4H,EAAU5H,EAAO,cACjBA,EAAO,cAAc,cAAc,0BAA0B,EAC7D,KACAI,EAAQwH,EAAUA,EAAQ,aAAa,YAAY,EAAI,KACvDC,EAAYzH,EAAQA,EAAM,MAAM,GAAG,EAAI,GACzC,GAAAyH,EAAU,OAAS,EAAG,CACtBA,EAAU,IAAI,EAGd,MAAMzD,EAAUyD,EAAU,KAAK,GAAG,EAAE,QAAQ,UAAW,EAAE,EACrD,OAAO,KAAKZ,GAAS7C,CAAO,EAAM,MAC7B,KAAAnF,GAAM,UAAU,IAAI,sBAAsB,EAC/C,WAAW,IAAY,CACnB,KAAKA,GAAM,UAAY,KAAKgI,GAAS7C,CAAO,EACvC,KAAAnF,GAAM,UAAU,OAAO,sBAAsB,GACnD,GAAG,EAEd,CACO,SAAAe,EAAO,UAAU,SAAS,4BAA4B,EAAG,CAC1D,MAAAoE,EAAUpE,EAAO,aAAa,YAAY,EAC1C7B,EAAQiG,EAAUA,EAAQ,QAAQ,GAAGjC,CAAG,IAAK,EAAE,EAAI,GACnD/B,EAAQJ,EAAO,UAGf8H,EAAa,KAAK7I,GAAM,cAC1B,cAAckD,CAAG,gDAAA,EAEjB2F,IACWA,EAAA,aAAa,eAAgB,OAAO,EAC3C9H,EAAO,eACAA,EAAA,cAAc,aAAa,eAAgB,MAAM,EAE5D,KAAKiH,GAAS9E,CAAG,EAAI,KAAKlD,GAAM,UAG3B,KAAAA,GAAM,UAAU,IAAI,sBAAsB,EAC/C,WAAW,IAAY,CACd,KAAAA,GAAM,UAAY,KAAKiI,GACtB,MAAAa,EAAO,KAAK9I,GAAM,cACpB,wCAAwCkD,CAAG,IAAImF,CAAY,IAAA,EAE3DS,IACAA,EAAK,aAAa,aAAc,GAAG3D,CAAO,EAAE,EACxC2D,EAAK,qBACLA,EAAK,mBAAmB,YAAc3H,IAG/BkH,EAAAnJ,EACV,KAAA+I,GAAkB,KAAKjI,GAAM,UAC7B,KAAAA,GAAM,UAAU,OAAO,sBAAsB,GACnD,GAAG,EAEd,OAEA,KAAK,UAAU,CACnB,EAGJ,SAAS,iBAAiB,QAAS,KAAKC,GAAQ,OAAO,kBAAkB,EAAGzC,CAAa,EACzF,KAAKqC,GAAQ,aAAa,iBAAiB,iBAAkB,KAAK,UAAWrC,CAAa,CAC9F,CAEA,WAAW2K,EAAqBlD,EAAc8D,EAAW,EAAS,CACxD,MAAAhI,EAAS,KAAKlB,GAAQ,WAAW,EAAE,cAAc,0CAA0CoF,CAAI,IAAIkD,CAAE,GAAG,EAM1G,GALApH,GACAA,EAAO,OAAO,EAId,KAAKlB,GAAQ,WAAA,EAAa,iBAAiB,2CAA2CoF,CAAI,GAAG,EAAE,OAC/F8D,EACF,CACS,OAAA,KAAKf,GAAS/C,CAAI,EACnB,MAAA9D,EAAQ,KAAKtB,GAAQ,aAAa,cAAc,wCAAwCoF,CAAI,GAAG,EAC/F1D,EAAWJ,EAAQA,EAAM,QAAQ,yBAAyB,EAAI,KAChEI,GACAA,EAAS,OAAO,CAExB,CACJ,CAEQ,oBAAoBH,EAAwB,CAChD,MAAM8B,EAAM9B,EAAE,OAASA,EAAE,SAAW,EAC9ByG,EAAO,KAAKhI,GAAQ,KAAK,EACzBmJ,EAAqB,UAAU,eAAe,UAAU,SAAS,uBAAuB,EAExFC,EACF,UAAU,eAAe,UAAU,SAAS,2BAA2B,GACvE,UAAU,eAAe,UAAU,SAAS,mBAAmB,GAC/D,UAAU,eAAe,UAAU,SAAS,4BAA4B,EACvEpB,IACGmB,IAAuB9F,IAAQ,IAAMA,IAAQ,KAC7C,KAAK,WAAW,EAChB9B,EAAE,eAAe,EACjBA,EAAE,gBAAgB,GACX6H,IAAgB/F,IAAQ,IAAMA,IAAQ,MAC7C,KAAKjD,GAAQ,OAAO,kBAAkB,EAAEmB,CAAC,EACzCA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,GAG9B,CACJ,CChUA,MAAM8H,EAAgC,CAClCrJ,GAEAsJ,GAEAC,GAEAC,GAEAC,GAEArJ,GAAsB,CAClB,SAAU,CAAC,EACX,MAAO,CAAC,CAAA,EAGZK,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKF,GAAmBG,EACxB,KAAKF,GAAgBG,CACzB,CAEA,QAAe,CACX,KAAM,CAAE,OAAAE,EAAQ,SAAA8F,CAAA,EAAa,KAAK7G,GAAQ,aAErC,KAAAsJ,GAAe,SAAS,cAAc,MAAM,EACjD,KAAKA,GAAa,UAAY,uBACzB,KAAAA,GAAa,aAAa,OAAQ,OAAO,EACzC,KAAAA,GAAa,aAAa,YAAa,KAAK,EAC5C,KAAAA,GAAa,aAAa,cAAe,OAAO,EACrD,KAAKA,GAAa,UAAY,OAExB,MAAAI,EAAkB7C,GAAU,qBAAuB,GAEpD6C,IACI,KAAAH,GAAa,SAAS,cAAc,MAAM,EAC/C,KAAKA,GAAW,UAAY,8BACvB,KAAAA,GAAW,aAAa,cAAe,OAAO,EACnD,KAAKA,GAAW,UAAY,IAEvB,KAAAC,GAAY,SAAS,cAAc,MAAM,EAC9C,KAAKA,GAAU,UAAY,wBACtB,KAAAA,GAAU,aAAa,cAAe,OAAO,EAClD,KAAKA,GAAU,UAAY1D,EAAWe,GAAU,UAAY,CAAC,GAGjE,MAAM8C,EAAW,KAAK3J,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAClE,KAAA+I,GAAa,SAAS,cAAc,MAAM,EAC/C,KAAKA,GAAW,UAAY,gCAAgC,KAAKhJ,EAAgB,GAC5E,KAAAgJ,GAAW,YAAY,KAAKH,EAAY,EACxCI,IACI,KAAAD,GAAW,YAAY,KAAKF,EAAU,EACtC,KAAAE,GAAW,YAAY,KAAKD,EAAS,GAErCG,EAAA,YAAY,KAAKF,EAAU,EAEpC,MAAMG,EAAiB,IAAY,CACzB,MAAAvL,EAAK,KAAK2B,GAAQ,cAAc,EAClC,GAAA3B,EAAG,WAAa,KAAY,CAAC,KAAK2B,GAAQ,WAAW,EAAE,aAAa,kBAAkB,EAAG,CACzF,GAAI,CAAC0J,EAAiB,CAClB,MAAMzC,EAAY,OAAO,MAAM5I,EAAG,QAAQ,EAEpC,KAAK2B,GAAQ,WAAW,EAAE,UAAU,UAAY,EADhD3B,EAAG,SAEJ,KAAAmL,GAAU,UAAY1D,EAAWmB,CAAQ,CAClD,CACA,KAAKqC,GAAa,UAAYxD,EAAWzH,EAAG,WAAW,CAAA,MAC/CqL,IACH,KAAAF,GAAU,aAAa,cAAe,MAAM,EAC5C,KAAAD,GAAW,aAAa,cAAe,MAAM,EACtD,EAGJ,KAAKnJ,GAAQ,MAAM,eAAiBwJ,EAAe,KAAK,IAAI,EAC5D,KAAKxJ,GAAQ,SAAS,gBAAkBwJ,EAAe,KAAK,IAAI,EAE1D,KAAA,CAAE,UAAWC,GAAkB,KAAK7J,GAAQ,WAAA,EAAa,MAAQ,GAElE,KAAAI,GAAQ,MAAM,WAAa,IAAY,CAClC,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EACtC,GACI3B,EAAG,WAAa,KAChB,CAAC,KAAK2B,GAAQ,aAAa,aAAa,kBAAkB,GAC1D,CAAC,KAAKA,GAAQ,aAAa,aAAa,iBAAiB,EAC3D,CACQ,MAAAiH,EAAWnB,EAAWzH,EAAG,QAAQ,EACnC,CAACqL,GAAmB,CAAC,OAAO,MAAMrL,EAAG,QAAQ,GAAK4I,IAAa,KAAKuC,GAAU,WAC9E,KAAKA,GAAU,UAAYvC,EACtB,KAAAuC,GAAU,aAAa,cAAe,OAAO,EAC7C,KAAAD,GAAW,aAAa,cAAe,OAAO,IAC5CG,GAAmBzC,IAAa,KAAKuC,GAAU,aACjD,KAAAF,GAAa,UAAYO,EAAgB9I,GAAQ,MAAQ,GAAK+E,EAAWzH,EAAG,WAAW,GAEhG,KAAKiL,GAAa,UAAYxD,EAAWzH,EAAG,WAAW,CAAA,MAChD,KAAK2B,GAAQ,aAAa,aAAa,iBAAiB,GAC1D0J,IACI,KAAAF,GAAU,aAAa,cAAe,MAAM,EAC5C,KAAAD,GAAW,aAAa,cAAe,MAAM,GAEtD,KAAKD,GAAa,UAAYxD,EAAWzH,EAAG,WAAW,GAEvDqL,GACC,CAAC,KAAK1J,GAAQ,WAAW,EAAE,aAAa,iBAAiB,GACtD,KAAKwJ,GAAU,aAAa,aAAa,IAAM,SAE9CE,IACI,KAAAF,GAAU,aAAa,cAAe,MAAM,EAC5C,KAAAD,GAAW,aAAa,cAAe,MAAM,GAEjD,KAAAD,GAAa,UAAYO,EAAgB9I,GAAQ,MAAQ,GAAK+E,EAAWzH,EAAG,WAAW,GAEvF,KAAAiL,GAAa,UAAYO,EAAgB9I,GAAQ,MAAQ,GAAK+E,EAAWzH,EAAG,WAAW,CAChG,EAEC,KAAA+B,GAAQ,MAAM,MAAQ,IAAY,CAC7B,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EAChCiH,EAAY,OAAO,MAAM5I,EAAG,QAAQ,EAEpC,KAAK2B,GAAQ,WAAW,EAAE,UAAU,UAAY,EADhD3B,EAAG,SAEL,CAACqL,GAAmB,KAAK1J,GAAQ,YAC5B,KAAAwJ,GAAU,UAAY1D,EAAWmB,CAAQ,EAClD,EAGJ,OAAO,KAAK,KAAK7G,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAW,EAAE,iBAAiBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,EAAGjC,CAAa,CAAA,CAC7F,EAEI,KAAAqC,GACA,cACA,aAAa,EACb,iBAAiB,kBAAmB,KAAKI,GAAQ,SAAS,gBAAiBzC,CAAa,CACjG,CAEA,SAAgB,CACZ,OAAO,KAAK,KAAKyC,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAa,EAAA,oBAAoBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,CAAC,CAAA,CACjF,EAEI,KAAAI,GACA,YAAY,EACZ,aAAa,EACb,oBAAoB,kBAAmB,KAAKI,GAAQ,SAAS,eAAe,EAEjF,KAAKkJ,GAAa,SACZ,KAAA,CAAE,oBAAAQ,GAAwB,KAAK9J,GAAQ,WAAW,EAAE,UAAY,GACjE8J,IACD,KAAKP,GAAW,SAChB,KAAKC,GAAU,UAEnB,KAAKC,GAAW,QACpB,CACJ,CC3JA,MAAMM,EAAkC,CACpC/J,GAEAC,GAEAwJ,GAEAO,GAEAxD,GAEApG,GAAsB,CAClB,OAAQ,CAAC,EACT,MAAO,CAAC,EACR,OAAQ,CAAC,CAAA,EAGb6J,GAEAxJ,GAEAC,GAEA,YAAYC,EAAgBC,EAAkBC,EAAe,CACzD,KAAKb,GAAUW,EACf,KAAKsJ,GAAU,KAAKjK,GAAQ,SAAA,EAAW,OACvC,KAAKS,GAAmBG,EACxB,KAAKF,GAAgBG,EACrB,KAAK,oBAAsB,KAAK,oBAAoB,KAAK,IAAI,CACjE,CAEA,QAAe,CACX,KAAM,CAAE,OAAAE,CAAW,EAAA,KAAKf,GAAQ,WAAW,EAEtC,KAAAyJ,GAAa,SAAS,cAAc,KAAK,EAC9C,KAAKA,GAAW,UAAY,mCAAmC,KAAKhJ,EAAgB,GACpF,KAAKgJ,GAAW,SAAW,EACtB,KAAAA,GAAW,aAAa,gBAAiB,GAAG,EAC5C,KAAAA,GAAW,aAAa,gBAAiB,KAAK,EACnD,KAAKA,GAAW,aAAa,gBAAiB,GAAG,KAAKQ,EAAO,EAAE,EAC1D,KAAAR,GAAW,aAAa,iBAAkB,GAAG1I,GAAQ,QAAU,EAAE,KAAK,KAAKkJ,EAAO,EAAE,EACpF,KAAAR,GAAW,aAAa,mBAAoB,UAAU,EAC3D,KAAKA,GAAW,aAAa,aAAc1I,GAAQ,cAAgB,EAAE,EAChE,KAAA0I,GAAW,aAAa,OAAQ,QAAQ,EAExC,KAAAjD,GAAU,SAAS,cAAc,OAAO,EAC7C,KAAKA,GAAQ,KAAO,QACpB,KAAKA,GAAQ,UAAY,6BACzB,KAAKA,GAAQ,SAAW,GACxB,KAAKA,GAAQ,MAAQ,KAAKxG,GAAQ,SAAS,EAAE,OAAO,WAC/C,KAAAwG,GAAQ,aAAa,MAAO,GAAG,EAC/B,KAAAA,GAAQ,aAAa,MAAO,GAAG,EAC/B,KAAAA,GAAQ,aAAa,OAAQ,KAAK,EACvC,KAAKA,GAAQ,aAAa,aAAczF,GAAQ,eAAiB,EAAE,EAE9D,KAAAiJ,GAAW,SAAS,cAAc,UAAU,EACjD,KAAKA,GAAS,UAAY,+BACrB,KAAAA,GAAS,aAAa,MAAO,IAAI,EACtC,KAAKA,GAAS,MAAQ,KAAKhK,GAAQ,WAAW,OAAS,GAElD,KAAAyJ,GAAW,YAAY,KAAKjD,EAAO,EACnC,KAAAiD,GAAW,YAAY,KAAKO,EAAQ,EAGpC,KAAA/J,GAAU,SAAS,cAAc,QAAQ,EAC9C,KAAKA,GAAQ,KAAO,SACpB,KAAKA,GAAQ,UAAY,iCAAiC,KAAKQ,EAAgB,GAC/E,KAAKR,GAAQ,SAAW,EACnB,KAAAA,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,gBAAiB,KAAKD,GAAQ,EAAE,EACrD,KAAAC,GAAQ,aAAa,eAAgB,OAAO,EACjD,KAAKA,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,EAGpD,MAAAqG,EAAgBvJ,GAAuB,CACnC,MAAAqM,EAAcrM,EAAQ,OAAS,EAC/BsM,EAAM,KAAK,MAAMD,EAAc,GAAG,EAExC,KAAK1D,GAAQ,MAAQ,GAAG3I,EAAQ,MAAM,GACjC,KAAAmM,GAAS,MAAQE,EAAc,GACpC,KAAKT,GAAW,aAAa,gBAAiB,GAAGU,CAAG,EAAE,EACjD,KAAAV,GAAW,aAAa,iBAAkB,GAAG1I,GAAQ,MAAM,KAAKoJ,CAAG,EAAE,CAAA,EAIxEC,EAAgBvM,GAAuB,CACzC,MAAMsM,EAAMtM,EAAQ,OAChBsM,GAAO,IAAOA,EAAM,GACf,KAAAlK,GAAQ,UAAU,OAAO,0BAA0B,EACnD,KAAAA,GAAQ,UAAU,IAAI,yBAAyB,GAC7CkK,IAAQ,GACV,KAAAlK,GAAQ,UAAU,IAAI,0BAA0B,EAChD,KAAAA,GAAQ,UAAU,OAAO,yBAAyB,IAElD,KAAAA,GAAQ,UAAU,OAAO,0BAA0B,EACnD,KAAAA,GAAQ,UAAU,OAAO,yBAAyB,EAC3D,EAGEoK,EAAgBzK,GAAuB,CACnC,MAAAvB,EAAK,KAAK2B,GAAQ,cAAc,EAChCX,EAAQ,WAAYO,EAAM,OAA4B,KAAK,EACjEvB,EAAG,OAASgB,EACThB,EAAA,MAAQA,EAAG,SAAW,EACzB,KAAK4L,GAAU5K,EACf,MAAMiL,EAAW,KAAKtK,GAAQ,aAAa,EAAE,cAAc,oBAAoB,EAC3E,CAAC3B,EAAG,OAASiM,GACbA,EAAS,OAAO,EAEd,MAAA/I,EAAI5B,EAAS,cAAc,EACjC,KAAKK,GAAQ,WAAa,EAAA,cAAcuB,CAAC,CAAA,EAgDxC,GA7CA,KAAAnB,GAAQ,MAAM,aAAe,IAAY,CACpC,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EACtCoH,EAAa/I,CAAE,EACf+L,EAAa/L,CAAE,CAAA,EAEd,KAAA+B,GAAQ,MAAM,eAAiB,IAAY,CACtC,MAAA/B,EAAK,KAAK2B,GAAQ,cAAc,EAClC3B,EAAG,QACHA,EAAG,OAAS,GAEV,MAAAkD,EAAI5B,EAAS,cAAc,EACjC,KAAKK,GAAQ,WAAa,EAAA,cAAcuB,CAAC,CAAA,EAE7C,KAAKnB,GAAQ,OAAO,MAAQiK,EAAa,KAAK,IAAI,EAClD,KAAKjK,GAAQ,OAAO,OAASiK,EAAa,KAAK,IAAI,EAE9C,KAAAjK,GAAQ,OAAO,MAAQ,IAAY,CAC/B,KAAAH,GAAQ,aAAa,eAAgB,MAAM,EAC1C,MAAA5B,EAAK,KAAK2B,GAAQ,cAAc,EACnC3B,EAAA,MAAQ,CAACA,EAAG,MAEXA,EAAG,OACHA,EAAG,OAAS,EACP,KAAA4B,GAAQ,MAAQc,GAAQ,QAAU,GACvC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,QAAU,EAAE,IAE5D1C,EAAG,OAAS,KAAK4L,GACZ,KAAAhK,GAAQ,MAAQc,GAAQ,MAAQ,GACrC,KAAKd,GAAQ,aAAa,aAAcc,GAAQ,MAAQ,EAAE,GAExD,MAAAnB,EAAQD,EAAS,cAAc,EACrC,KAAKK,GAAQ,WAAa,EAAA,cAAcJ,CAAK,CAAA,EAGjD,KAAKK,GAAQ,iBAAiB,QAAS,KAAKG,GAAQ,OAAO,MAAOzC,CAAa,EAC/E,OAAO,KAAK,KAAKyC,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAW,EAAE,iBAAiBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,EAAGjC,CAAa,CAAA,CAC7F,EAED,OAAO,KAAK,KAAKyC,GAAQ,MAAM,EAAE,QAASR,GAAU,CAC3C,KAAA4G,GAAQ,iBAAiB5G,EAAO,KAAKQ,GAAQ,OAAOR,CAAK,EAAGjC,CAAa,CAAA,CACjF,EAED,KAAKqC,GAAQ,eAAe,iBAAiB,UAAW,KAAK,oBAAqBrC,CAAa,EAE1F,CAACV,GAAc,CAACD,GAAW,CAAC,KAAKgD,GAAQ,WAAW,EAAE,gBAAiB,CACxE,MAAM2J,EAAW,KAAK3J,GAAQ,YAAc,EAAA,SAAS,KAAKU,EAAa,EAC9DiJ,EAAA,YAAY,KAAK1J,EAAO,EACxB0J,EAAA,YAAY,KAAKF,EAAU,CACxC,CACJ,CAEA,SAAgB,CACZ,KAAKxJ,GAAQ,oBAAoB,QAAS,KAAKG,GAAQ,OAAO,KAAK,EACnE,OAAO,KAAK,KAAKA,GAAQ,KAAK,EAAE,QAASR,GAAU,CAC1C,KAAAI,GAAQ,WAAa,EAAA,oBAAoBJ,EAAO,KAAKQ,GAAQ,MAAMR,CAAK,CAAC,CAAA,CACjF,EAED,OAAO,KAAK,KAAKQ,GAAQ,MAAM,EAAE,QAASR,GAAU,CAChD,KAAK4G,GAAQ,oBAAoB5G,EAAO,KAAKQ,GAAQ,OAAOR,CAAK,CAAC,CAAA,CACrE,EAED,KAAKI,GAAQ,aAAa,EAAE,oBAAoB,UAAW,KAAK,mBAAmB,EAEnF,KAAKwG,GAAQ,SACb,KAAKwD,GAAS,SACd,KAAKP,GAAW,QACpB,CAEQ,oBAAoBlI,EAAwB,CAChD,MAAM8B,EAAM9B,EAAE,OAASA,EAAE,SAAW,EAC9BlD,EAAK,KAAK2B,GAAQ,cAAc,EACf,UAAU,eAAe,UAAU,SAAS,mBAAmB,IAE/DqD,IAAQ,IAAMA,IAAQ,MACtChF,EAAA,MAAQ,CAACA,EAAG,MACfA,EAAG,OAASA,EAAG,MAAQ,EAAI,KAAK4L,GAC3B,KAAA7J,GAAQ,OAAO,QACpBmB,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAE1B,CACJ,CC3LA,MAAMgJ,EAAoC,CA6BtC,YAAY5J,EAAgB,CA5BP,KAAA,OAAA,CACjB,MAAO,CAAC,EACR,MAAO,CAAC,CAAA,EAKH,KAAA6J,GAAA,EAUU,KAAAC,GAAA,CACf,SAAA1K,EACA,WAAAuC,EACA,OAAA8B,GACA,KAAAuB,GACA,SAAAW,GACA,SAAA4B,EACA,KAAAmB,GACA,OAAAU,EAAA,EAIA,KAAK/J,GAAUW,EACf,KAAK,aAAa,CACtB,CA1BA+J,GAEAF,GAEAG,GAEA3K,GAGA4K,GAGAH,GAgBA,QAAe,CACN,KAAAzK,GAAQ,aAAa,SAAW,GAErC,MAAM6K,EAAejN,EAAQ,KAAKoC,GAAQ,WAAY,CAAA,EAEtD,KAAK,qBAAqB,EAC1B,KAAK,eAAe,EAEf,KAAA,OAAO,gBAAkB,IAAY,CACtC,KAAK,QAAQ,EACb,KAAK,aAAa,EAClB,KAAK,OAAO,CAAA,EAGX,KAAA,OAAO,MAAQ,IAAY,CAC5B,KAAKA,GAAQ,aAAA,EAAe,UAAU,OAAO,qBAAqB,CAAA,EAGjE,KAAAA,GAAQ,aAAa,iBAAiB,kBAAmB,KAAK,OAAO,gBAAiBrC,CAAa,EACnG,KAAAqC,GAAQ,aAAa,iBAAiB,QAAS,KAAK,OAAO,MAAOrC,CAAa,EAE9E,KAAA,CAAE,cAAAmN,GAAkB,KAAK9K,GAAQ,WAAW,EAAE,UAAY,GAEhE,GAAI,CAAC8K,EAAe,CAChB,MAAMC,EAAe,IAAY,CACzBF,IACA,KAAK7K,GAAQ,aAAA,EAAe,UAAU,OAAO,qBAAqB,EAClE,KAAK,kBAAkB,EAC3B,EAGC,KAAA,OAAO,MAAM,WAAa,IAAY,CACnC6K,GAAgB,CAAC,KAAK7K,GAAQ,cAAA,EAAgB,SAC9C,KAAK,kBAAkB,EACnB,KAAKA,GAAQ,cAAc,EAAE,aACxB,KAAAA,GAAQ,QAAQ,aAAa,cAAe,KAAKA,GAAQ,QAAA,EAAY,QAAU,MAAM,EAC1F,KAAKA,GAAQ,OAAO,aAAa,cAAe,MAAM,GAC/C,KAAKA,GAAQ,WAAA,EAAa,mBACjC,KAAKA,GAAQ,QAAQ,aAAa,cAAe,MAAM,EACvD,KAAKA,GAAQ,OAAO,aAAa,cAAe,OAAO,GAE3D,KAAKA,GAAQ,aAAA,EAAe,UAAU,OAAO,qBAAqB,EAClE,KAAK,mBAAmB,IAAI,EAChC,EAEC,KAAA,OAAO,MAAM,UAAY,IAAY,CAClC6K,GAAgB,CAAC,KAAK7K,GAAQ,cAAA,EAAgB,SAC1C,KAAKA,GAAQ,cAAc,EAAE,aAC7B,KAAKA,GAAQ,OAAO,aAAa,cAAe,MAAM,EACjD,KAAAA,GAAQ,QAAQ,aAAa,cAAe,KAAKA,GAAQ,QAAA,EAAY,QAAU,MAAM,IAE1F,KAAKA,GAAQ,QAAQ,aACjB,cACA,KAAKA,GAAQ,WAAW,EAAE,iBAAmB,OAAS,OAAA,EAE1D,KAAKA,GAAQ,OAAO,aAChB,cACA,KAAKA,GAAQ,WAAW,EAAE,iBAAmB,QAAU,MAAA,GAI/D,KAAKA,GAAQ,aAAA,EAAe,UAAU,OAAO,qBAAqB,EAClE,KAAK,mBAAmB,IAAI,EAChC,EAEC,KAAA,OAAO,MAAM,WAAa,IAAY,CACnC6K,GAAgB,CAAC,KAAK7K,GAAQ,cAAA,EAAgB,QAC9C,KAAK,mBAAmB,GAAI,CAChC,EAEC,KAAA,OAAO,MAAM,KAAO,IAAY,CAC7B6K,GACA,KAAK,mBAAmB,KAAK7K,GAAQ,aAAa,kBAAoB,GAAG,CAC7E,EAEJ,KAAK,OAAO,MAAM,eAAiB+K,EAAa,KAAK,IAAI,EACzD,KAAK,OAAO,MAAM,MAAQA,EAAa,KAAK,IAAI,EAChD,KAAK,OAAO,MAAM,QAAUA,EAAa,KAAK,IAAI,EAClD,KAAK,OAAO,MAAM,QAAUA,EAAa,KAAK,IAAI,EAClD,KAAK,OAAO,MAAM,YAAcA,EAAa,KAAK,IAAI,EAEtD,OAAO,KAAK,KAAK,OAAO,KAAK,EAAE,QAASnL,GAAU,CACzC,KAAAI,GAAQ,WAAW,EAAE,iBAAiBJ,EAAO,KAAK,OAAO,MAAMA,CAAK,EAAGjC,CAAa,CAAA,CAC5F,EAEGV,GAAcD,EACT,KAAAgD,GAAQ,aAAe,EAAA,iBAAiB,QAAS,KAAK,OAAO,MAAM,WAAYrC,CAAa,EAEjG,OAAO,KAAK,KAAK,OAAO,KAAK,EAAE,QAASiC,GAAU,CACzC,KAAAI,GAAQ,aAAa,EAAE,iBAAiBJ,EAAO,KAAK,OAAO,MAAMA,CAAK,EAAGjC,CAAa,CAAA,CAC9F,EAIDkN,GAAgB,CAAC,KAAK7K,GAAQ,cAAA,EAAgB,QAC9C,KAAK,mBAAmB,GAAI,CAEpC,CACJ,CAEA,SAAgB,CACR,CAAC/C,GAAc,CAACD,IAChB,OAAO,KAAK,KAAK,OAAO,KAAK,EAAE,QAAS4C,GAAU,CACzC,KAAAI,GAAQ,aAAe,EAAA,oBAAoBJ,EAAO,KAAK,OAAO,MAAMA,CAAK,CAAC,CAAA,CAClF,EAED,OAAO,KAAK,KAAK,OAAO,KAAK,EAAE,QAASA,GAAU,CACzC,KAAAI,GAAQ,WAAa,EAAA,oBAAoBJ,EAAO,KAAK,OAAO,MAAMA,CAAK,CAAC,CAAA,CAChF,EAED,KAAK,kBAAkB,GAG3B,KAAKI,GAAQ,aAAa,oBAAoB,kBAAmB,KAAK,OAAO,eAAe,EAC5F,KAAKA,GAAQ,aAAa,oBAAoB,QAAS,KAAK,OAAO,KAAK,EAExE,OAAO,KAAK,KAAK4K,EAAM,EAAE,QAAShK,GAAqB,CACnD,KAAKgK,GAAOhK,CAAQ,EAAE,QAASS,GAAkB,CACxCA,EAAqB,OACtB,KAAK,sBAAsBA,CAAmB,EACvC,OAAQA,EAAyB,SAAY,YACnDA,EAAyB,QAAQ,CACtC,CACH,CAAA,CACJ,EAED,KAAKsJ,GAAU,QACnB,CAEA,cAA+B,CAC3B,OAAO,KAAKA,EAChB,CAEA,SAAS9J,EAA+B,CACpC,OAAO,KAAK8J,GAAU,cAAc,uBAAuB9J,CAAK,EAAE,GAAK,KAAK8J,EAChF,CAEQ,sBAA6B,CAC7B,GAAA,CAAC,KAAKA,IAAa,CAAC,KAAK3K,GAAQ,aAAa,EAAE,cAAc,cAAc,EAAG,CAC1E,KAAA2K,GAAY,SAAS,cAAc,KAAK,EAC7C,KAAKA,GAAU,UAAY,cAC3B,KAAK3K,GAAQ,aAAA,EAAe,YAAY,KAAK2K,EAAS,EAEhD,MAAAK,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAY,YAC7BA,EAAiB,UAAY,gBAC7BA,EAAiB,SAAW,GACXA,EAAA,aAAa,cAAe,MAAM,EAE/ClN,EAAQ,KAAKkC,GAAQ,WAAY,CAAA,GAC5B,KAAA2K,GAAU,YAAYK,CAAgB,CAEnD,CACJ,CAEQ,mBAAmBvD,EAAoB,CACrC,MAAApJ,EAAK,KAAK2B,GAAQ,cAAc,EACtC,KAAK,kBAAkB,EAEnB,OAAO,OAAW,MACb,KAAAwK,GAAS,OAAO,WAAW,IAAM,CAC7B,IAAA,CAACnM,EAAG,QAAU,CAACA,EAAG,QAAUT,EAAQ,KAAKoC,GAAQ,WAAY,CAAA,EAAG,CACjE,KAAKA,GAAQ,aAAA,EAAe,UAAU,IAAI,qBAAqB,EAC/D,KAAKA,GAAQ,QAAQ,aAAa,cAAe,MAAM,EACvD,KAAK,kBAAkB,EACjB,MAAAJ,EAAQD,EAAS,gBAAgB,EACvC,KAAKK,GAAQ,WAAa,EAAA,cAAcJ,CAAK,CACjD,GACD6H,CAAI,EAEf,CAEQ,mBAA0B,CAC1B,KAAK+C,KAAW,IAChB,aAAa,KAAKA,EAAM,EACxB,KAAKA,GAAS,EAEtB,CAEQ,cAAqB,CACzB,MAAMb,EAAW,KAAK3J,GAAQ,aAAa,UAAU,QAAU,GAC/D,KAAK4K,GAAS,CACV,cAAe,CAAC,EAChB,gBAAiB,CAAC,EAClB,eAAgB,CAAC,EACjB,KAAM,CAAC,EACP,KAAM,CAAC,EACP,OAAQ,CAAC,EACT,MAAO,CAAC,EACR,WAAY,CAAC,EACb,aAAc,CAAC,EACf,YAAa,CAAC,CAAA,EAGlB,MAAMK,EAAYrN,EAAQ,KAAKoC,GAAQ,WAAY,CAAA,EAC7C4F,EAAY9H,EAAQ,KAAKkC,GAAQ,WAAY,CAAA,EAE7CkL,EAAmB,OAAO,KAAKvB,CAAQ,EACvCwB,EAAcD,EAAiB,KAAM7J,GAAS,gBAAgB,KAAKA,CAAI,CAAC,EAC9E,KAAK,qBAAqB,EAET6J,EAAA,QAAStK,GAAqB,CAC3C,KAAM,CAACC,EAAO8G,CAAG,EAAI/G,EAAS,MAAM,GAAG,EAGvC,GAAI+G,EAAK,CACA,KAAKgD,GAAU,UAAU,SAAS,sBAAsB,GACpD,KAAAA,GAAU,UAAU,IAAI,sBAAsB,EAEjD,MAAAlF,EAAY,sBAAsB5E,CAAK,GAC7C,GAAI,CAAC,KAAK8J,GAAU,cAAc,IAAIlF,CAAS,EAAE,EAAG,CAC1C,MAAA2F,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY3F,EACpB,KAAAkF,GAAU,YAAYS,CAAY,CAC3C,UACOD,EAAa,CACpB,MAAM1F,EAAY,4BAClB,GAAI,CAAC,KAAKkF,GAAU,cAAc,IAAIlF,CAAS,EAAE,EAAG,CAC1C,MAAA2F,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY3F,EACpB,KAAAkF,GAAU,YAAYS,CAAY,CAC3C,CACJ,CAEA,MAAMC,EAAS1B,EAAWA,EAAS/I,CAA8B,EAAI,KACjEyK,GAEAA,EACK,OAAO,CAACC,EAAW1M,EAAW2G,IAAgBA,EAAE,QAAQ+F,CAAC,IAAM1M,CAAC,EAChE,QAASP,GAAe,CACrB,MAAMkN,EAAeJ,GAAe,CAACxD,EAAM,SAAW9G,EAChD4E,EAAY,GAAGpH,EAAG,OAAO,CAAC,EAAE,YAAa,CAAA,GAAGA,EAAG,MAAM,CAAC,CAAC,GACvDgD,EAAO,IAAI,KAAKoJ,GAAYhF,CAAS,EAAE,KAAKzF,GAAS2H,GAAO9G,EAAO0K,CAAY,EACjFlN,IAAO,aACP,KAAKqM,GAAYrJ,IAEjB4J,GAAc5M,IAAO,cAAgBuH,IACrC,KAAKgF,GAAOhK,CAAQ,EAAE,KAAKS,CAAI,CACnC,CACH,CACT,CACH,EAKD,KAAKrB,GAAQ,kBAAoB,EAAA,QAASqB,GAAS,CAC/C,KAAM,CAACR,EAAO8G,CAAG,EAAItG,EAAK,SAAS,MAAM,GAAG,EACtCkK,EAAeJ,GAAe,CAACxD,EAAM,SAAW9G,EACtDQ,EAAK,MAAQkK,EACblK,EAAK,SAAWsG,GAAO9G,EAEnB,OAAOQ,EAAK,OAAU,SACjB,KAAAuJ,GAAOvJ,EAAK,QAAQ,EAAE,OAAOA,EAAK,MAAO,EAAGA,CAAI,EAC9CA,EAAK,WAAa,QACzB,KAAKuJ,GAAOvJ,EAAK,QAAQ,EAAE,QAAQA,CAAI,EAEvC,KAAKuJ,GAAOvJ,EAAK,QAAQ,EAAE,KAAKA,CAAI,CACxC,CACH,CACL,CAEQ,gBAAuB,CAE3B,OAAO,KAAK,KAAKuJ,EAAM,EAAE,QAAShK,GAAa,CAC3C,KAAKgK,GAAOhK,CAAQ,EAAE,QAASS,GAAkB,CACxCA,EAAqB,OACtB,KAAK,qBAAqBA,CAAmB,EAE5CA,EAAyB,OAAO,CACrC,CACH,CAAA,CACJ,EAED,OAAO,KAAK,KAAKuJ,EAAM,EAAE,QAAShK,GAAa,CAC3C,KAAKgK,GAAOhK,CAAQ,EAAE,QAASS,GAAkB,CAC7C,MAAMmK,EAAe,CAAC,KAAKxL,GAAQ,WAAW,EAAE,aAAeqB,aAAgB6G,EACzE5C,EAAUjE,EAChB,GAAImK,GAAgB,CAAClG,EAAQ,QAAU,OAAOA,EAAQ,aAAgB,WAAY,CACxE,MAAA5D,EAAW4D,EAAQ,cACrB,KAAKoF,IAAa,OAAO,KAAKhJ,CAAQ,EAAE,QACxC,KAAKgJ,GAAU,QACXhJ,EAAS,KACTA,EAAS,IACTA,EAAS,QACTA,EAAS,SACTA,EAAS,SAAA,CAGrB,CAAA,CACH,CAAA,CACJ,EAEK,MAAAH,EAAI5B,EAAS,iBAAiB,EAC/B,KAAAgL,GAAU,cAAcpJ,CAAC,CAClC,CAEQ,gBAAgBmE,EAA4B,CAC5C,IAAA2C,EACAA,GAAW,OAAO,OAAW,KAC7B,OAAO,qBAAqBA,CAAO,EAGnC,OAAO,OAAW,MACRA,EAAA,OAAO,sBAAsB,IAAM,CACpC3C,EAAA,aAAa,cAAe,MAAM,CAAA,CAC1C,EAET,CAEQ,kBAAkB9F,EAAc8F,EAAsBrE,EAAyB,CACrE,KAAKrB,GAAQ,aAAa,EAAE,iBAAiB,cAAc,EACnE,QAASkG,GAAM,CACbA,EAAE,aAAa,aAAa,IAAM,SAAWA,EAAE,KAAOR,EAAK,IACzDQ,EAAA,aAAa,cAAe,MAAM,CACxC,CACH,EACIR,EAAA,aAAa,cAAeA,EAAK,aAAa,aAAa,IAAM,OAAS,QAAU,MAAM,EAC3F,OAAOrE,EAAK,OAAU,YACtBA,EAAK,MAAMzB,CAAK,CAExB,CAEQ,qBAAqByB,EAAyB,CAClD,MAAMxD,EAAU,SAAS,cAAcwD,EAAK,IAAI,EA6BhD,GA5BAxD,EAAQ,SAAW,EACnBA,EAAQ,GAAKwD,EAAK,GACVxD,EAAA,UAAY,gBAAgBwD,EAAK,EAAE,gBAAgBA,EAAK,QAAQ,IACpEA,EAAK,UAAY,GAAK,wBAC1B,GAEIA,EAAK,QACL,OAAO,OAAOxD,EAAQ,MAAOwD,EAAK,MAAM,EAGxCA,EAAK,OAAS,UAAYA,EAAK,KACvBxD,EAAA,UAAY,uBAAuB,KAAKwD,EAAK,IAAI,EACnD,aAAa9C,EAAS8C,EAAK,IAAI,CAAC,IAAIA,EAAK,IAAM,QAAQ9C,EAAS8C,EAAK,GAAG,CAAC,IAAM,EAAE,IACjF9C,EAAS8C,EAAK,IAAI,EACjBA,EAAK,UACZxD,EAAQ,UAAYU,EAAS8C,EAAK,QAAS,EAAK,GAEhDA,EAAK,OAAS,UAAYA,EAAK,QACvBxD,EAAA,MAAQU,EAAS8C,EAAK,KAAK,GAEnCA,EAAK,OAAS,OAASA,EAAK,MAC3BxD,EAA6B,IAAMU,EAAS8C,EAAK,GAAG,GAErDA,EAAK,OAAS,UAAYA,EAAK,OAAS,OAAOA,EAAK,OAAU,YACtDxD,EAAA,aAAa,YAAa,QAAQ,EAI1CwD,EAAK,OAAS,UAAYA,EAAK,UAAY,MAAM,QAAQA,EAAK,QAAQ,GAAKA,EAAK,SAAS,OAAS,EAAG,CAC/F,MAAAqE,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,kCACZA,EAAA,GAAK,GAAGrE,EAAK,EAAE,QACfqE,EAAA,aAAa,cAAe,MAAM,EAEvC,MAAMtD,EAAQf,EAAK,SAAS,IAAKoK,GAAM,CACnC,IAAIC,EAAW,GACf,OAAID,EAAE,OACSC,EAAA,uBAAuB,KAAKD,EAAE,IAAI,EACvC,aAAalN,EAASkN,EAAE,IAAI,CAAC,IAAIA,EAAE,IAAM,QAAQlN,EAASkN,EAAE,GAAG,CAAC,IAAM,EAAE,IACxElN,EAASkN,EAAE,KAAM,EAAK,GAEzB,oDACHA,EAAE,MAAQ,UAAUA,EAAE,KAAK,IAAM,EACrC;AAAA,+DAC+CA,EAAE,EAAE,iBAAiBpK,EAAK,EAAE,IAAIoK,EAAE,EAAE,KAAKC,CAAQ,IAC5FD,EAAE,KACN;AAAA,uBAAA,CAEH,EAED/F,EAAK,UAAY,8CAA8CtD,EAAM,KAAK,EAAE,CAAC,SAC7E,KAAKpC,GAAQ,aAAe,EAAA,YAAY0F,CAAI,EAEvCrE,EAAA,SAAS,QAASsK,GAAY,CAC/B,MAAMjK,EAAWgE,EAAK,cAAc,IAAIiG,EAAQ,EAAE,EAAE,EAChDjK,GAAYiK,EAAQ,OAAS,OAAOA,EAAQ,OAAU,YACtDjK,EAAS,iBAAiB,QAASiK,EAAQ,MAAOhO,CAAa,CACnE,CACH,EAIOE,EAAA,iBAAiB,QAAU0D,GAAM,KAAK,kBAAkBA,EAAGmE,EAAMrE,CAAI,EAAG1D,CAAa,EAExF,KAAAqC,GACA,WAAW,EACX,iBAAiB,iBAAkB,IAAM,KAAK,gBAAgB0F,CAAI,EAAG/H,CAAa,CAAA,MAChF0D,EAAK,OAAS,OAAOA,EAAK,OAAU,YAC3CxD,EAAQ,iBAAiB,QAASwD,EAAK,MAAO1D,CAAa,EAE3D0D,EAAK,YAAc,OAAOA,EAAK,YAAe,YAC9CxD,EAAQ,iBAAiB,aAAcwD,EAAK,WAAY1D,CAAa,EAErE0D,EAAK,YAAc,OAAOA,EAAK,YAAe,YAC9CxD,EAAQ,iBAAiB,aAAcwD,EAAK,WAAY1D,CAAa,EAErE0D,EAAK,SAAW,OAAOA,EAAK,SAAY,YACxCxD,EAAQ,iBAAiB,UAAWwD,EAAK,QAAS1D,CAAa,EAE/D0D,EAAK,MAAQ,OAAOA,EAAK,MAAS,YAClCxD,EAAQ,iBAAiB,OAAQwD,EAAK,KAAM1D,CAAa,EAEzD0D,EAAK,OAAS,OAAOA,EAAK,OAAU,YACpCxD,EAAQ,iBAAiB,QAASwD,EAAK,MAAO1D,CAAa,EAE3D0D,EAAK,QACDA,EAAK,QAAU,OACf,KAAKrB,GAAQ,aAAe,EAAA,YAAYnC,CAAO,EAE/C,KAAK,SAASwD,EAAK,KAAK,EAAE,YAAYxD,CAAO,GAMjDwD,EAAK,MAAQ,OAAOA,EAAK,MAAS,YAC7BA,EAAA,KAAK,KAAKrB,EAAO,CAE9B,CAEQ,sBAAsBqB,EAAyB,CAC7C,MAAAuK,EAAU,KAAK,eAAe,cAAc,iBAAiBvK,EAAK,EAAE,EAAE,EAC5E,GAAIuK,EAAS,CACL,GAAAvK,EAAK,UAAY,MAAM,QAAQA,EAAK,QAAQ,GAAKA,EAAK,SAAS,OAAS,EAAG,CACrE,MAAAqE,EAAO,KAAK1F,GAAQ,aAAA,EAAe,cAAc,IAAIqB,EAAK,EAAE,OAAO,EACrEqE,IACKrE,EAAA,SAAS,QAASsK,GAAY,CAC/B,MAAMjK,EAAWgE,EAAK,cAAc,IAAIiG,EAAQ,EAAE,EAAE,EAChDjK,GAAYiK,EAAQ,OAAS,OAAOA,EAAQ,OAAU,YAC7CjK,EAAA,oBAAoB,QAASiK,EAAQ,KAAK,CACvD,CACH,EAEOC,EAAA,oBAAoB,QAAUrK,GAAM,KAAK,kBAAkBA,EAAGmE,EAAMrE,CAAI,CAAC,EAE5E,KAAArB,GAAQ,aAAa,oBAAoB,iBAAkB,IAAM,KAAK,gBAAgB0F,CAAI,CAAC,EAChGA,EAAK,OAAO,EAEpB,CACIrE,EAAK,OAAS,OAAOA,EAAK,OAAU,YAC5BuK,EAAA,oBAAoB,QAASvK,EAAK,KAAK,EAE/CA,EAAK,YAAc,OAAOA,EAAK,YAAe,YACtCuK,EAAA,oBAAoB,aAAcvK,EAAK,UAAU,EAEzDA,EAAK,YAAc,OAAOA,EAAK,YAAe,YACtCuK,EAAA,oBAAoB,aAAcvK,EAAK,UAAU,EAEzDA,EAAK,SAAW,OAAOA,EAAK,SAAY,YAChCuK,EAAA,oBAAoB,UAAWvK,EAAK,OAAO,EAEnDA,EAAK,MAAQ,OAAOA,EAAK,MAAS,YAC1BuK,EAAA,oBAAoB,OAAQvK,EAAK,IAAI,EAE7CA,EAAK,OAAS,OAAOA,EAAK,OAAU,YAC5BuK,EAAA,oBAAoB,QAASvK,EAAK,KAAK,EAEnDuK,EAAQ,OAAO,EAIXvK,EAAK,SAAW,OAAOA,EAAK,SAAY,YACnCA,EAAA,QAAQ,KAAKrB,EAAO,CAEjC,CACJ,CACJ,CCpgBA,MAAe6L,CAAO,CAQlBC,GAEA,YAAYjO,EAA2B4F,EAAe,CAClD,KAAK,QAAU5F,EACf,KAAK,MAAQ4F,EACb,KAAK,QAAU,IAAI,QAAexF,GAAY,CAClCA,GAAA,CACX,CACL,CAmBA,IAAI,SAAS8N,EAAmB,CAC5B,KAAKD,GAAgBC,CACzB,CAGA,IAAI,UAAgB,CAChB,OAAO,KAAKD,EAChB,CAEA,MAAsB,CACX,OAAA,KAAK,QAAQ,MACxB,CAEA,OAAc,CACV,KAAK,QAAQ,OACjB,CAEA,IAAI,OAAOzM,EAAe,CACtB,KAAK,QAAQ,OAASA,CAC1B,CAEA,IAAI,QAAiB,CACjB,OAAO,KAAK,QAAQ,MACxB,CAEA,IAAI,MAAMA,EAAgB,CACtB,KAAK,QAAQ,MAAQA,CACzB,CAEA,IAAI,OAAiB,CACjB,OAAO,KAAK,QAAQ,KACxB,CAEA,IAAI,aAAaA,EAAe,CAC5B,KAAK,QAAQ,aAAeA,CAChC,CAEA,IAAI,cAAuB,CACvB,OAAO,KAAK,QAAQ,YACxB,CAEA,IAAI,oBAAoBA,EAAe,CACnC,KAAK,QAAQ,oBAAsBA,CACvC,CAEA,IAAI,qBAA8B,CAC9B,OAAO,KAAK,QAAQ,mBACxB,CAEA,IAAI,YAAYA,EAAe,CAC3B,KAAK,QAAQ,YAAcA,CAC/B,CAEA,IAAI,aAAsB,CACtB,OAAO,KAAK,QAAQ,WACxB,CAEA,IAAI,UAAmB,CACnB,OAAO,KAAK,QAAQ,QACxB,CAEA,IAAI,QAAkB,CAClB,OAAO,KAAK,QAAQ,MACxB,CAEA,IAAI,OAAiB,CACjB,OAAO,KAAK,QAAQ,KACxB,CACJ,CChGA,MAAM2M,WAAkBH,CAAO,CAE3B7L,GAGAI,GAAsB,CAAA,EAEtB6L,GAAqB,CAAA,EAErB,YAAYpO,EAA2BP,EAAqB+E,EAAmB,CAC3E,MAAMxE,EAASP,CAAW,EAC1B,KAAK2O,GAAW5J,EAEhB,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EAE9C,KAAA,QACD,OAAO,OAAW,IAEZtE,EAAW,+CAA+C,EAC1D,IAAI,QAASE,GAAY,CACrBA,EAAQ,CAAE,CAAA,CAAA,CACb,EAEN,KAAA,QAAQ,KAAK,IAAM,CACpB,KAAK+B,GAAU,OAAO,YAAY,EAAE,OAAO,EAC3C,KAAK,SAAW,KAAKA,EAAA,CACxB,CACL,CAEA,YAAYkM,EAA2B,CACnC,OAAO9O,GAAW8O,IAAa,sBACnC,CAEA,MAAa,CACT,KAAK,eAAe,EACpB,KAAKlM,GAAQ,aAAa,KAAK,MAAM,GAAG,EAElC,MAAAuB,EAAI5B,EAAS,gBAAgB,EAC9B,KAAA,QAAQ,cAAc4B,CAAC,EAEvB,KAAKnB,KACD,KAAAA,GAAU,OAAO,YAAY,OAClC,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,KAAK,OAAO,CAAA,CACpD,EAET,CAEA,SAAgB,CACR,KAAKQ,KACL,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,IAAI,KAAKI,GAAQR,CAAK,EAAG,KAAK,OAAO,CAAA,CACrD,EACD,KAAKQ,GAAU,IAEnB,KAAKJ,GAAQ,OACjB,CAEA,IAAI,IAAIyD,EAAe,CACfC,EAAaD,CAAK,IAClB,KAAK,QAAQ,EACb,KAAKzD,GAAU,OAAO,YAAY,EAAE,OAAO,EAC3C,KAAK,eAAe,EACf,KAAAA,GAAQ,aAAayD,EAAM,GAAG,EAE9B,KAAArD,GAAU,OAAO,YAAY,OAClC,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,KAAK,OAAO,CAAA,CACpD,EAET,CAEA,IAAI,QAAkB,CAClB,MAAMsF,EAAkB,CAAA,EACxB,GAAI,KAAKlF,GAAS,CACd,MAAMmM,EAAW,KAAKnM,GAAQ,sBAAsB,OAAO,EACvDmM,EAAS,QACAA,EAAA,QAAS9K,GAAiB,CAC3B,GAAA8K,EAAS9K,CAAI,EAAG,CAChB,KAAM,CAAE,OAAA0B,EAAQ,KAAA3D,CAAK,EAAI+M,EAAS9K,CAAI,EAChC4D,EAAQ,CACV,OAAAlC,EACA,GAAI,GAAG1B,CAAI,GACX,MAAOjC,GAAQ,IAAA,EAEnB8F,EAAO,KAAKD,CAAK,CACrB,CAAA,CACH,CAET,CACO,OAAAC,CACX,CAEA,IAAI,MAAMD,EAAe,CACjBA,IAAU,IACL,KAAAjF,GAAQ,qBAAqB,EAAI,GAEjC,KAAAA,GAAQ,qBAAqB,EAAK,EAClC,KAAAA,GAAQ,cAAc,QAASiF,CAAK,EAEjD,CAEA,IAAI,OAAgB,CAChB,OAAO,KAAKjF,GAAU,KAAKA,GAAQ,cAAc,OAAO,EAAI,IAChE,CAGQ,QAAQJ,EAAoB,CAC5B,GAAAA,EAAM,OAAS,QAAS,CAOlB,MAAAwM,EAAazM,EAAS,cANZ,CACZ,OAAQ,CACJ,QAASC,EACT,KAAM,aACV,CAAA,CAE8C,EAC7C,KAAA,QAAQ,cAAcwM,CAAU,CAAA,KAClC,CACH,MAAM,EAAIzM,EAASC,EAAM,KAAM,CAAE,OAAQA,EAAO,EAC3C,KAAA,QAAQ,cAAc,CAAC,CAChC,CACJ,CAEQ,gBAAuB,CAC3B,KAAKI,GAAQ,eAAe,CACxB,MAAO,CACH,SAAU,OAAO,MAAM,cAC3B,EACA,UAAW,CACP,kBAAmB,GACnB,oBAAqB,EACzB,EACA,GAAK,KAAKiM,IAAwC,CAAC,CAAA,CACtD,EACD,KAAKjM,GAAQ,aACR,KAAAA,GAAQ,WAAW,KAAK,OAAO,EAC/B,KAAAA,GAAQ,YAAY,EAAK,CAClC,CACJ,CC3IA,MAAMqM,WAAiBR,CAAO,CAE1B7L,GAGAI,GAAsB,CAAA,EAGtB6L,GAAqB,CAAA,EAErB,YAAYpO,EAA2BP,EAAqB+E,EAAmB,CAC3E,MAAMxE,EAASP,CAAW,EAC1B,KAAK2O,GAAW5J,EAChB,KAAK,QAAUxE,EACf,KAAK,MAAQP,EAEb,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EAEhC,KAAA,QACD,OAAO,MAAU,IAEXS,EAAW,4DAA4D,EACvE,IAAI,QAASE,GAAY,CACrBA,EAAQ,CAAE,CAAA,CAAA,CACb,EAEN,KAAA,QAAQ,KAAK,KAAK,OAAO,CAClC,CAEA,YAAYiO,EAA2B,CAC5B,OAAA9O,IAAY8O,IAAa,eAAiBA,IAAa,YAClE,CAEA,MAAa,CACT,KAAKlM,GAAQ,SACb,KAAKA,GAAQ,qBACR,KAAAA,GAAQ,mBAAmB,KAAK,OAAO,EAC5C,KAAKA,GAAQ,OAEP,MAAAuB,EAAI5B,EAAS,gBAAgB,EAC9B,KAAA,QAAQ,cAAc4B,CAAC,EAEvB,KAAKnB,KACN,KAAKA,GAAU,MAAM,OACrB,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,IAAI0M,IACrC,KAAK,QAAQ,KAAKlM,GAAQR,CAAK,EAAG0M,CAAI,CAAA,CAC1C,CACH,EAET,CAEA,SAAgB,CACZ,KAAKtM,GAAQ,UACb,KAAKA,GAAU,IACnB,CAEA,IAAI,IAAIyD,EAAe,CACfE,EAAYF,CAAK,IACjB,KAAK,QAAQ,EACb,KAAK,QAAQ,EAErB,CAEA,IAAI,QAAkB,CAClB,MAAMyB,EAAkB,CAAA,EACpB,OAAA,KAAKlF,IAAW,KAAKA,GAAQ,QAAU,KAAKA,GAAQ,OAAO,QAC3D,OAAO,KAAK,KAAKA,GAAQ,MAAM,EAAE,QAASqB,GAAS,CAC/C,KAAM,CAAE,OAAA0B,EAAQ,KAAA3D,GAAS,KAAKY,GAAQ,OAAOqB,CAAI,EAC3C4D,EAAQ,CACV,OAAAlC,EACA,GAAI1B,EACJ,MAAOjC,GAAQ,IAAA,EAEnB8F,EAAO,KAAKD,CAAK,CAAA,CACpB,EAEEC,CACX,CAEA,IAAI,MAAMD,EAAe,CACrB,KAAKjF,GAAQ,aAAeiF,CAChC,CAEA,IAAI,OAAgB,CAChB,OAAO,KAAKjF,GAAU,KAAKA,GAAQ,aAAe,IACtD,CAEQ,SAAgB,CACpB,KAAM,CAAE,QAAAuM,EAAS,GAAGC,CAAU,EAAA,KAAKP,IAAwC,GAErE,MAAA,eAAe,YAAcO,GAAM,OAAS,GAC5C,MAAA,eAAe,cAAgBA,GAAM,OAAS,GAC9C,MAAAnK,EAAU,CAAE,GAAGmK,EAAM,KAAM,MAAO,IAAK,KAAK,MAAM,KACxD,KAAKxM,GAAU,MAAM,aAAaqC,EAASkK,GAAW,CAAA,CAAE,EACxD,KAAK,SAAW,KAAKvM,GAEhB,KAAKI,KACN,KAAKA,GAAU,MAAM,OACrB,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,IAAI0M,IACrC,KAAK,QAAQ,KAAKlM,GAAQR,CAAK,EAAG0M,CAAI,CAAA,CAC1C,CACH,EAET,CAKQ,QAAQ1M,EAAe6M,EAAuC,CAClE,GAAI7M,IAAU,QAAS,CACnB,MAAM8M,EAAe,CACjB,OAAQ,CACJ,KAAAD,EACA,QAAS,GAAGA,EAAK,CAAC,CAAC,KAAKA,EAAK,CAAC,CAAC,IAAIA,EAAK,CAAC,EAAE,GAAG,GAC9C,KAAM,KACV,CAAA,EAEEL,EAAazM,EAAS,cAAe+M,CAAY,EAClD,KAAA,QAAQ,cAAcN,CAAU,CAAA,KAClC,CACG,MAAA7K,EAAI5B,EAASC,EAAO,CAAE,OAAQ,CAAE,KAAA6M,GAAQ,EACzC,KAAA,QAAQ,cAAclL,CAAC,CAChC,CACJ,CACJ,CC9HA,MAAMoL,WAAiBd,CAAO,CAC1B7L,GAGAI,GAAsB,CAAA,EAEtBwM,GAA4B,EAE5BC,GAA6B,EAG7BZ,GAEAa,GAEA,YAAYjP,EAA2BP,EAAqB0G,EAAmB3B,EAAmB,CAC9F,MAAMxE,EAASP,CAAW,EACrB,KAAA2O,GAAW5J,GAAW,GAC3B,KAAK,QAAUxE,EACf,KAAK,MAAQP,EACb,KAAKwP,GAAY9I,EAEjB,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EAEhC,KAAA,QACD,OAAO,IAAQ,IAETjG,EAAW,4DAA4D,EACvE,IAAI,QAASE,GAAY,CACrBA,EAAQ,CAAE,CAAA,CAAA,CACb,EAEN,KAAA,QAAQ,KAAK,KAAK,OAAO,CAClC,CAEA,YAAYiO,EAA2B,CAC5B,OAAA7O,EAAA,GAAkB6O,IAAa,uBAC1C,CAEA,MAAa,CACL,KAAKlM,KACL,KAAKA,GAAQ,cACb,KAAKA,GAAQ,WAAW,KAAK,MAAM,GAAG,EACjC,KAAAA,GAAQ,YAAY,KAAK,OAAO,GAGnC,MAAAuB,EAAI5B,EAAS,gBAAgB,EAC9B,KAAA,QAAQ,cAAc4B,CAAC,EAEvB,KAAKnB,KACN,KAAKA,GAAU,IAAI,OACnB,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,IAAI0M,IACrC,KAAK,QAAQ,KAAKlM,GAAQR,CAAK,EAAG0M,CAAI,CAAA,CAC1C,CACH,EAET,CAEA,SAAgB,CACR,KAAKtM,IACL,KAAKA,GAAQ,WAEb,KAAKI,IACL,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,IAAI,KAAKI,GAAQR,CAAK,EAAG,IAAI0M,IACtC,KAAK,QAAQ,KAAKlM,GAAQR,CAAK,EAAG0M,CAAI,CAAA,CAC1C,CACH,EAEL,KAAK,QAAQ,oBAAoB,OAAQ,KAAK,KAAK,EACnD,KAAK,QAAQ,oBAAoB,QAAS,KAAK,MAAM,EACjD,KAAKtM,KACL,KAAKA,GAAQ,UACb,KAAKA,GAAU,KAEvB,CAEA,IAAI,IAAIyD,EAAe,CACfD,EAAYC,CAAK,IACjB,KAAK,QAAQ,EACb,KAAKzD,GAAU,IAAI,IAAI,KAAKiM,EAAQ,EAC/B,KAAAjM,GAAQ,WAAWyD,EAAM,GAAG,EAC5B,KAAAzD,GAAQ,YAAY,KAAK,OAAO,EAErC,KAAKI,GAAU,IAAI,OACnB,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,IAAI0M,IACrC,KAAK,QAAQ,KAAKlM,GAAQR,CAAK,EAAG0M,CAAI,CAAA,CAC1C,CACH,EAET,CAEA,IAAI,QAAkB,CAClB,MAAMpH,EAAkB,CAAA,EACpB,OAAA,KAAKlF,IAAW,KAAKA,GAAQ,QAAU,KAAKA,GAAQ,OAAO,QAC3D,OAAO,KAAK,KAAKA,GAAQ,MAAM,EAAE,QAASqB,GAAS,CAC/C,KAAM,CAAE,OAAA0B,EAAQ,KAAA3D,GAAS,KAAKY,GAAQ,OAAOqB,CAAI,EAC3C4D,EAAQ,CACV,OAAAlC,EACA,GAAI1B,EACJ,MAAOjC,GAAQ,IAAA,EAEnB8F,EAAO,KAAKD,CAAK,CAAA,CACpB,EAEEC,CACX,CAEA,IAAI,MAAMD,EAAe,CACrB,KAAKjF,GAAQ,aAAeiF,CAChC,CAEA,IAAI,OAAgB,CAChB,OAAO,KAAKjF,GAAU,KAAKA,GAAQ,aAAe,IACtD,CAEQ,SAAgB,CACpB,MAAMgE,EAAW,CAAC,EAAE,KAAK,QAAQ,UAAY,QAAU,KAAK8I,IAC3D,KAAKb,GAAqC,cAAgBjI,EAE3D,KAAKhE,GAAU,IAAI,IAAI,KAAKiM,EAAQ,EACpC,KAAK,SAAW,KAAKjM,GACrB,KAAKI,GAAU,IAAI,OACnB,OAAO,KAAK,KAAKA,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKI,GAAQ,GAAG,KAAKI,GAAQR,CAAK,EAAG,IAAI0M,IACrC,KAAK,QAAQ,KAAKlM,GAAQR,CAAK,EAAG0M,CAAI,CAAA,CAC1C,CACH,EAEItI,IACD,KAAK,QAAQ,iBAAiB,OAAQ,KAAK,MAAOrG,CAAa,EAC/D,KAAK,QAAQ,iBAAiB,QAAS,KAAK,OAAQA,CAAa,EAEzE,CAMQ,QAAQiC,EAAe6M,EAAuC,CAClE,GAAI7M,IAAU,WAAY,CACtB,MAAM8M,EAAe,CACjB,OAAQ,CACJ,KAAAD,EACA,QAASA,EAAK,CAAC,EAAE,QACjB,KAAM,KACV,CAAA,EAEEL,EAAazM,EAAS,cAAe+M,CAAY,EAClD,KAAA,QAAQ,cAAcN,CAAU,EAG/B,MAAAhH,EAAOqH,EAAK,CAAC,EAAE,KACf,CAAE,MAAAM,CAAA,EAAUN,EAAK,CAAC,EAClB5M,EAAU4M,EAAK,CAAC,EACtB,GAAIM,EACA,OAAQ3H,EAAM,CACV,IAAK,aACD,MAAM4H,EAAM,IAAI,KAAK,EAAE,QAAQ,EAC/B,GAAI,CAAC,KAAKJ,IAA6BI,EAAM,KAAKJ,GAA4B,IAC1E,KAAKA,GAA4B,IAAI,KAAK,EAAE,QAAQ,EACpD,KAAK5M,GAAQ,4BACN,CAAC,KAAK6M,IAA8BG,EAAM,KAAKH,GAA6B,IACnF,KAAKA,GAA6B,IAAI,KAAK,EAAE,QAAQ,EACrD,QAAQ,KAAK,6DAA6D,EAC1E,KAAK7M,GAAQ,iBACb,KAAKA,GAAQ,wBACV,CAEH,QAAQ,MADI,kDACK,EACX,MAAAiN,EAAatN,EAASyF,EAAM,CAAE,OAAQ,CAAE,KAAMvF,CAAQ,CAAA,CAAG,EAC1D,KAAA,QAAQ,cAAcoN,CAAU,CACzC,CACA,MACJ,IAAK,eAED,QAAQ,MADQ,eACK,EACf,MAAAC,EAAevN,EAASyF,EAAM,CAAE,OAAQ,CAAE,KAAMvF,CAAQ,CAAA,CAAG,EAC5D,KAAA,QAAQ,cAAcqN,CAAY,EACvC,MACJ,QACI,KAAKlN,GAAQ,UACP,MAAAmN,EAAaxN,EAASyF,EAAM,CAAE,OAAQ,CAAE,KAAMvF,CAAQ,CAAA,CAAG,EAC1D,KAAA,QAAQ,cAAcsN,CAAU,EACrC,KACR,KACG,CACG,MAAAC,EAAMzN,EAASyF,EAAM,CAAE,OAAQ,CAAE,KAAMvF,CAAQ,CAAA,CAAG,EACnD,KAAA,QAAQ,cAAcuN,CAAG,CAClC,CAAA,KACG,CACG,MAAAvN,EAAmC4M,EAAK,CAAC,EAC/C,GAAI7M,IAAU,kBAAoBC,EAAQ,OAAS,GAAM,CAChD,KAAA,QAAQ,aAAa,mBAAoB,MAAM,EAC9C,MAAAwN,EAAY1N,EAAS,YAAY,EAClC,KAAA,QAAQ,cAAc0N,CAAS,CAAA,SAEpCzN,IAAU,mBACVC,EAAQ,OAAS,IAChBA,EAAQ,cAA2BnC,EACtC,CACO,KAAA,QAAQ,aAAa,kBAAmB,MAAM,EAC7C,MAAA2P,EAAY1N,EAAS,YAAY,EAClC,KAAA,QAAQ,cAAc0N,CAAS,CAAA,SAC7BzN,IAAU,yBAA0B,CACrC,MAAA0N,EAAY3N,EAAS,gBAAiB,CAAE,OAAQ,CAAE,KAAM8M,EAAK,CAAC,CAAE,CAAA,CAAG,EACpE,KAAA,QAAQ,cAAca,CAAS,CACxC,CACM,MAAA/L,EAAI5B,EAASC,EAAO,CAAE,OAAQ,CAAE,KAAM6M,EAAK,CAAC,CAAE,CAAA,CAAG,EAClD,KAAA,QAAQ,cAAclL,CAAC,CAChC,CACJ,CAEQ,OAAc,CACd,KAAKvB,IACL,KAAKA,GAAQ,WAErB,CAEQ,QAAe,CACf,KAAKA,IACL,KAAKA,GAAQ,UAErB,CACJ,CCzOA,MAAMuN,UAAmB1B,CAAO,CAC5B2B,GAEAC,GAAsB,CAAA,EAEtBC,GAAe,GAEfC,GAAc,EAEdC,GAAW,GAEXpD,GAEA,YAAY3M,EAA2BgQ,EAAmB,CAGtD,GAFA,MAAMhQ,EAASgQ,CAAS,EAEpB,CAAC/P,EAAQD,CAAO,GAAK,CAACD,EAAQC,CAAO,EAC/B,MAAA,IAAI,UAAU,8CAA8C,EAGtE,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,mBAAqB,KAAK,mBAAmB,KAAK,IAAI,EAEtD,KAAA6P,GAAelK,EAAYqK,CAAS,EACzC,KAAK,QAAQ,iBAAiB,UAAW,KAAK,cAAelQ,CAAa,EAC1E,KAAK,QAAQ,iBAAiB,UAAW,KAAK,YAAaA,CAAa,EACxE,KAAK,QAAQ,iBAAiB,QAAS,KAAK,eAAgBA,CAAa,EACzE,KAAK,QAAQ,iBAAiB,aAAc,KAAK,cAAeA,CAAa,EAC7E,KAAK,QAAQ,WAAW,iBAAiB,WAAY,KAAK,mBAAoBA,CAAa,CAC/F,CAEA,YAAYuO,EAA2B,CAC5B,MAAA,CAAC,CAAC,KAAK,QAAQ,YAAYA,CAAQ,EAAE,QAAQ,KAAM,EAAE,CAChE,CAEA,MAAa,CACT,KAAK,QAAQ,MACjB,CAEA,SAAgB,CACZ,KAAK,QAAQ,oBAAoB,UAAW,KAAK,aAAa,EAC9D,KAAK,QAAQ,oBAAoB,UAAW,KAAK,WAAW,EAC5D,KAAK,QAAQ,oBAAoB,QAAS,KAAK,cAAc,EAC7D,KAAK,QAAQ,oBAAoB,aAAc,KAAK,aAAa,EACjE,KAAK,QAAQ,WAAW,oBAAoB,WAAY,KAAK,kBAAkB,CACnF,CAEA,IAAI,QAAkB,CACd,GAAA,CAAC,KAAKuB,GAAW,OAAQ,CACzB,MAAMvI,EAAS,KAAK,QAAQ,iBAAiB,eAAe,EACnD,QAAAtG,EAAI,EAAGC,EAAQqG,EAAO,OAAQtG,EAAIC,EAAO,EAAED,EAAG,CACnD,MAAMqG,EAAQ,CACV,OAAQ,EACR,GAAI,GAAGrG,CAAC,GACR,MAAOsG,EAAOtG,CAAC,EAAE,aAAa,OAAO,GAAK,EAAA,EAEzC,KAAA6O,GAAW,KAAKxI,CAAK,CAC9B,CACJ,CACA,OAAO,KAAKwI,EAChB,CAEA,IAAI,MAAMxI,EAAe,CACf,MAAA6I,EAAM,KAAKL,GAAW,UAAWpM,GAASA,EAAK,KAAO4D,CAAK,EACjE,GAAI6I,EAAM,GAAI,CACL,KAAAN,GAAgB,KAAK,OAAOM,CAAG,EACpC,MAAM5I,EAAS,KAAK,QAAQ,iBAAiB,eAAe,EACnD,QAAA,EAAI,EAAGrG,EAAQqG,EAAO,OAAQ,EAAIrG,EAAO,EAAE,EAAG,CACnD,MAAMkP,EAAS7I,EAAO,CAAC,EAAE,aAAa,KAAK,EACvC6I,GAAU,SAAS,KAAKP,GAAc,GAAI,EAAE,IAAM,IAClD,KAAK,QAAQ,IAAMO,EAE3B,CACJ,CACJ,CAEA,IAAI,OAAgB,CACT,OAAA,KAAKP,IAAe,IAAM,IACrC,CAEA,IAAI,IAAI/J,EAAe,CACd,KAAA,QAAQ,IAAMA,EAAM,GAC7B,CAEQ,eAAsB,CAC1B,MAAMgE,EAAO,KAAK,QAAQ,SAAS,IAAI,KAAK,QAAQ,SAAS,OAAS,CAAC,EAAI,KAAK,QAAQ,SAAS,MAAM,CAAC,EACpG,GAAA,KAAKiG,IAAgBjG,EAAO/J,GAAiB,CAAC,KAAK,QAAQ,aAAa,iBAAiB,EAAG,CACvF,KAAA,QAAQ,aAAa,kBAAmB,MAAM,EAC7C,MAAA2P,EAAY1N,EAAS,YAAY,EAClC,KAAA,QAAQ,cAAc0N,CAAS,CACxC,CACJ,CAEQ,mBAAmB9L,EAAqB,CAC5C,MAAML,EAASK,EACXL,GAAQ,OAAO,OAAS,aACxBA,EAAO,MAAM,KAAO,SACpBA,EAAO,MAAM,iBACT,YACCtB,GAAU,CACP,MAAMwB,EAAQxB,EAAM,OACdmC,EAAMX,EAAM,WAAaA,EAAM,WAAW,CAAC,EAAI,KACrD,GAAIW,EAAK,CACL,MAAMiM,EAAgBrO,EAAS,gBAAiB,CAAE,OAAQoC,EAAK,EAC1D,KAAA,QAAQ,cAAciM,CAAa,CAC5C,CACJ,EACArQ,CAAA,EAGZ,CAEQ,aAAoB,CACpB,CAAC,KAAKiQ,IAAY,SAAW,SAC7B,KAAKA,GAAW,GACX,KAAApD,GAAS,OAAO,YAAY,IAAM,CAC/B,GAAA,KAAKmD,IAAe,GAAI,CACxB,cAAc,KAAKnD,EAAM,EACzB,MAAMyD,EAAU,wDAQV7B,EAAazM,EAAS,cAPZ,CACZ,OAAQ,CACJ,KAAM,CAAE,QAAAsO,EAAS,MAAO,CAAE,EAC1B,QAAAA,EACA,KAAM,OACV,CAAA,CAE8C,EAC7C,KAAA,QAAQ,cAAc7B,CAAU,EACrC,KAAKuB,GAAc,EACnB,KAAKC,GAAW,EAAA,MAEX,KAAAD,MAEV,GAAI,EAEf,CAEQ,eAAsB,CACtB,KAAKnD,KACL,cAAc,KAAKA,EAAM,EACzB,KAAKmD,GAAc,EACnB,KAAKC,GAAW,GAExB,CAEQ,eAAerM,EAAgB,CAC/B,IAAA2M,EAEJ,MAAMC,EADS5M,EAAE,QACK,MACtB,OAAQ4M,GAAO,KAAM,CACjB,KAAKA,GAAO,kBACSD,EAAA,yBACjB,MACJ,KAAKC,GAAO,kBACSD,EAAA,wDACjB,MACJ,KAAKC,GAAO,iBACSD,EAAA;AAAA,uEAEjB,MACJ,KAAKC,GAAO,4BACSD,EAAA;AAAA,6DAEjB,MACJ,QACqBA,EAAA,0BACjB,KACR,CACA,MAAMrO,EAAU,CACZ,OAAQ,CACJ,KAAM,CAAE,GAAG0B,EAAG,QAAS2M,EAAgB,MAAOC,GAAO,IAAK,EAC1D,QAASD,EACT,KAAM,OACV,CAAA,EAEE9B,EAAazM,EAAS,cAAeE,CAAO,EAC7C,KAAA,QAAQ,cAAcuM,CAAU,CACzC,CACJ,CCpLA,MAAMgC,CAAM,CACRC,GAGAC,GAEAC,GAEAC,GAEAvC,GAEAa,GAEA2B,GAAe,GAEfC,GAA4B,CACxB,MAAO,CAAC,EACR,WAAY,CAAC,EACb,MAAO,CAAC,CAAA,EAGZC,GAEA,YAAY9Q,EAA2BwE,EAAwB2B,EAAmB4K,EAA0B,CACxG,KAAKP,GAAWxQ,EAChB,KAAKoO,GAAW5J,EACX,KAAAkM,GAAS,KAAK,iBACnB,KAAKG,GAAeE,EACpB,KAAK9B,GAAY9I,CACrB,CAEA,YAAYkI,EAA2B,CAC5B,OAAA,KAAKoC,GAAO,YAAYpC,CAAQ,CAC3C,CAEA,MAAM,MAAsB,CACxB,GAAI,MAAKuC,GAML,IAFJ,KAAKA,GAAe,GAEhB,CAAC,KAAKF,GAAO,OACP,MAAA,IAAI,UAAU,eAAe,EAInC,KAAKD,IAAU,OAAO,KAAKA,GAAO,SAAY,aAC5B,KAAKC,GAAO,SAAW,GAAK,KAAKA,GAAO,CAAC,EAAE,MAAQ,KAAKD,GAAO,MAAM,KAEnF,KAAKA,GAAO,WAKf,KAAAC,GAAO,KAAM9K,GAAU,CACpB,GAAA,CACK,KAAA6K,GAAS,KAAK,QAAQ7K,CAAK,OACxB,CACR,KAAK6K,GAAS,IAAIf,EAAW,KAAKc,GAAU5K,CAAK,CACrD,CAEA,OAAO,KAAK6K,GAAO,YAAY7K,EAAM,IAAI,CAAA,CAC5C,EAEG,GAAA,CACI,GAAA,KAAK6K,KAAW,KACV,MAAA,IAAI,UAAU,kDAAkD,EAG1E,MAAM,KAAKA,GAAO,QAClB,KAAKA,GAAO,aACP/M,EAAG,CAER,MAAI,KAAK+M,IACL,KAAKA,GAAO,UAEV/M,CACV,EACJ,CAGA,MAAM,MAAsB,CACpB,OAAC,KAAKkN,GAIN,MAAM,KAAKH,GAAO,SAHlB,MAAM,KAAK,OACX,KAAKG,GAAe,IAInB,KAAAD,GAAe,KAAKF,GAAO,KAAK,EAC9B,KAAKE,EAChB,CAGA,MAAM,OAAuB,CACrB,KAAKA,KAAiB,QACtB,MAAM,KAAKA,GAEf,KAAKF,GAAO,OAChB,CAEA,SAAgB,CACR,KAAKA,IACL,KAAKA,GAAO,SAEpB,CAEA,IAAI,IAAI7K,EAAO,CAeP,GAdA,OAAOA,GAAU,SACjB,KAAK8K,GAAO,KAAK,CACb,IAAK9K,EACL,KAAMoL,EAAuBpL,EAAO,KAAK4K,EAAQ,CAAA,CACpD,EACM,MAAM,QAAQ5K,CAAK,EAC1B,KAAK8K,GAAS9K,EACP,OAAOA,GAAU,UACnB,KAAA8K,GAAO,KAAK9K,CAAK,EAI1B,KAAK8K,GAAS,KAAKA,GAAO,OAAQO,GAASA,EAAK,GAAG,EAE/C,KAAKP,GAAO,OAAS,EAAG,CAClB,KAAA,CAACO,CAAI,EAAI,KAAKP,GAEhB,KAAKF,GAAS,KACd,KAAKA,GAAS,aAAa,eAAgB,KAAKE,GAAO,CAAC,EAAE,GAAG,EAG5D,KAAAF,GAAS,IAAMS,EAAK,IACzB,KAAKH,GAAcG,EACf,KAAKR,KACL,KAAKA,GAAO,IAAMQ,EACtB,MAEA,KAAKT,GAAS,IAAM,EAE5B,CAEA,IAAI,KAAgB,CAChB,OAAO,KAAKE,EAChB,CAEA,IAAI,SAAkB,CAClB,OAAO,KAAKI,EAChB,CAEA,IAAI,WAAWI,EAAmB,CAC9B,KAAKR,GAASQ,CAClB,CAEA,IAAI,YAAuB,CACvB,OAAO,KAAKR,EAChB,CAEA,IAAI,OAAOlP,EAAe,CAClB,KAAKiP,KACL,KAAKA,GAAO,OAASjP,EAE7B,CAEA,IAAI,QAAiB,CACjB,OAAO,KAAKiP,GAAS,KAAKA,GAAO,OAAS,KAAKD,GAAS,MAC5D,CAEA,IAAI,MAAMhP,EAAgB,CAClB,KAAKiP,KACL,KAAKA,GAAO,MAAQjP,EAE5B,CAEA,IAAI,OAAiB,CACjB,OAAO,KAAKiP,GAAS,KAAKA,GAAO,MAAQ,KAAKD,GAAS,KAC3D,CAEA,IAAI,aAAahP,EAAO,CAChB,KAAKiP,KACL,KAAKA,GAAO,aAAejP,EAEnC,CAEA,IAAI,cAAuB,CACvB,OAAO,KAAKiP,GAAS,KAAKA,GAAO,aAAe,KAAKD,GAAS,YAClE,CAEA,IAAI,oBAAoBhP,EAAO,CACvB,KAAKiP,KACL,KAAKA,GAAO,oBAAsBjP,EAE1C,CAEA,IAAI,qBAA8B,CAC9B,OAAO,KAAKiP,GAAS,KAAKA,GAAO,oBAAsB,KAAKD,GAAS,mBACzE,CAEA,IAAI,YAAYhP,EAAe,CACvB,KAAKiP,KACL,KAAKA,GAAO,YAAcjP,EAElC,CAEA,IAAI,aAAsB,CACtB,OAAO,KAAKiP,GAAS,KAAKA,GAAO,YAAc,KAAKD,GAAS,WACjE,CAEA,IAAI,UAAmB,CACnB,MAAMpH,EAAW,KAAKqH,GAAS,KAAKA,GAAO,SAAW,KAAKD,GAAS,SAEhE,OAAApH,IAAa,KAAY,KAAKoH,GAAS,UAAY,KAAKA,GAAS,SAAS,OACnE,KAAKA,GAAS,SAAS,IAAI,CAAC,EAEhCpH,CACX,CAEA,IAAI,QAAkB,CAClB,OAAO,KAAKqH,GAAS,KAAKA,GAAO,OAAS,KAAKD,GAAS,MAC5D,CAEA,IAAI,OAAiB,CACjB,OAAO,KAAKC,GAAS,KAAKA,GAAO,MAAQ,KAAKD,GAAS,KAC3D,CAEA,IAAI,OAAOW,EAAiB,CACxB,KAAKP,GAAeO,CACxB,CAEA,IAAI,QAAkB,CAClB,OAAO,KAAKP,EAChB,CAEA,IAAI,MAAMpP,EAAgC,CAClC,KAAKiP,KACL,KAAKA,GAAO,MAAQjP,EAE5B,CAEA,IAAI,OAAiC,CACjC,OAAO,KAAKiP,GAAS,KAAKA,GAAO,MAAQ,EAC7C,CAEA,IAAI,QAAkB,CAClB,OAAO,KAAKA,GAAS,KAAKA,GAAO,OAAS,CAAA,CAC9C,CAEA,IAAI,UAAyB,CACzB,OAAO,KAAKA,GAAS,KAAKA,GAAO,SAAW,IAChD,CAEQ,gBAA2B,CAC/B,MAAMW,EAAa,CAAA,EACbC,EAAa,KAAKb,GAAS,iBAAiB,QAAQ,EACpDc,EAAa,KAAKd,GAAS,IAG7Bc,GACAF,EAAW,KAAK,CACZ,IAAKE,EACL,KAAM,KAAKd,GAAS,aAAa,MAAM,GAAKQ,EAAuBM,EAAY,KAAKd,EAAQ,CAAA,CAC/F,EAIL,QAAS,EAAI,EAAGxP,EAAQqQ,EAAW,OAAQ,EAAIrQ,EAAO,IAAK,CACjD,MAAAwC,EAAO6N,EAAW,CAAC,EACnB,CAAE,IAAAE,CAAQ,EAAA/N,EAQhB,GAPA4N,EAAW,KAAK,CACZ,IAAAG,EACA,KAAM/N,EAAK,aAAa,MAAM,GAAKwN,EAAuBO,EAAK,KAAKf,EAAQ,CAAA,CAC/E,EAIG,IAAM,EAAG,CACH,KAAA,CAACS,CAAI,EAAIG,EACf,KAAKN,GAAcG,CACvB,CACJ,CAEI,OAACG,EAAW,QACZA,EAAW,KAAK,CACZ,IAAK,GACL,KAAMJ,EAAuB,GAAI,KAAKR,EAAQ,CAAA,CACjD,EAGEY,CACX,CAGQ,QAAQxL,EAAwD,CAC9D,MAAA4L,EACF,KAAKhB,GAAS,YAAY,+BAA+B,GACzD,KAAKA,GAAS,YAAY,uBAAuB,EAErD,KAAKM,GAAclL,EAEnB,KAAM,CAAE,OAAA4H,CAAO,EAAI,KAAKY,GAAS,UAAY,CAAA,EAE7C,IAAIqD,EAAe,GAUnB,GATIjE,GACA,OAAO,KAAKA,CAAM,EAAE,QAASxK,GAAU,CACnC,MAAMyE,EAAU+F,EAASA,EAAOxK,CAA2B,EAAI,KAC3DyE,GAAWA,EAAQ,QAAQ,QAAQ,EAAI,KACxBgK,EAAA,GACnB,CACH,EAGD,OAAO,KAAK,KAAKZ,GAAa,KAAK,EAAE,OAAQ,CAEzC,IAAAa,EASJ,OARA,KAAKb,GAAa,MAAM,QAASc,GAAS,CAChC,MAAApK,EAAOoK,EAAK/L,EAAM,GAAG,EAC3B,GAAI2B,EAAM,CACN,MAAMwJ,EAAc,KAAKF,GAAa,MAAMtJ,CAAI,EAC1CqK,EAAgB,KAAKxD,GAAS,KAAKyC,GAAa,WAAWtJ,CAAI,CAAC,GAAK,OAC3EmK,EAAYX,EAAY,KAAKP,GAAU5K,EAAO,KAAKqJ,GAAW2C,CAAa,CAC/E,CAAA,CACH,EACGF,GACAA,EAAU,OAAO,EACVA,GAEJ,IAAIhC,EAAW,KAAKc,GAAU5K,CAAK,CAC9C,CACI,GAAAiM,EAAmBjM,CAAK,EAAG,CAC3B,GAAI4L,GAAmB,KAAKpD,GAAS,aAAe,CAACqD,EACjD,OAAO,IAAI/B,EAAW,KAAKc,GAAU5K,CAAK,EAExC,MAAAkM,EAAa,KAAK1D,IAAU,KAAO,OACzC,OAAO,IAAIU,GAAS,KAAK0B,GAAU5K,EAAO,KAAKqJ,GAAW6C,CAAU,CACxE,CACI,GAAAC,EAAoBnM,CAAK,EAAG,CACtB,MAAAoM,EAAc,KAAK5D,IAAU,MAAQ,OAC3C,OAAO,IAAID,GAAU,KAAKqC,GAAU5K,EAAOoM,CAAW,CAC1D,CACI,GAAAC,EAAmBrM,CAAK,EAAG,CACrB,MAAAsM,EAAa,KAAK9D,IAAU,KAAO,CACrC,MAAO,GACP,KAAM,MACN,IAAKxI,EAAM,GAAA,EAEf,OAAO,IAAI4I,GAAS,KAAKgC,GAAU5K,EAAOsM,CAAU,CACxD,CAEA,OAAO,IAAIxC,EAAW,KAAKc,GAAU5K,CAAK,CAC9C,CACJ,CCzVA,MAAMuM,CAAI,CA2EN,YACIrP,EACAsP,EACAC,EACAC,EACA9N,EACF,CA9ES,KAAA,SAAA,GAEF,KAAA+N,GAAA,GAED,KAAAC,GAAA,GAEE,KAAAC,GAAA,GAEC,KAAA1C,GAAA,GAEM,KAAA2C,GAAA,EAIR,KAAAC,GAAA,GAEG,KAAAhH,GAAA,EAEG,KAAAF,GAAA,EAGC,KAAAmH,GAAA,KAQhB,KAAArQ,GAAoB,GAqBP,KAAAsQ,GAAA,GAEK,KAAAC,GAAA,GAED,KAAAC,GAAA,GAID,KAAAC,GAAA,EAME,KAAAC,GAAA,EAElB,KAAAC,GAA0B,GAEV,KAAAC,GAAA,GAEA,KAAAC,GAAA,KASZ,MAAMC,EAA0B,CAC5B,iBAAkB,GAClB,YAAa,CACT,QAAS,GACT,MAAO,0BACX,EACA,UAAW,CACP,QAAS,GACT,MAAO,UACP,eAAgB,0BACpB,EACA,MAAO,GACP,iBAAkB,GAClB,SAAU,KACV,KAAM,GACN,aAAc,EACd,YAAa,OACb,QAAS,qDACT,UAAW,OACX,IAAK,CAAC,EACN,UAAW,SAAA,EAEf,KAAKlR,GAAUW,EACf,KAAKwQ,GAAOlB,EACP,KAAA3B,GAAS3N,EAAO,WAChB,KAAA0N,GAAW1N,EAAO,aACvB,KAAK+P,GAAaR,GAAa,GAC1B,KAAAM,GAAS7P,EAAO,WAAA,EAAa,MAClC,KAAKgQ,GAAkBR,GAAkB,GACzC,KAAKlE,GAAW,CAAE,GAAGiF,EAAa,GAAG7O,CAAQ,EACzCA,GAAS,aAAe,OAAO,KAAKA,EAAQ,WAAW,EAAE,SACpD,KAAA4J,GAAS,YAAc,CAAE,GAAGiF,EAAY,YAAa,GAAG7O,EAAQ,cAEzE,KAAKuO,GAAiB,GACjB,KAAAQ,GAAkB,KAAK/C,GAAS,OACrC,KAAKpE,GAAU,KAAKmH,GAEpB,MAAMC,EAAO,KAAKpF,IAAU,MACtB,KAAKA,IAAU,SAAS,QAAQ,UAAW,WAAW,EACtD,KAAKA,IAAU,QAErB,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,EAC/B,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,wBAA0B,KAAK,wBAAwB,KAAK,IAAI,EACrE,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,qBAAuB,KAAK,qBAAqB,KAAK,IAAI,EAC/D,KAAK,uBAAyB,KAAK,uBAAuB,KAAK,IAAI,EACnE,KAAK,sBAAwB,KAAK,sBAAsB,KAAK,IAAI,EACjE,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EACvD,KAAK,yBAA2B,KAAK,yBAAyB,KAAK,IAAI,EACvE,KAAK,0BAA4B,KAAK,0BAA0B,KAAK,IAAI,EAEzE,KAAKqF,GACDD,IAAS,OAAO,OAAW,KAAe,OAAO,OAAO,IAAQ,KAC1DtT,EAAWsT,CAAI,EACf,IAAI,QAASpT,GAAY,CACbA,GAAA,CACX,EAEN,KAAAqT,GACA,KAAK,IAAM,CACR,KAAK,KAAK,CAAA,CACb,EACA,MAAOnD,GAAU,CACd,IAAIF,EAAU,sEACHA,GAAA,uDACH,QAAA,MAAM,aAAaA,CAAO,GAAG,EAS/B,MAAA7B,EAAazM,EAAS,cAPZ,CACZ,OAAQ,CACJ,KAAMwO,EACN,QAAAF,EACA,KAAM,KACV,CAAA,CAE8C,EAC7C,KAAAI,GAAS,cAAcjC,CAAU,CAAA,CACzC,CACT,CA9JAgE,GAEAC,GAEAC,GAEA1C,GAEA2C,GAEAtG,GAEAuG,GAEAhH,GAEAF,GAGAmH,GAEAzQ,GAEAsO,GAEAD,GAEAjO,GAEA+Q,GAEAG,GAGAC,GAEA9H,GAEA+H,GAEAC,GAGAC,GAGAC,GAEAjB,GAEAC,GAEAC,GAEA3E,GAEA4E,GAEAO,GAEAQ,GAEAd,GAEAC,GAEAC,GAEAC,GA4FA,KAAKY,EAAQ,GAAa,CAUtB,GARI,OAAO,OAAW,KAClB,CAAC,OAAO,KACP,CAACA,GAAS,KAAK,UAAY,KAAK5F,GAAS,kBAM1C,CAAC,KAAKA,GAAS,kBAAoB,CAAC4F,EACpC,OAGJ,KAAK,SAAW,GAEhB,MAAMC,EAAoB,KAAK9R,GAAQ,aAAa,EAAE,cAAc,SAAS,EAyB7E,GAxBI8R,GAAqBA,EAAkB,YACrBA,EAAA,WAAW,YAAYA,CAAiB,EAG9D,KAAKlE,GAAW,GACX,KAAAnE,GAAa,SAAS,cAAc,KAAK,EAC9C,KAAKA,GAAW,UAAY,SAC5B,KAAKA,GAAW,SAAW,GACvB,KAAK4E,GAAS,eACd,KAAKA,GAAS,cAAc,aAAa,KAAK5E,GAAY,KAAK4E,GAAS,WAAW,EAEvF,KAAK5E,GAAW,iBAAiB,QAAS,KAAK,uBAAuB,EAElE,KAAKwC,GAAS,aAAa,UACtB,KAAAuF,GAAwB,SAAS,cAAc,KAAK,EACzD,KAAKA,GAAsB,UAAY,0BACvC,KAAKA,GAAsB,UAAY,oCACnC,KAAKvF,GAAS,YAAY,KAC9B,SACI,KAAKoC,GAAS,eACd,KAAKA,GAAS,cAAc,aAAa,KAAKmD,GAAuB,KAAKnD,GAAS,WAAW,GAIlGvQ,EAAQ,KAAKuQ,EAAQ,GAAK,KAAKpC,GAAS,WAAW,QAAS,CACxD,GAAA,KAAKA,GAAS,WAAW,QAAS,CAClC,KAAM,CAAE,QAAApO,CAAQ,EAAI,KAAKoO,GAAS,WAAa,CAAA,EAC3C,GAAA,OAAOpO,GAAY,SAAU,CACvB,MAAAqD,EAAS,SAAS,eAAerD,CAAO,EAC1CqD,IACA,KAAKuQ,GAAevQ,EACxB,MACOrD,aAAmB,cAC1B,KAAK4T,GAAe5T,EACxB,MAEK,KAAA4T,GAAe,SAAS,cAAc,QAAQ,EACnD,KAAKA,GAAa,UAAY,sBAC9B,KAAKzR,GAAQ,cAAc,aAAe,EAAA,YAAY,KAAKyR,EAAY,EAEvE,KAAKA,IACL,KAAKA,GAAa,iBAAiB,QAAS,KAAK,eAAgB9T,CAAa,CAEtF,CAEK,KAAAoT,GAAgB,KAAKzC,GAAO,IACjC,MAAMyD,EAAwC,CAC1C,SAAU,OAAO,IAAI,eAAe,UAAU,SAC9C,QAAS,OAAO,IAAI,eAAe,UAAU,QAC7C,SAAU,OAAO,IAAI,eAAe,UAAU,QAAA,EAG3C,OAAA,IAAI,SAAS,aAAaA,EAAa,KAAK9F,GAAS,WAAa,SAAS,CAAC,EAC5E,OAAA,IAAI,SAAS,qCAAqC,EAAI,EAC7D,OAAO,IAAI,SAAS,oBAAoB,KAAKA,GAAS,gBAAgB,EACtE,OAAO,IAAI,SAAS,gBAAgB,KAAKA,GAAS,YAAY,EAC9D,OAAO,IAAI,SAAS,UAAU,KAAKA,GAAS,QAAQ,EAChD,KAAKA,GAAS,WACd,OAAO,IAAI,SAAS,aAAa,KAAKA,GAAS,SAAS,EAExD,KAAKA,GAAS,aACd,OAAO,IAAI,SAAS,QAAQ,KAAKA,GAAS,WAAW,EAElD,OAAA,IAAI,SAAS,cAAc,cAAc,EACzC,OAAA,IAAI,SAAS,iBAAiB,OAAO,EAEvC,KAAAyF,GAAoB,IAAI,OAAO,IAAI,mBACpC,KAAKjI,GACL,KAAK4E,GACL,KAAKmD,EAAA,EAGT,KAAKD,GAAU,IAAI,OAAO,IAAI,UAAU,KAAKG,EAAiB,EAC9D,KAAKH,GAAQ,iBACT,OAAO,IAAI,sBAAsB,KAAK,mBACtC,KAAK,QACL5T,CAAA,EAGC,KAAA4T,GAAQ,iBAAiB,OAAO,IAAI,aAAa,KAAK,SAAU,KAAK,OAAQ5T,CAAa,EAG3F,OAAO,OAAW,KAClB,OAAO,iBAAiB,SAAU,KAAK,iBAAkBA,CAAa,EAE1E,KAAK0Q,GAAS,iBAAiB,iBAAkB,KAAK,iBAAkB1Q,CAAa,GAIjF,KAAK+S,KAAe,IACpB,KAAKC,KAAoB,IACzBkB,IAAU,IACV,KAAK5F,GAAS,mBAAqB,IACnC,KAAK2E,KAAmB,MAEnB,KAAKP,KACN,KAAKA,GAAQ,GACb,KAAKqB,GAAkB,cAE3B,KAAK,YAAY,EAEzB,CAEA,MAAM,MAAsB,CACpB,GAAA,CAAC,KAAKrB,GAAO,CACb,KAAKO,GAAiB,GACtB,KAAK,gBAAgB,EACrB,MACJ,CAEA,GAAI,KAAKH,GACD,GAAA,CAEI,CAAC,KAAKF,IAAkB,KAAKD,KAAY,GACzC,KAAKG,GAAS,QAEd,KAAKA,GAAS,SAElB,KAAKH,GAAU,GACT,MAAA/O,EAAI5B,EAAS,MAAM,EACpB,KAAA0O,GAAS,cAAc9M,CAAC,OACnB,CACV,KAAK,aAAa,CACtB,CAER,CAEA,OAAc,CACV,GAAI,KAAKkP,GAAU,CACf,KAAKH,GAAU,GACf,KAAKG,GAAS,QACR,MAAAlP,EAAI5B,EAAS,OAAO,EACrB,KAAA0O,GAAS,cAAc9M,CAAC,CACjC,CACJ,CAEA,SAAgB,CACR,KAAKkP,KACA,KAAAA,GAAS,oBAAoB,OAAO,IAAI,aAAa,KAAK,SAAU,KAAK,MAAM,EAEhF,KAAKrQ,IACA,KAAAA,GAAQ,QAASR,GAAU,CAC5B,KAAK6Q,GAAS,oBAAoB7Q,EAAO,KAAK,OAAO,CAAA,CACxD,GAIT,KAAKQ,GAAU,GAET,MAAAuJ,EAAW,KAAK3J,GAAQ,YAAY,EACpCgS,EAAcrI,EAAWA,EAAS,OAAO,MAAQ,CAAA,EACvD,OAAO,KAAKqI,CAAW,EAAE,QAASpS,GAAkB,CAC5C,KAAK6J,IACL,KAAKA,GAAW,oBAAoB7J,EAAOoS,EAAYpS,CAAK,CAAC,CACjE,CACH,EAEG,KAAK2R,KACA,KAAAA,GAAQ,oBAAoB,OAAO,IAAI,aAAa,KAAK,SAAU,KAAK,MAAM,EAC9E,KAAAA,GAAQ,oBAAoB,OAAO,IAAI,sBAAsB,KAAK,mBAAoB,KAAK,OAAO,GAGrG,MAAAU,EAAU,CAAC,MAAM,QAAQ,KAAKd,EAAI,GAAK,KAAKN,GAAgB,KAAKM,GAAK,OACxE,KAAKV,IAAYwB,GACjB,KAAKxB,GAAS,UAGd,KAAKxE,GAAS,aAAa,SAAW,KAAKuF,IAC3C,KAAKA,GAAsB,SAG3B,KAAKvF,GAAS,WAAW,SAAW,KAAKwF,KACzC,KAAKA,GAAa,oBAAoB,QAAS,KAAK,cAAc,EAClE,KAAKA,GAAa,WAGlBzU,GAAUC,IACV,KAAKoR,GAAS,oBAAoB,iBAAkB,KAAK,oBAAoB,EAEjF,KAAKA,GAAS,oBAAoB,iBAAkB,KAAK,gBAAgB,EACzE,KAAKA,GAAS,oBAAoB,iBAAkB,KAAK,sBAAsB,EAC/E,KAAKA,GAAS,oBAAoB,QAAS,KAAK,qBAAqB,EACjE,OAAO,OAAW,KACX,OAAA,oBAAoB,SAAU,KAAK,gBAAgB,EAG1D,KAAK5E,KACL,KAAKA,GAAW,oBAAoB,QAAS,KAAK,uBAAuB,EACzE,KAAKA,GAAW,UAEpB,KAAK,YAAc,KACnB,KAAK,SAAW,GAChB,KAAK4G,GAAQ,GACb,KAAKO,GAAiB,GACtB,KAAKpH,GAAY,EACjB,KAAKF,GAAe,EACpB,KAAK2H,GAAW,IACpB,CAEA,UAAUnO,EAAgBC,EAAuB,CAC7C,GAAI,KAAK0N,GAAU,CACf,MAAMvP,EAAS,KAAKmN,GACd6D,EACFhR,EAAO,aAAa,iBAAiB,IAAM,OACrC,OAAO,IAAI,SAAS,WACpB,OAAO,IAAI,SAAS,OAE9B,IAAIiR,EAAiBrP,EACrB,MAAMsP,EAAkBtP,EAAQA,EAAM,SAAA,EAAa,GAC/CA,GAASsP,EAAgB,QAAQ,GAAG,EAAI,IACpC,KAAK/D,GAAS,gBACd8D,EAAiB,KAAK9D,GAAS,cAAc,aAAe,SAAS+D,EAAiB,EAAE,EAAI,MAIpG,IAAIC,EAAkBtP,EACtB,MAAMuP,EAAmBvP,EAASA,EAAO,SAAA,EAAa,GAClDA,GAAUuP,EAAiB,QAAQ,GAAG,EAAI,IACtC,KAAKjE,GAAS,gBACdgE,EAAkB,KAAKhE,GAAS,cAAc,cAAgB,SAASiE,EAAkB,EAAE,EAAI,MAInG,IAAAjK,EAEAA,GAAW,OAAO,OAAW,KAC7B,OAAO,qBAAqBA,CAAO,EAEnC,OAAO,OAAW,MACRA,EAAA,OAAO,sBAAsB,IAAM,CACzC,KAAKoI,GAAS,OACV0B,GAAkBjR,EAAO,YACzBmR,GAAmBnR,EAAO,aAC1BgR,CAAA,CACJ,CACH,EAET,CACJ,CAEA,eAAyB,CACrB,OAAO,KAAKzB,EAChB,CAEA,cAAoB,CAChB,OAAO,KAAKc,EAChB,CAEA,SAAmB,CACf,OAAO,KAAK3D,EAChB,CAEA,IAAI,IAAIG,EAA2B,CAC/B,KAAKoD,GAAOpD,CAChB,CAEA,IAAI,OAAO1O,EAAgB,CACvB,KAAKgR,GAAQhR,CACjB,CAEA,IAAI,cAAcA,EAAgB,CAC9B,KAAKuR,GAAiBvR,CAC1B,CAEA,IAAI,OAAOA,EAAe,CAClB,KAAKoR,KACL,KAAKxG,GAAU5K,EACV,KAAAoR,GAAS,UAAUpR,CAAK,EAC7B,KAAK,gBAAgBA,CAAK,EAC1B,KAAKmR,GAASnR,IAAU,EAEhC,CAEA,IAAI,QAAiB,CACjB,OAAO,KAAKoR,GAAW,KAAKA,GAAS,YAAc,KAAKW,EAC5D,CAEA,IAAI,MAAM/R,EAAgB,CAClB,KAAKoR,KACDpR,GACK,KAAAoR,GAAS,UAAU,CAAC,EACzB,KAAKD,GAAS,GACd,KAAK,gBAAgB,CAAC,IAEjB,KAAAC,GAAS,UAAU,KAAKxG,EAAO,EACpC,KAAKuG,GAAS,GACT,KAAA,gBAAgB,KAAKvG,EAAO,GAG7C,CAEA,IAAI,OAAiB,CACjB,OAAO,KAAKuG,EAChB,CAEA,IAAI,YAAYnR,EAAe,CAC3B,KAAKiK,GAAejK,CACxB,CAEA,IAAI,aAAsB,CACtB,OAAO,KAAKiK,EAChB,CAEA,IAAI,UAAmB,CACnB,OAAO,KAAKE,EAChB,CAEA,IAAI,QAAkB,CAClB,MAAO,CAAC,KAAK8G,EACjB,CAEA,IAAI,OAAiB,CACjB,OAAO,KAAKF,EAChB,CAEQ,QAAQxQ,EAAkB,CACxB,MAAA2S,EAAK3S,EAAM,QAIjB,OAHI2S,IACA,KAAKtB,GAAWsB,GAEZ3S,EAAM,KAAM,CAChB,KAAK,OAAO,IAAI,QAAQ,KAAK,OACrB,GAAA,CAAC2S,EAAG,WACJ,KAAK,0BAA0B,UAE3BxV,GAAaa,EAAQ,KAAKyQ,EAAQ,IAClC,KAAKA,GAAS,SAAW,IAExB,KAAA7E,GAAY+I,EAAG,cACf,KAAAjJ,GAAeiJ,EAAG,cACnB,CAAC,KAAKvB,IAAiB,CAAChU,GAAU,CAACC,EAAY,CACzC,MAAAuV,EAAe7S,EAAS,SAAS,EAClC,KAAA0O,GAAS,cAAcmE,CAAY,EAElC,MAAAC,EAAc9S,EAAS,gBAAgB,EACxC,KAAA0O,GAAS,cAAcoE,CAAW,EAEvC,KAAK,UAAU,CACnB,CAEJ,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,QACrB,GAAAF,EAAG,WAAY,CAEX,KAAKlE,GAAS,eACd,CAAC,KAAKA,GAAS,cAAc,UAAU,SAAS,gBAAgB,GAEhE,KAAKA,GAAS,cAAc,UAAU,IAAI,gBAAgB,EAGzD,KAAKC,GAAO,QACb,KAAKA,GAAO,QAEhB,KAAKgC,GAAU,GACT,MAAAoC,EAAY/S,EAAS,MAAM,EAC5B,KAAA0O,GAAS,cAAcqE,CAAS,EACjC,IAAAC,EAOA,GALCA,IACD,KAAK,UAAU,EACLA,EAAA,IAGV,KAAKrE,GAAO,MAAO,CACnB,KAAK8B,GAAS,GACR,MAAAwC,EAAWjT,EAAS,eAAe,EACpC,KAAA0O,GAAS,cAAcuE,CAAQ,CACxC,CAEI,OAAO,OAAW,MACb,KAAArC,GAAiB,OAAO,YAAY,IAAM,CACvC,GAAA,KAAKD,KAAY,GAAM,CACvB,KAAKhH,GAAe,KAAK,MAAM,KAAKmH,GAAS,kBAAkB,EACzD,MAAApD,EAAY1N,EAAS,YAAY,EAClC,KAAA0O,GAAS,cAAchB,CAAS,CACzC,GACD,GAAG,EAEd,CACA,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,SAC7B,KAAK,OAAO,IAAI,QAAQ,KAAK,QACrB,GAAAkF,EAAG,WAAY,CACf,GAAI3S,EAAM,OAAS,OAAO,IAAI,QAAQ,KAAK,QAAS,CAC1C,MAAAiT,EAAYlT,EAAS,YAAY,EAClC,KAAA0O,GAAS,cAAcwE,CAAS,CACzC,CAEI,KAAKxE,GAAS,eACd,KAAKA,GAAS,cAAc,UAAU,OAAO,gBAAgB,EAEjE,KAAKiC,GAAU,GACf,cAAc,KAAKC,EAAc,CACrC,CACA,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,eACpB,KAAA,gBAAgB,KAAK,MAAM,EAChC,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,aACrB,GAAAgC,EAAG,WAAY,CACT,MAAAO,EAAcnT,EAAS,cAAc,EACtC,KAAA0O,GAAS,cAAcyE,CAAW,CAC3C,CACA,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,kBACrB,GAAAP,EAAG,aACH,KAAKjC,GAAU,GACf,KAAKF,GAAS,GACd,KAAKG,GAAiB,EACtB,KAAKC,GAAS,GACd,KAAK5C,GAAW,GAChB,KAAKqD,GAAW,KACZ,KAAK5C,GAAS,eACd,KAAKA,GAAS,cAAc,UAAU,OAAO,gBAAgB,EAEjE,KAAK,QAAQ,EACT,KAAKA,GAAS,aAAe,KAAKA,GAAS,UAAU,CAC/C,MAAA0E,EAAapT,EAAS,OAAO,EAC9B,KAAA0O,GAAS,cAAc0E,CAAU,CAC1C,CAEJ,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,MACnB,MAAAC,EAAarT,EAAS,OAAO,EAC9B,KAAA0O,GAAS,cAAc2E,CAAU,EACtC,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,eACpB,KAAK/G,GAAS,kBACf,KAAK,KAAK,EAEd,MACJ,KAAK,OAAO,IAAI,QAAQ,KAAK,YACnB,MAAAgH,EAAerT,EAAM,YACrBxB,EAAS,KAAK6S,GAAW,KAAKA,GAAS,oBAAsB,GACnE,GAAI,KAAKQ,GACL,GAAIrT,IAAW,GAAI,CACT,MAAA8U,EAAU,KAAKzC,GAAS,oBAAoB,EAC5C0C,EAAgB,KAAK,KAAK/U,EAAS6U,EAAa,WAAW,EAC5D,KAAAxB,GAAa,UAAU,OAAO,QAAQ,EACvCyB,GACA,KAAKzB,GAAa,YAAc,KAAKxF,GAAS,WAAW,OAAS,GAC7D,KAAAwF,GAAa,UAAU,OAAO,UAAU,IAExC,KAAAA,GAAa,YACd,KAAKxF,GAAS,WAAW,eAAe,QAAQ,WAAYkH,EAAc,SAAU,CAAA,GACpF,GACC,KAAA1B,GAAa,UAAU,IAAI,UAAU,EAC9C,MAEK,KAAAA,GAAa,UAAU,IAAI,QAAQ,EAGhD,KAGR,CAIA,GAAI7R,EAAM,OAAS,OAAO,IAAI,QAAQ,KAAK,IAAK,CACtC,MAAAwT,EAASxT,EAAM,YACrB,GAAIwT,EAAO,QAAS,CACV,MAAAnF,EAAUmF,EAAO,QAAQ,WAAW,EAClC,QAAA,KAAK,yCAAyCnF,CAAO,EAAE,EAC/D,MAAMpO,EAAU,CACZ,OAAQ,CACJ,KAAMuT,EAAO,QACb,QAAAnF,EACA,KAAM,KACV,CAAA,EAEE7B,EAAazM,EAAS,cAAeE,CAAO,EAC7C,KAAAwO,GAAS,cAAcjC,CAAU,CAC1C,CAAA,KACG,CACH,MAAM7K,EAAI5B,EAAS,MAAMC,EAAM,IAAI,EAAE,EAChC,KAAAyO,GAAS,cAAc9M,CAAC,CACjC,CACJ,CAGQ,OAAO3B,EAAkB,CACvB,MAAAuO,EAAQvO,EAAM,WACdC,EAAU,CACZ,OAAQ,CACJ,KAAMsO,EACN,QAASA,EAAM,SAAS,EACxB,KAAM,KACV,CAAA,EAEE/B,EAAazM,EAAS,cAAeE,CAAO,EAC7C,KAAAwO,GAAS,cAAcjC,CAAU,EAGtC,MAAMiH,EAAkB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAA,EAGV,MAAM,QAAQ,KAAKlC,EAAI,GAAK,KAAKA,GAAK,OAAS,GAAK,KAAKN,GAAgB,KAAKM,GAAK,OAAS,GACvF,KAAAN,KACL,KAAK,QAAQ,EACb,KAAKjD,GAAW,GAChB,KAAKgD,GAAiB,GACtB,KAAK,KAAK,EAAI,EACd,QAAQ,KAAK,eAAezC,EAAM,SAAA,CAAU,EAAE,IAG1CkF,EAAgB,QAAQlF,EAAM,aAAc,CAAA,EAAI,IAC5C,KAAKsC,IACL,KAAKA,GAAS,UAElB,QAAQ,MAAM,aAAatC,EAAM,SAAA,CAAU,EAAE,GAE7C,QAAQ,KAAK,eAAeA,EAAM,SAAA,CAAU,EAAE,EAElD,KAAK8C,GAAW,MACZ,KAAKP,KAAe,IAAQ,KAAKC,KAAoB,IAAQ,KAAK/C,KAAa,MAC/E,KAAK0C,GAAU,GAGf,KAAK,aAAa,GAG9B,CAEQ,QAAQgD,EAA+B,CAC3C,MAAMC,EAAuB,IAAI,OAAO,IAAI,qBAC5CA,EAAqB,4CAA8C,GAC9CA,EAAA,iBAAmB,KAAKtH,GAAS,iBAEtD,KAAKwE,GAAW6C,EAAmB,cAAc,KAAKjF,GAAUkF,CAAoB,EAC/E,KAAA,OAAO,KAAK9C,EAAQ,EACzB,KAAK,YAAc,IAAI,QAAexS,GAAY,CACtCA,GAAA,CACX,CACL,CAEQ,OAAOuV,EAAoB,CAC3B,KAAKhC,IAAyBgC,EAAQ,0BAAA,GACjC,KAAAhC,GAAsB,UAAU,IAAI,kCAAkC,EAGvEgC,EAAA,iBACJ,OAAO,IAAI,QAAQ,KAAK,wBACxB,KAAK,yBACL7V,CAAA,EAEI6V,EAAA,iBACJ,OAAO,IAAI,QAAQ,KAAK,yBACxB,KAAK,0BACL7V,CAAA,EAGJ,KAAKyC,GAAU,CACX,OAAO,IAAI,QAAQ,KAAK,kBACxB,OAAO,IAAI,QAAQ,KAAK,MACxB,OAAO,IAAI,QAAQ,KAAK,cACxB,OAAO,IAAI,QAAQ,KAAK,mBACxB,OAAO,IAAI,QAAQ,KAAK,YACxB,OAAO,IAAI,QAAQ,KAAK,aACxB,OAAO,IAAI,QAAQ,KAAK,WACxB,OAAO,IAAI,QAAQ,KAAK,gBACxB,OAAO,IAAI,QAAQ,KAAK,WACxB,OAAO,IAAI,QAAQ,KAAK,eACxB,OAAO,IAAI,QAAQ,KAAK,wBACxB,OAAO,IAAI,QAAQ,KAAK,YACxB,OAAO,IAAI,QAAQ,KAAK,YACxB,OAAO,IAAI,QAAQ,KAAK,SACxB,OAAO,IAAI,QAAQ,KAAK,eACxB,OAAO,IAAI,QAAQ,KAAK,OACxB,OAAO,IAAI,QAAQ,KAAK,SACxB,OAAO,IAAI,QAAQ,KAAK,OACxB,OAAO,IAAI,QAAQ,KAAK,QACxB,OAAO,IAAI,QAAQ,KAAK,WACxB,OAAO,IAAI,QAAQ,KAAK,QACxB,OAAO,IAAI,QAAQ,KAAK,eACxB,OAAO,IAAI,QAAQ,KAAK,QACxB,OAAO,IAAI,QAAQ,KAAK,eACxB,OAAO,IAAI,QAAQ,KAAK,aACxB,OAAO,IAAI,QAAQ,KAAK,GAAA,EAGvB,KAAK6L,GAAS,kBAEf,KAAK7L,GAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,cAAc,EAGtD,MAAAuJ,EAAW,KAAK3J,GAAQ,YAAY,EACpCgS,EAAcrI,EAAWA,EAAS,OAAO,MAAQ,CAAA,EAUnD,GATJ,OAAO,KAAKqI,CAAW,EAAE,QAASpS,GAAkB,CAC5C,KAAK6J,IACL,KAAKA,GAAW,iBAAiB7J,EAAOoS,EAAYpS,CAAK,EAAGjC,CAAa,CAC7E,CACH,EACI,KAAAyC,GAAQ,QAASR,GAAU,CAC5B4T,EAAQ,iBAAiB5T,EAAO,KAAK,QAASjC,CAAa,CAAA,CAC9D,EAEG,KAAK+S,KAAe,IAAQ,KAAKC,KAAoB,IAAQ,KAAKC,KAAmB,GAAM,CAEvF,GADJ,KAAKA,GAAiB,GAClB,CAAC,KAAKP,GAAO,CACb,KAAK,gBAAgB,EACrB,MACJ,CACQmD,EAAA,KACJ,KAAKnF,GAAS,YACd,KAAKA,GAAS,aACd,KAAKA,GAAS,eAAiB,KAAKA,GAAS,cAAc,aAAa,iBAAiB,IAAM,OACzF,OAAO,IAAI,SAAS,WACpB,OAAO,IAAI,SAAS,MAAA,EAE9BmF,EAAQ,MAAM,EACR,MAAAjS,EAAI5B,EAAS,MAAM,EACpB,KAAA0O,GAAS,cAAc9M,CAAC,CACtB,MAAA,KAAK0K,GAAS,mBAAqB,IAClCuH,EAAA,KACJ,KAAKnF,GAAS,YACd,KAAKA,GAAS,aACd,KAAKA,GAAS,eAAiB,KAAKA,GAAS,cAAc,aAAa,iBAAiB,IAAM,OACzF,OAAO,IAAI,SAAS,WACpB,OAAO,IAAI,SAAS,MAAA,CAGtC,CAEQ,iBAAwB,CACxB,KAAKqD,IACL,KAAKrB,GAAQ,GACb,KAAKqB,GAAkB,aAEnB1U,GAAUC,GACV,KAAK2U,GAAkB,KAAK,qBAC5B,KAAKvD,GAAS,iBAAiB,iBAAkB,KAAK,qBAAsB1Q,CAAa,EACzF,KAAK0Q,GAAS,QAEd,KAAK,qBAAqB,IAG9B,KAAK,KAAK,EACV,KAAK,SAAW,GAExB,CAEQ,uBAA8B,CAClC,KAAK+B,GAAS,GACd,KAAKE,GAAU,GACf,KAAK1C,GAAW,GAChB,KAAK2D,GAAQ,iBACjB,CAEQ,0BAAiC,CACrC,KAAKlD,GAAS,oBAAoB,QAAS,KAAK,qBAAqB,EAChE,KAAAyC,GAAkB,KAAKxC,GAAO,YAE/B,KAAKV,GACL,KAAKU,GAAO,QAEZ,KAAKV,GAAW,GAEd,MAAArM,EAAI5B,EAAS,MAAM,EACpB,KAAA0O,GAAS,cAAc9M,CAAC,CACjC,CAEQ,2BAAkC,CAGtC,GAFA,KAAK8M,GAAS,iBAAiB,QAAS,KAAK,sBAAuB1Q,CAAa,EACjF,KAAK0Q,GAAS,iBAAiB,iBAAkB,KAAK,uBAAwB1Q,CAAa,EACvFX,GAAUC,EACL,KAAAqR,GAAO,IAAM,KAAKyC,GACvB,KAAKzC,GAAO,OACZ,KAAK,cAAc,EACf,KAAKD,GAAS,eACd,KAAKA,GAAS,cAAc,UAAU,IAAI,gBAAgB,MAE3D,CACG,MAAAzO,EAAQD,EAAS,gBAAgB,EAClC,KAAA0O,GAAS,cAAczO,CAAK,CACrC,CACJ,CAEQ,wBAA+B,CAC/B,MAAM,QAAQ,KAAKuR,EAAI,GAClB,KAAAN,KACD,KAAKA,IAAiB,KAAKM,GAAK,OAAS,GACrC,KAAKV,IACL,KAAKA,GAAS,UAElB,KAAKc,GAAQ,kBACb,KAAKX,GAAiB,GACtB,KAAKhD,GAAW,GAChB,KAAKyC,GAAQ,GACb,KAAK,KAAK,EAAI,IAET,KAAKpE,GAAS,kBACf,KAAK,0BAA0B,EAEnC,KAAK,cAAc,IAEhB,KAAKoC,GAAS,SAAS,OAC1B,KAAKA,GAAS,SAAS,IAAI,CAAC,EAAI,KAAKyC,KAChC,KAAK7E,GAAS,kBACf,KAAK,0BAA0B,EAEnC,KAAK,cAAc,GAGZ,WAAA,KAAK,uBAAwB,GAAG,CAEnD,CAEQ,cAAqB,CAUrB,GATJ,KAAKsE,GAAiB,EACtB,KAAKC,GAAS,GACd,KAAK5C,GAAW,GAChB,KAAKpE,GAAY,EACjB,KAAKF,GAAe,EAChB,KAAK+E,GAAS,eACd,KAAKA,GAAS,cAAc,UAAU,OAAO,gBAAgB,EAG7D,KAAKC,GAAO,MAAO,CACb,MAAA/M,EAAI5B,EAAS,OAAO,EACrB,KAAA0O,GAAS,cAAc9M,CAAC,CAAA,KAEzB,IAAA,CACA,KAAK+M,GAAO,OACZ,WAAW,IAAM,CACP,MAAA/M,EAAI5B,EAAS,MAAM,EACpB,KAAA0O,GAAS,cAAc9M,CAAC,GAC9B,EAAE,QACA6L,EAAK,CACV,QAAQ,MAAMA,CAAG,CACrB,CAER,CAEQ,aAAoB,CACxB,KAAKuE,GAAW,IAAI,OAAO,IAAI,WACzB,MAAA1B,EAAM,MAAM,QAAQ,KAAKkB,EAAI,EAAI,KAAKA,GAAK,KAAKN,EAAa,EAAI,KAAKM,GAExE5R,EAAM0Q,CAAG,EACT,KAAK0B,GAAS,YAAc1B,EAE5B,KAAK0B,GAAS,SAAW1B,EAG7B,MAAMnN,EAAQ,KAAKuL,GAAS,cAAgB,KAAKA,GAAS,cAAc,YAAc,EAChFtL,EAAS,KAAKsL,GAAS,cAAgB,KAAKA,GAAS,cAAc,aAAe,EACxF,KAAKsD,GAAS,kBAAoB7O,EAClC,KAAK6O,GAAS,mBAAqB5O,EACnC,KAAK4O,GAAS,qBAAuB7O,EAChC,KAAA6O,GAAS,sBAAwB5O,EAAS,EAC1C,KAAA4O,GAAS,kBAAkB,KAAKjB,EAAU,EAC1C,KAAAiB,GAAS,mBAAmB,KAAKhB,EAAe,EAChD,KAAAY,GAAQ,WAAW,KAAKI,EAAQ,CACzC,CAOQ,sBAA6B,CAC7B,KAAKC,KACL,KAAKvD,GAAS,oBAAoB,iBAAkB,KAAKuD,EAAe,EACxE,KAAKA,GAAkB,MAE3B,KAAK,YAAY,CACrB,CAGQ,2BAAkC,CAClC,KAAKnB,IACL,KAAKA,GAAS,UAElB,KAAKc,GAAQ,kBACb,KAAKlB,GAAQ,GACb,KAAKO,GAAiB,EAC1B,CAEQ,eAAsB,CACrB,KAAAtC,GAAO,YAAc,KAAKwC,GAC/B,KAAKzC,GAAS,oBAAoB,iBAAkB,KAAK,sBAAsB,EAC/E,KAAK,aAAa,CACtB,CAEQ,gBAAgBoF,EAAsB,CAC1C,KAAKnF,GAAO,OAASmF,EAChB,KAAAnF,GAAO,MAAQmF,IAAW,CACnC,CAEQ,yBAAgC,CAChC,GAAA,KAAKnF,GAAO,OAAQ,CACd,MAAA/M,EAAI5B,EAAS,QAAQ,EACtB,KAAA0O,GAAS,cAAc9M,CAAC,EAC7B,KAAK,MAAM,CACf,CACJ,CAEQ,kBAAyB,CAC7B,KAAK,UAAU,CACnB,CAEQ,gBAAuB,CAC3B,KAAKkP,GAAS,MAClB,CACJ,CCv7BA,MAAM5K,CAAO,CAiIT,YAAYhI,EAAoCwE,EAAyB,CAjG5D,KAAA,MAAA,KAMN,KAAAqR,GAAA,GAQP,KAAAtT,GAAsB,GAEV,KAAA0M,GAAA,GAIG,KAAA6G,GAAA,GAEK,KAAAC,GAAA,GAEC,KAAAC,GAAA,GAIrB,KAAAC,GAAiC,GAIA,KAAAC,GAAA,CAC7B,SAAU,CACN,cAAe,GACf,OAAQ,CACJ,KAAM,CAAC,OAAQ,OAAQ,QAAQ,EAC/B,OAAQ,CAAC,UAAU,EACnB,MAAO,CAAC,WAAY,WAAY,YAAY,CAChD,CACJ,EACA,aAAc,OACd,YAAa,GACb,YAAa,GACb,OAAQ,EACR,iBAAkB,IAClB,OAAQ,CACJ,KAAM,OACN,SAAU,eACV,MAAO,kBACP,WAAY,aACZ,KAAM,CACF,GAAI,SACR,EACA,OAAQ,iBACR,KAAM,iBACN,YAAa,iBACb,KAAM,OACN,IAAK,MACL,MAAO,QACP,KAAM,OACN,aAAc,YACd,eAAgB,cAChB,SAAU,kBACV,MAAO,QACP,YAAa,SACb,IAAK,gBACL,eAAgB,kBAChB,OAAQ,SACR,OAAQ,SACR,cAAe,iBACf,aAAc,eAClB,EACA,KAAM,CACF,UAAW,GACX,aAAc,EAClB,EACA,MAAO,CACH,aAAc,EAClB,EACA,KAAM,aACN,QAAUxS,GAAe,QAAQ,MAAMA,CAAC,EACxC,YAAa,GACb,SAAU,CACN,YAAa,GACb,UAAW,GACX,SAAU,EACV,oBAAqB,EACzB,EACA,iBAAkB,GAClB,UAAW,EACX,YAAa,EACb,KAAM,EACN,gBAAiB,GACjB,MAAO,CAAA,EAIP,KAAK8M,GACDxQ,aAAmB,iBAAmBA,EAAW,SAAS,eAAeA,CAAO,EAChF,KAAKwQ,KACA,KAAAvB,GAAY,KAAKuB,GAAS,UAAY,GACvC,OAAOhM,GAAY,UAAY,CAAC,MAAM,QAAQA,CAAO,GACrD,KAAK,cAAcA,CAAO,EAE9B,KAAKgM,GAAS,OAAS,KAAKpC,GAAS,aAAe,EAEhD,KAAKA,GAAS,KAAO,KAAKA,GAAS,IAAI,MAClC,KAAAkF,GAAO,KAAKlF,GAAS,IAAI,MAE7B,KAAKA,IAAU,WAAa,GAAK,IAClC,KAAKoC,GAAS,YAAc,KAAKpC,GAAS,WAAa,GAEtD,KAAAhC,GAAU,KAAKoE,GAAS,QAEjC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,mBAAqB,KAAK,mBAAmB,KAAK,IAAI,CAC/D,CApJA,MAAA,CAAA,KAAO,UAAiC,EAAC,CAEzC,MAAA,CAAA,KAAO,YAA2B,CAC9B,MAAO,CAAC,EACR,WAAY,CAAC,EACb,MAAO,CAAC,CAAA,CACZ,CAEA,OAAO,MAAa,CAChBxI,EAAO,UAAY,GACb,MAAAmO,EAAU,SAAS,iBAAiB,kCAAkC,EAC5E,QAASpV,EAAI,EAAGC,EAAQmV,EAAQ,OAAQpV,EAAIC,EAAOD,IAAK,CAC9C,MAAAsC,EAAS8S,EAAQpV,CAAC,EAClBqV,EAAW/S,EAAO,aAAa,kBAAkB,EACjDmB,EAAU4R,EAAW,KAAK,MAAMA,CAAQ,EAAI,GACnC,IAAIpO,EAAO3E,EAAQmB,CAAO,EAClC,KAAK,CAChB,CACJ,CAEA,OAAO,SAASjD,EAAc8M,EAAkBgI,EAAgCzQ,EAAqB,CAC1FoC,EAAA,YAAY,MAAMqG,CAAQ,EAAIzI,EAC9BoC,EAAA,YAAY,WAAWqG,CAAQ,EAAI9M,EACnCyG,EAAA,YAAY,MAAM,KAAKqO,CAAK,CACvC,CASAvJ,GAEAwJ,GAEAT,GAEArF,GAEA8C,GAEA7C,GAEAlO,GAEA0M,GAEA7C,GAEA0J,GAEAC,GAEAC,GAEA5H,GAEA6H,GAEAM,GAEAL,GAuFA,MAAM,MAAsB,CACpB,KAAK,aACL,KAAK,cAAc,EACnB,MAAM,KAAK,gBACX,KAAK,kBAAkB,EACvB,KAAK,WAAW,EAChB,KAAK,gBAAgB,EACrB,KAAK,WAAW,EACTlO,EAAA,UAAU,KAAK,EAAE,EAAI,KAEpC,CAEA,MAAM,MAAsB,CACpB,OAAC,KAAKyI,IAIV,KAAKA,GAAO,OAAS,GACd,KAAK,UAAY,KAAKA,GAAO,OAAS,SAJzC,MAAM,KAAK,gBACH,KAAKA,GAAiB,OAItC,CAEA,MAAM,MAAsB,CAKxB,OAJK,KAAKA,GAAO,SACP,MAAA,KAAKA,GAAO,OAClB,KAAKA,GAAO,OAAS,IAErB,KAAK6F,IACL,KAAKA,GAAa,cAAgB,GAClC,MAAM,KAAKA,GAAa,YACjB,KAAKA,GAAa,QAEtB,KAAK7F,GAAO,MACvB,CAEA,OAAc,CACN,KAAK6F,GACL,KAAKA,GAAa,QAElB,KAAK7F,GAAO,OAEpB,CAEA,MAAa,CACT,KAAK,MAAM,EAEP,KAAKA,KACL,KAAKA,GAAO,YAAc,EAC1B,KAAK,IAAM,CAAC,CAAE,IAAK,GAAI,KAAM,YAAa,EAElD,CAEA,SAAgB,CACR,KAAK6F,KACL,KAAKA,GAAa,QAClB,KAAKA,GAAa,WAGlB,KAAKC,IACL,KAAKA,GAAY,UAGrB,MAAM/V,EAAK,KAAKgQ,GACZ,KAAKC,IACL,KAAKA,GAAO,UAGhB,OAAO,KAAK,KAAKlO,EAAO,EAAE,QAASR,GAAU,CACzCvB,EAAG,oBAAoBuB,EAAO,KAAKQ,GAAQR,CAAK,CAAC,CAAA,CACpD,EAED,KAAK,aAAa,EAAE,oBAAoB,UAAW,KAAK,kBAAkB,EAEtE,KAAKkN,IAAa,CAAC,KAAK+G,IAAsBjW,EAAQ,KAAKyQ,EAAQ,GAChEhQ,EAAA,oBAAoB,UAAW,KAAK,SAAS,EAEhD,KAAKsM,IACL,KAAKA,GAAU,UAGf/M,EAAQ,KAAKyQ,EAAQ,IACjB,KAAK,SACL,KAAK,QAAQ,SAEb,KAAK,QACL,KAAK,OAAO,UAIhB,KAAKpC,IAAU,SACf,KAAKoC,GAAS,oBAAoB,cAAe,KAAKpC,GAAS,OAAO,EAG1E5N,EAAG,SAAW,GACXA,EAAA,aAAa,KAAM,KAAKqV,EAAI,EAC/BrV,EAAG,gBAAgB,kBAAkB,EACrCA,EAAG,gBAAgB,iBAAiB,EACpC,MAAMgW,EACF,KAAKpI,GAAS,OAAS,OAAS,CAACnO,EAAQO,CAAE,EAAIA,EAAG,QAAQ,0BAA0B,EAAIA,EAAG,cAC3FgW,GAAUA,EAAO,YACVA,EAAA,WAAW,aAAahW,EAAIgW,CAAM,EAGtC,OAAAxO,EAAO,UAAU,KAAK6N,EAAI,EAE3B,MAAAnS,EAAI5B,EAAS,iBAAiB,EACpCtB,EAAG,cAAckD,CAAC,CACtB,CAEA,cAA4B,CACjB,OAAA,KAAK8M,GAAS,eAAiB,KAAKA,EAC/C,CAEA,aAAwB,CACpB,OAAO,KAAK1D,EAChB,CAEA,mBAAmC,CAC/B,OAAO,KAAKmJ,EAChB,CAEA,YAA+B,CAC3B,OAAO,KAAKzF,EAChB,CAEA,WAAwB,CACpB,OAAO,KAAKjO,EAChB,CAEA,YAA4B,CACxB,OAAO,KAAK6L,EAChB,CAEA,eAA6B,CAClB,OAAA,KAAKkI,IAAgB,KAAKA,GAAa,QAAY,EAAA,KAAKA,GAAe,KAAK7F,EACvF,CAEA,SAAmB,CACR,OAAA,KAAK,cAA2B,YAAAF,CAC3C,CAEA,MAAgB,CACL,OAAA,KAAK,cAA2B,YAAA4B,CAC3C,CAEA,UAAkB,CACd,OAAO,KAAK1B,EAChB,CAEA,OAAa,CACT,OAAO,KAAK6F,EAChB,CAEA,YAAY7H,EAAmB,CAC3B,GAAIA,EAAK,QAAS,CACd,MAAMgI,EAAS,KAAKjG,GAAS,iBAAiB,OAAO,EACrD,QAASzP,EAAI,EAAGC,EAAQyV,EAAO,OAAQ1V,EAAIC,EAAOD,IAC7C0V,EAAO1V,CAAC,EAAuB,QAAU,EAElD,CAEA,MAAMP,EAAK,KAAKgQ,GAGZ,IAAAjN,EAAQ/C,EAAG,cAAc,kBAAkBiO,EAAK,OAAO,YAAYA,EAAK,IAAI,IAAI,EAChFlL,GACAA,EAAM,IAAMkL,EAAK,IACjBlL,EAAM,MAAQkL,EAAK,MACblL,EAAA,QAAUkL,EAAK,SAAW,KAExBlL,EAAA,SAAS,cAAc,OAAO,EACtCA,EAAM,QAAUkL,EAAK,QACrBlL,EAAM,IAAMkL,EAAK,IACjBlL,EAAM,KAAOkL,EAAK,KAClBlL,EAAM,MAAQkL,EAAK,MACblL,EAAA,QAAUkL,EAAK,SAAW,GAChCjO,EAAG,YAAY+C,CAAK,GAGlB,MAAAG,EAAI5B,EAAS,iBAAiB,EACpCtB,EAAG,cAAckD,CAAC,CACtB,CAEA,WAAW+K,EAAyB,CAChCA,EAAK,OAAS,GACdA,EAAK,KAAO,SACP,KAAAwH,GAAgB,KAAKxH,CAAI,EACxB,MAAA,EAAI3M,EAAS,iBAAiB,EAC/B,KAAA0O,GAAS,cAAc,CAAC,CACjC,CAEA,WAAW/B,EAAyB,CAChCA,EAAK,OAAS,GACT,KAAAwH,GAAgB,KAAKxH,CAAI,EACxB,MAAA,EAAI3M,EAAS,iBAAiB,EAC/B,KAAA0O,GAAS,cAAc,CAAC,CACjC,CAEA,cAAckG,EAA2B,CAErC,KAAKT,GAAgB,QAAQ,CAACzS,EAAmByM,IAAgB,CACzDzM,EAAK,KAAOkT,GACP,KAAAT,GAAgB,OAAOhG,EAAK,CAAC,CACtC,CACH,EACK,MAAA,EAAInO,EAAS,iBAAiB,EAC/B,KAAA0O,GAAS,cAAc,CAAC,CACjC,CAEA,MAAM,eAA+B,CAC7B,GAAA,CACI,KAAKpC,IAAU,SACf,KAAKoC,GAAS,iBAAiB,cAAe,KAAKpC,GAAS,QAAStO,CAAa,EAElF,KAAKmP,IAAalP,EAAQ,KAAKyQ,EAAQ,GACvC,KAAKA,GAAS,iBAAiB,UAAW,KAAK,UAAW1Q,CAAa,EAEtE,KAAA2Q,GAAS,IAAIF,EAAM,KAAKC,GAAU,KAAKpC,GAAU,KAAKa,GAAWjH,EAAO,WAAW,EACxF,MAAM2O,EAAU,KAAKnG,GAAS,aAAa,SAAS,EAMpD,IALI,KAAK8C,IAAQ,CAACqD,GAAWA,IAAY,UAC/B,MAAA,KAAKlG,GAAO,OAClB,KAAKA,GAAO,OAAS,IAGrB,CAAC,KAAKxB,IAAa,KAAKqE,GAAM,CACxB,MAAAsD,EAAa,KAAKxI,IAAY,KAAKA,GAAS,IAAM,KAAKA,GAAS,IAAM,OACvE,KAAAkI,GAAe,IAAInE,EAAI,KAAM,KAAKmB,GAAM,GAAO,GAAOsD,CAAU,CACzE,QACKlT,EAAG,CACR,QAAQ,MAAMA,CAAC,CACnB,CACJ,CAEA,qBAA4B,CACxB,IAAImT,EAAS,GACT5P,EAAc,EAEd,KAAK,OAAS,CAAC,KAAK,MAAM,SACjB4P,EAAA,GACT5P,EAAc,KAAK,MAAM,YACzB,KAAK,MAAM,SAGf,KAAK,MAAQ,KACb,KAAK,WAAW,EAAE,iBAAiB,iBAAkB,IAAY,CACxD,KAAA,SAAA,EAAW,YAAcA,EACzB4P,GACD,KAAK,KAAK,CACd,CACH,CACL,CAEA,MAAM,OAAOtF,EAAuC,CAC5C,GAAA,CACI,GAAA,KAAK,OACA,KAAA,QAAQ,UACR,KAAA,MAAA,EAAQ,IAAMA,EACd,KAAA,MAAA,EAAQ,SAAW,GACnB,KAAA,QAAQ,WACV,CACG,MAAAqF,EAAa,KAAKxI,IAAY,KAAKA,GAAS,IAAM,KAAKA,GAAS,IAAM,OACtEjI,EAAW,CAAC,KAAK,cAAc,EAAE,QAAU,KAAK2P,GACjD,KAAAQ,GAAe,IAAInE,EAAI,KAAMZ,EAAKpL,EAAU,KAAK4P,GAAmBa,CAAU,CACvF,QACKrH,EAAK,CACV,QAAQ,MAAMA,CAAG,CACrB,CACJ,CAEA,IAAI,IAAI3J,EAAO,CACP,KAAK6K,cAAkBF,GAClB,KAAAE,GAAO,WAAa,GACzB,KAAKA,GAAO,IAAM7K,GACX,OAAOA,GAAU,SACxB,KAAK4K,GAAS,IAAM5K,EACb,MAAM,QAAQA,CAAK,EACpBA,EAAA,QAASyC,GAAM,CACX,MAAA6H,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,IAAM7H,EAAE,IACf6H,EAAO,KAAO7H,EAAE,MAAQtC,EAAgBsC,EAAE,IAAK,KAAKmI,EAAQ,EACvD,KAAAA,GAAS,YAAYN,CAAM,CAAA,CACnC,EACM,OAAOtK,GAAU,WACnB,KAAA4K,GAAS,IAAO5K,EAAiB,IAE9C,CAEA,IAAI,KAAgB,CAChB,OAAO,KAAK6K,GAAO,GACvB,CAEA,IAAI,IAAa,CACb,OAAO,KAAKoF,EAChB,CAEQ,UAAoB,CACxB,MAAMrV,EAAK,KAAKgQ,GAUhB,MARI,IAAAhQ,aAAc,cAId,CAACP,EAAQO,CAAE,GAAK,CAACT,EAAQS,CAAE,GAI3B,CAACA,EAAG,UAAU,SAAS,kBAAkB,EAKjD,CAEQ,eAAsB,CACpB,MAAA4E,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,0CACpBA,EAAQ,WAAanF,EAAQ,KAAKuQ,EAAQ,EAAI,oBAAsB,oBACpEpL,EAAQ,SAAW,EAEd,KAAAoL,GAAS,UAAU,OAAO,WAAW,EACtC,KAAKA,GAAS,eACd,KAAKA,GAAS,cAAc,aAAapL,EAAS,KAAKoL,EAAQ,EAE3DpL,EAAA,YAAY,KAAKoL,EAAQ,EAE3B,MAAArD,EAAmB,SAAS,cAAc,KAAK,EA8BjD,GA7BJA,EAAiB,UAAY,YAC7BA,EAAiB,UAAY,gBAC7BA,EAAiB,SAAW,GACXA,EAAA,aAAa,cAAe,MAAM,EAE/CpN,EAAQ,KAAKyQ,EAAQ,GAAK,KAAKA,GAAS,eACxC,KAAKA,GAAS,cAAc,aAAarD,EAAkB,KAAKqD,EAAQ,EAGpEpL,EAAA,iBACJ,UACA,IAAY,CACJA,EAAQ,UAAU,SAAS,+BAA+B,GAClDA,EAAA,UAAU,OAAO,+BAA+B,CAEhE,EACAtF,CAAA,EAGIsF,EAAA,iBACJ,QACA,IAAY,CACHA,EAAQ,UAAU,SAAS,+BAA+B,GACnDA,EAAA,UAAU,IAAI,+BAA+B,CAE7D,EACAtF,CAAA,EAGA,KAAKsO,GAAS,OAAS,QAAU,CAACnO,EAAQ,KAAKuQ,EAAQ,GAAK,CAACtR,EAI7D,KAAK,aAAa,EAAE,UAAU,IAAI,iBAAiB,UAC5C,KAAKkP,GAAS,OAAS,OAAS,CAACnO,EAAQ,KAAKuQ,EAAQ,EAAG,CAC1D,MAAAsG,EAAY,KAAK,eACvB,GAAIA,EAAU,cAAe,CACnB,MAAAC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,0BACvBA,EAAW,SAAW,EACZD,EAAA,cAAc,aAAaC,EAAYD,CAAS,EAC1DC,EAAW,YAAYD,CAAS,EACtBA,EAAA,UAAU,IAAI,gBAAgB,CAC5C,CAAA,KACG,CACH,IAAIE,EAAQ,GACR,GAAA,KAAK5I,GAAS,MAAO,CACrB,MAAMnJ,EACF,OAAO,KAAKmJ,GAAS,OAAU,SAAW,GAAG,KAAKA,GAAS,KAAK,KAAO,KAAKA,GAAS,MACzF4I,GAAS,UAAU/R,CAAK,cAC5B,CACI,GAAA,KAAKmJ,GAAS,OAAQ,CACtB,MAAMlJ,EACF,OAAO,KAAKkJ,GAAS,QAAW,SAAW,GAAG,KAAKA,GAAS,MAAM,KAAO,KAAKA,GAAS,OAC3F4I,GAAS,WAAW9R,CAAM,cAC9B,CAEI8R,GACQ5R,EAAA,aAAa,QAAS4R,CAAK,CAE3C,CACJ,CAEQ,iBAAwB,CACxB9X,GAAaa,EAAQ,KAAKyQ,EAAQ,GAClC,KAAK,aAAa,EAAE,UAAU,IAAI,wBAAwB,EAEzD,KAAA1D,GAAY,IAAIJ,GAAS,IAAI,EAClC,KAAKI,GAAU,QACnB,CAEQ,YAAmB,CACnB,GAAA,KAAK0D,GAAS,GACT,KAAAqF,GAAO,KAAKrF,GAAS,GACrB,KAAAA,GAAS,gBAAgB,IAAI,MAC/B,CAEH,MAAMyG,EAAY,OACZC,EACF,OAAOD,EAAU,gBAAmB,WAAaA,EAAU,eAAiBA,EAAU,gBAC1F,KAAKpB,GAAO,MAAMqB,EAAW,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,EACjF,CAEI,KAAK1G,GAAS,gBACT,KAAAA,GAAS,cAAc,GAAK,KAAKqF,GAE9C,CAEQ,mBAA0B,CAC1B5V,EAAQ,KAAKuQ,EAAQ,IAIpB,KAAA,QAAU,SAAS,cAAc,QAAQ,EAC9C,KAAK,QAAQ,UAAY,kBACzB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,MAAQ,KAAKpC,GAAS,QAAQ,MAAQ,GACnD,KAAK,QAAQ,UAAY,SAAS,KAAKA,GAAS,QAAQ,MAAQ,EAAE,UAC7D,KAAA,QAAQ,aAAa,eAAgB,OAAO,EAC5C,KAAA,QAAQ,aAAa,cAAe,OAAO,EAE3C,KAAA,OAAS,SAAS,cAAc,MAAM,EAC3C,KAAK,OAAO,UAAY,oBACxB,KAAK,OAAO,SAAW,GAClB,KAAA,OAAO,aAAa,cAAe,MAAM,EAE1C,KAAKoC,GAAS,gBACd,KAAKA,GAAS,cAAc,aAAa,KAAK,OAAQ,KAAKA,EAAQ,EACnE,KAAKA,GAAS,cAAc,aAAa,KAAK,QAAS,KAAKA,EAAQ,GAGxE,KAAK,QAAQ,iBACT,QACA,IAAY,CACJ,KAAK8F,KACL,KAAKA,GAAa,cAAgB,KAAK,cAAA,EAAgB,QAEvD,KAAK,cAAc,EAAE,OAChB,KAAA,gBAAgB,OAEhB,KAAA,gBAAgB,OAE7B,EACAxW,CAAA,EAER,CAEQ,YAAmB,CACnB,GAAAC,EAAQ,KAAKyQ,EAAQ,EAAG,CACnB,KAAAjO,GAAQ,eAAiB,IAAY,CAChC,MAAA/B,EAAK,KAAK,gBACZ,KAAK4N,GAAS,kBAAoB,CAACjP,GAAU,CAACC,GACzC,KAAA,OAAO,aAAa,cAAe,OAAO,EAC1C,KAAA,QAAQ,aAAa,cAAe,MAAM,IAE1C,KAAA,OAAO,aAAa,cAAe,MAAM,EACzC,KAAA,QAAQ,aAAa,cAAe,OAAO,GAEhDoB,EAAG,SACE,KAAA,QAAQ,UAAU,OAAO,yBAAyB,EAClD,KAAA,QAAQ,aAAa,eAAgB,OAAO,EACrD,EAEC,KAAA+B,GAAQ,QAAU,IAAY,CAC1B,KAAA,QAAQ,aAAa,cAAe,MAAM,EAC1C,KAAA,OAAO,aAAa,cAAe,OAAO,CAAA,EAE9C,KAAAA,GAAQ,QAAU,IAAY,CACzB,MAAA/B,EAAK,KAAK,gBACX,KAAA,QAAQ,aAAa,cAAe,MAAM,EAC/C,KAAK,OAAO,aAAa,cAAeA,aAAc+P,EAAQ,QAAU,MAAM,CAAA,EAE7E,KAAAhO,GAAQ,OAAS,IAAY,CACxB,MAAA/B,EAAK,KAAK,gBACZ,KAAK,MAAMA,EAAG,WAAW,IAAM,GAC1B,KAAA,QAAQ,aAAa,cAAe,MAAM,EAC1C,KAAA,OAAO,aAAa,cAAe,OAAO,IAE/C,KAAK,QAAQ,aAAa,cAAeA,aAAc+P,EAAQ,QAAU,MAAM,EAC1E,KAAA,OAAO,aAAa,cAAe,MAAM,EAClD,EAEC,KAAAhO,GAAQ,KAAO,IAAY,CACvB,KAAA,QAAQ,UAAU,IAAI,yBAAyB,EACpD,KAAK,QAAQ,MAAQ,KAAK6L,GAAS,QAAQ,OAAS,GAC/C,KAAA,OAAO,aAAa,cAAe,MAAM,EAC1C,KAAKA,GAAS,iBACT,KAAA,QAAQ,aAAa,cAAe,MAAM,EAE/C,WAAW,IAAY,CACd,KAAA,QAAQ,aAAa,cAAe,MAAM,CAAA,EAChD,KAAKA,GAAS,gBAAgB,CACrC,EAEC,KAAA7L,GAAQ,QAAU,IAAY,CAC1B,KAAA,OAAO,aAAa,cAAe,MAAM,EACzC,KAAA,QAAQ,aAAa,cAAe,MAAM,CAAA,EAE9C,KAAAA,GAAQ,MAAQ,IAAY,CACvB,MAAA/B,EAAK,KAAK,gBACX,KAAA,QAAQ,UAAU,OAAO,yBAAyB,EACvD,KAAK,QAAQ,MAAQ,KAAK4N,GAAS,QAAQ,MAAQ,GAE/C,KAAKA,GAAS,kBAAoB,KAAK,MAAM5N,EAAG,WAAW,IAAM,GAC5D,KAAA,QAAQ,aAAa,cAAe,MAAM,EAC1C,KAAA,OAAO,aAAa,cAAe,OAAO,IAE1C,KAAA,QAAQ,aAAa,cAAe,OAAO,EAC3C,KAAA,OAAO,aAAa,cAAe,MAAM,EAClD,EAEC,KAAA+B,GAAQ,MAAQ,IAAY,CACxB,KAAA,OAAO,aAAa,cAAe,MAAM,EACzC,KAAA,QAAQ,aAAa,cAAe,MAAM,CAAA,EAMnD,IAAI4U,EAAiB,GAChB,KAAA5U,GAAQ,WAAa,IAAY,CAClC,GAAI,KAAKiO,GAAS,MAAQ,KAAK,QAAQ,GAAK,KAAK8F,GAAc,CACrD,MAAA9V,EAAK,KAAK,WACV8U,EAAgB9U,EAAG,SAAWA,EAAG,YACvC,GAAI8U,EAAgB,GAAKA,GAAiB,KAAQ,CAAC6B,EAAgB,CAC9CA,EAAA,GACX,MAAAzT,EAAI5B,EAAS,OAAO,EACrB,KAAA0O,GAAS,cAAc9M,CAAC,CAAA,MACtB4R,IAAkB,IACR6B,EAAA,GAEzB,CAAA,CAER,CAEA,OAAO,KAAK,KAAK5U,EAAO,EAAE,QAASR,GAAU,CACzC,KAAKyO,GAAS,iBAAiBzO,EAAO,KAAKQ,GAAQR,CAAK,EAAGjC,CAAa,CAAA,CAC3E,EAED,KAAK,eAAe,iBAAiB,UAAW,KAAK,mBAAoBA,CAAa,CAC1F,CAEQ,WAAkB,CACjB,KAAKkW,KACN,KAAKA,GAAqB,GAC1B,KAAKxF,GAAS,oBAAoB,UAAW,KAAK,SAAS,EAE3DvK,EACI,KAAKuK,GACL,KAAKpE,GACJjG,GAAa,CACV,KAAK2P,GAAe3P,CACxB,EACCC,GAAU,CACP,KAAK2P,GAAoB3P,CAC7B,EACA,IAAY,CACR,GAAI,KAAK2P,GAAmB,CACnB,KAAA,cAAA,EAAgB,MAAQ,GACxB,KAAA,cAAA,EAAgB,OAAS,EAExB,MAAArS,EAAI5B,EAAS,cAAc,EAC5B,KAAA0O,GAAS,cAAc9M,CAAC,EAGvB,MAAA0T,EAAW,SAAS,cAAc,KAAK,EACvCC,EAASlY,GAAUC,EAAa,KAAKgP,GAAS,QAAQ,IAAM,KAAKA,GAAS,QAAQ,MACxFgJ,EAAS,UAAY,oBACZA,EAAA,UAAY,SAASC,CAAM,UACpCD,EAAS,SAAW,EAEXA,EAAA,iBACL,QACA,IAAY,CACH,KAAA,cAAA,EAAgB,MAAQ,GACxB,KAAA,cAAgB,EAAA,OAAS,KAAKhL,GAE7B,MAAArK,EAAQD,EAAS,cAAc,EAChC,KAAA0O,GAAS,cAAczO,CAAK,EAEjCqV,EAAS,OAAO,CACpB,EACAtX,CAAA,EAGE,MAAAuD,EAAS,KAAK,eACbA,EAAA,aAAa+T,EAAU/T,EAAO,UAAU,CAAA,MAE/C,KAAK,cAAc,EAAE,MAAQ,KAAKmN,GAAS,MACtC,KAAA,cAAgB,EAAA,OAAS,KAAKpE,GAGvC,GAAI,KAAKkH,GAAM,CACL,MAAAsD,EAAa,KAAKxI,IAAY,KAAKA,GAAS,IAAM,KAAKA,GAAS,IAAM,OAC5E,KAAKkI,GAAe,IAAInE,EACpB,KACA,KAAKmB,GACL,KAAKwC,GACL,KAAKC,GACLa,CAAA,CAEG,MAAA,KAAKd,IAAgB,KAAKC,KACjC,KAAK,KAAK,CAElB,CAAA,EAGZ,CAEQ,cAAcuB,EAAqC,CACvD,MAAMC,EAAO,CAAE,GAAID,GAAiB,CAAI,CAAA,EAWxC,GAVA,KAAKlJ,GAAW,CAAE,GAAG,KAAK8H,GAAiB,GAAGqB,GACvB,OAAO,KAAK,KAAKrB,EAAe,EAAE,OACpD1Q,GAAQA,IAAQ,UAAY,OAAO,KAAK0Q,GAAgB1Q,CAAG,GAAM,QAAA,EAEvD,QAASA,GAAQ,CAC5B,MAAMgS,EAAcD,EAAK/R,CAAG,GAAiC,CAAA,EACzDgS,GAAc,OAAO,KAAKA,CAAU,EAAE,SACjC,KAAApJ,GAAS5I,CAAG,EAAI,CAAE,GAAI,KAAK0Q,GAAgB1Q,CAAG,EAA+B,GAAGgS,GACzF,CACH,EACGD,EAAK,OAAQ,CACP,MAAAE,EAAOF,EAAK,OAAS,OAAO,KAAKA,EAAK,MAAM,EAAI,GACtD,IAAIG,EAAgC,CAAA,EAE/BD,EAAA,QAASjS,GAAQ,CAClB,MAAMiC,EAAU8P,EAAK,OAASA,EAAK,OAAO/R,CAAyB,EAAI,KACnEiC,GAAW,OAAOA,GAAY,UAAYjC,IAAQ,OAClD,OAAO,KAAKiC,CAAO,EAAE,QAASrE,GAAM,CAChC,MAAMuU,EAAOlQ,EAAWA,EAAsBrE,CAAC,EAAI,KAC/CuU,IACkBD,EAAA,CACd,GAAGA,EACH,KAAM,CAAE,GAAGA,EAAgB,KAAM,CAACtU,CAAC,EAAG1C,EAASiX,CAAc,CAAE,CAAA,EAEvE,CACH,EACMlQ,IACWiQ,EAAA,CAAE,GAAGA,EAAiB,CAAClS,CAAG,EAAG9E,EAAS+G,CAAiB,GAC7E,CACH,EAEI,KAAA2G,GAAS,OAAS,CAAE,GAAG,KAAK8H,GAAgB,OAAQ,GAAGwB,EAChE,CACJ,CAEQ,mBAAmBhU,EAAwB,CAC/C,MAAM8B,EAAM9B,EAAE,OAASA,EAAE,SAAW,EAC9BlD,EAAK,KAAK,gBACV2J,EAAO,KAAK,OACZyN,EAAgB,UAAU,eAAe,UAAU,SAAS,WAAW,EAE7E,OAAQpS,EAAK,CAET,IAAK,IACL,IAAK,IACL,IAAK,KAEGoS,IAAkBpS,IAAQ,IAAMA,IAAQ,KAMjCA,IAAQ,MACXhF,EAAG,OACHA,EAAG,KAAK,EAERA,EAAG,MAAM,GAGjBkD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MAEJ,IAAK,IACG,CAACyG,GAAQ3J,EAAG,WAAa,MACzBA,EAAG,YAAcA,EAAG,SACpBkD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,GAEtB,MAEJ,IAAK,IACIyG,IACD3J,EAAG,YAAc,EACjBkD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,GAEtB,MAGJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,GAAI,CAACyG,GAAQ3J,EAAG,WAAa,IAAU,CACnC,IAAIqX,EAAU,EACR,MAAAC,EAAa,KAAK,WAAA,EAAa,KACjCA,EACAD,EAAUrS,IAAQ,IAAMA,IAAQ,GAAKsS,EAAa,EAAIA,GAC/CtS,IAAQ,IAAMA,IAAQ,MACnBqS,EAAA,IAER,MAAAzN,EAAO5J,EAAG,WAAa,IAAWqX,EAAU,KAAK,WAAa,EAAA,UAAU,UAAY,EAC1FrX,EAAG,aAAegF,IAAQ,IAAMA,IAAQ,GAAK4E,EAAO,GAAKA,EACrD5J,EAAG,YAAc,EACjBA,EAAG,YAAc,EACVA,EAAG,aAAeA,EAAG,WAC5BA,EAAG,YAAcA,EAAG,UAExBkD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,CACtB,CACA,MAEJ,IAAK,IACL,IAAK,IACD,MAAMqU,EAASvS,IAAQ,GAAK,KAAK,IAAIhF,EAAG,OAAS,GAAK,CAAC,EAAI,KAAK,IAAIA,EAAG,OAAS,GAAK,CAAC,EACtFA,EAAG,OAASuX,EACTvX,EAAA,MAAQ,EAAEuX,EAAS,GACtBrU,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MAEJ,IAAK,IACG3D,EAAQ,KAAKyQ,EAAQ,GAAK,CAAC9M,EAAE,UAC7B,KAAK6S,GAAc,IAAI9R,EAAW,KAAM,GAAI,EAAE,EAC1C,OAAO,KAAK8R,GAAY,kBAAsB,MAC9C,KAAKA,GAAY,mBACjB7S,EAAE,eAAe,EACjBA,EAAE,gBAAgB,IAG1B,MAEJ,IAAK,IACElD,EAAA,MAAQ,CAACA,EAAG,MACXA,EAAG,MACHA,EAAG,OAAS,EAEZA,EAAG,OAAS,KAAK4L,GAErB1I,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MAGJ,IAAK,KACL,IAAK,KACG,GAAA,CAACyG,GAAQzG,EAAE,SAAU,CACrB,MAAMsU,EAAOxX,EACbwX,EAAK,aACDxS,IAAQ,IAAM,KAAK,IAAIwS,EAAK,aAAe,IAAM,GAAI,EAAI,KAAK,IAAIA,EAAK,aAAe,IAAM,CAAC,EAEjG,MAAM3U,EAAS,KAAK,aAAa,EAAE,cAAc,iBAAiB,EAC9DA,IACOA,EAAA,YAAc,GAAG2U,EAAK,YAAY,IACrC3U,EAAO,eACAA,EAAA,cAAc,aAAa,cAAe,OAAO,EAE5D,WAAW,IAAY,CACfA,EAAO,eACAA,EAAA,cAAc,aAAa,cAAe,MAAM,GAE5D,GAAG,GAEJ,MAAA4U,EAAKnW,EAAS,iBAAiB,EACrC,cAAcmW,CAAE,EAChBvU,EAAE,eAAe,EACjBA,EAAE,gBAAgB,CACX,KAAA,CAACyG,GAAQ3J,EAAG,SACnBA,EAAG,aAAgB,EAAI,IAAOgF,IAAQ,IAAM,GAAK,GACjD9B,EAAE,eAAe,EACjBA,EAAE,gBAAgB,GAEtB,KAGR,CACJ,CACJ,CAEA,MAAAwU,EAAelQ,EAGf,OAAI,OAAO,OAAW,MAEjB,OAAe,WAAaA,EAE5B,OAAe,aAAeA,EAC/BA,EAAO,KAAK"}