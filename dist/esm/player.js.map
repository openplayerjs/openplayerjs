{"version":3,"file":"player.js","sources":["../../src/js/utils/constants.ts","../../src/js/utils/general.ts","../../src/js/controls/captions.ts","../../src/js/controls/fullscreen.ts","../../src/js/utils/media.ts","../../src/js/controls/levels.ts","../../src/js/controls/play.ts","../../src/js/utils/time.ts","../../src/js/controls/progress.ts","../../src/js/controls/settings.ts","../../src/js/controls/time.ts","../../src/js/controls/volume.ts","../../src/js/controls.ts","../../src/js/media/native.ts","../../src/js/media/dash.ts","../../src/js/media/flv.ts","../../src/js/media/hls.ts","../../src/js/media/html5.ts","../../src/js/media.ts","../../src/js/media/ads.ts","../../src/js/player.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\ndeclare global {\n    interface Window {\n        MSStream: any;\n        WebKitMediaSource: any;\n        WebKitSourceBuffer: any;\n    }\n}\n\nexport const NAV: Navigator | null = typeof window !== 'undefined' ? window.navigator : null;\n\nexport const UA: string | null = NAV ? NAV.userAgent.toLowerCase() : null;\n\nexport const IS_IPAD = UA ? /ipad/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPHONE = UA ? /iphone/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPOD = UA ? /ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IOS = UA ? /ipad|iphone|ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_ANDROID = UA ? /android/i.test(UA) : false;\n\nexport const IS_EDGE = NAV ? 'msLaunchUri' in NAV && !('documentMode' in document) : false;\n\nexport const IS_CHROME = UA ? /chrome/i.test(UA) : false;\n\nexport const IS_FIREFOX = UA ? /firefox/i.test(UA) : false;\n\nexport const IS_SAFARI = UA ? /safari/i.test(UA) && !IS_CHROME : false;\n\nexport const IS_STOCK_ANDROID = UA ? /^mozilla\\/\\d+\\.\\d+\\s\\(linux;\\su;/i.test(UA) : false;\n\nexport const HAS_MSE = typeof window !== 'undefined' ? 'MediaSource' in window : false;\n\n// @see https://github.com/video-dev/hls.js/blob/master/src/is-supported.js\nexport const SUPPORTS_HLS = (): boolean => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    const mediaSource = window.MediaSource || window.WebKitMediaSource;\n    const sourceBuffer = window.SourceBuffer || window.WebKitSourceBuffer;\n    const isTypeSupported =\n        mediaSource &&\n        typeof mediaSource.isTypeSupported === 'function' &&\n        mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n    const sourceBufferValidAPI =\n        !sourceBuffer ||\n        (sourceBuffer.prototype &&\n            typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n            typeof sourceBuffer.prototype.remove === 'function');\n\n    // Safari is still an exception since it has built-in HLS support; currently HLS.js\n    // is still in beta to support Safari\n    return !!isTypeSupported && !!sourceBufferValidAPI && !IS_SAFARI;\n};\n\nexport const DVR_THRESHOLD = 120;\n\nexport const EVENT_OPTIONS = { passive: false };\n","export function getAbsoluteUrl(url: string): string {\n    const a: HTMLAnchorElement = document.createElement('a');\n    a.href = url;\n    return a.href;\n}\n\nexport function isVideo(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'video';\n}\n\nexport function isAudio(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'audio';\n}\n\nexport function loadScript(url: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.onload = (): void => {\n            script.remove();\n            resolve();\n        };\n        script.onerror = (): void => {\n            script.remove();\n            reject(new Error(`${url} could not be loaded`));\n        };\n        if (document.head) {\n            document.head.appendChild(script);\n        }\n    });\n}\n\nexport function offset(el: HTMLElement): { left: number; top: number } {\n    const rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft),\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop),\n    };\n}\n\nexport function sanitize(html: string, plainText = true): string {\n    const parser = new DOMParser();\n    const content = parser.parseFromString(html, 'text/html');\n    const formattedContent = content.body || document.createElement('body');\n\n    const scripts = formattedContent.querySelectorAll('script');\n    for (let i = 0, total = scripts.length; i < total; i++) {\n        scripts[i].remove();\n    }\n\n    const clean = (element: Element): void => {\n        const nodes = element.children;\n        for (let i = 0, total = nodes.length; i < total; i++) {\n            const node = nodes[i];\n            const { attributes } = node;\n            for (let j = 0, t = attributes.length; j < t; j++) {\n                const { name, value } = attributes[j];\n                const val = value.replace(/\\s+/g, '').toLowerCase();\n                if (['src', 'href', 'xlink:href'].includes(name)) {\n                    // eslint-disable-next-line no-script-url\n                    if (val.includes('javascript:') || val.includes('data:')) {\n                        node.removeAttribute(name);\n                    }\n                }\n                if (name.startsWith('on')) {\n                    node.removeAttribute(name);\n                }\n            }\n            clean(node);\n        }\n    };\n\n    clean(formattedContent);\n    return plainText ? (formattedContent.textContent || '').replace(/\\s{2,}/g, '') : formattedContent.innerHTML;\n}\n\nexport function isXml(input: string): boolean {\n    let parsedXml;\n\n    if (typeof DOMParser !== 'undefined') {\n        parsedXml = (text: string): Document => new DOMParser().parseFromString(text, 'text/xml');\n    } else {\n        return false;\n    }\n\n    try {\n        const response = parsedXml(input);\n        if (response.getElementsByTagName('parsererror').length > 0) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport function isJson(item: unknown): boolean {\n    item = typeof item !== 'string' ? JSON.stringify(item) : item;\n    try {\n        item = JSON.parse(item as string);\n    } catch (e) {\n        return false;\n    }\n\n    if (typeof item === 'object' && item !== null) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function addEvent(event: string, details?: CustomEventInit): CustomEvent {\n    let detail = {};\n    if (details && details.detail) {\n        detail = { detail: details.detail };\n    }\n    return new CustomEvent(event, detail);\n}\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Captions implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #captions: HTMLDivElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #mediaTrackList: TextTrack[];\n\n    #hasTracks: boolean;\n\n    #currentTrack?: TextTrack;\n\n    #default = 'off';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._formatMenuItems = this._formatMenuItems.bind(this);\n        this._setDefaultTrack = this._setDefaultTrack.bind(this);\n    }\n\n    custom?: boolean | undefined;\n\n    create(): void {\n        const { textTracks } = this.#player.getElement();\n        const { labels, detachMenus } = this.#player.getOptions();\n\n        this.#mediaTrackList = Object.keys(textTracks)\n            .map((k) => textTracks[Number(k)])\n            .filter((el) => ['subtitles', 'captions'].includes(el.kind));\n\n        this.#hasTracks = !!this.#mediaTrackList.length;\n\n        if (!this.#hasTracks && detachMenus) {\n            return;\n        }\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__captions op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.toggleCaptions || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.toggleCaptions || '');\n        this.#button.setAttribute('data-active-captions', 'off');\n\n        // Build container to display captions to mitigate cross browser inconsistencies\n        this.#captions = document.createElement('div');\n        this.#captions.className = 'op-captions';\n        const target = this.#player.getContainer();\n        target.insertBefore(this.#captions, target.firstChild);\n\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-captions__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            this.#menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-captions\">\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\" aria-checked=\"${\n                    this.#default === 'off' ? 'true' : 'false'\n                }\">\n                    <div class=\"op-settings__submenu-label op-subtitles__option\" data-value=\"captions-off\">${\n                        labels?.off\n                    }</div>\n                </div>\n            </div>`;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.append(this.#button, this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).append(itemContainer);\n\n            for (const track of this.#mediaTrackList) {\n                const item = document.createElement('div');\n                const label = labels?.lang?.[track.language] || null;\n                item.className = 'op-settings__submenu-item';\n                item.tabIndex = 0;\n                item.setAttribute('role', 'menuitemradio');\n                item.setAttribute('aria-checked', this.#default === track.language ? 'true' : 'false');\n                item.innerHTML = `<div class=\"op-settings__submenu-label op-subtitles__option\"\n                    data-value=\"captions-${track.language}\">\n                    ${label || track.label}\n                </div>`;\n                this.#menu.append(item);\n            }\n        } else {\n            this.#player.getControls().getLayer(this.#controlLayer).append(this.#button);\n        }\n\n        // Show/hide captions\n        this.#events.button.click = (e: Event): void => {\n            const button = e.target as HTMLDivElement;\n            if (detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (const menuItem of Array.from(menus)) {\n                    if (menuItem !== this.#menu) {\n                        menuItem.setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            } else {\n                button.setAttribute('aria-pressed', 'true');\n                if (button.classList.contains('op-controls__captions--on')) {\n                    button.classList.remove('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', 'off');\n                } else {\n                    button.classList.add('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', this.#currentTrack?.language || '');\n                }\n\n                for (const track of this.#mediaTrackList) {\n                    track.mode = button.getAttribute('data-active-captions') === track.language ? 'showing' : 'hidden';\n                }\n            }\n        };\n\n        this.#events.button.mouseover = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    if (menus[i] !== this.#menu) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n            }\n        };\n        this.#events.button.mouseout = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            }\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-subtitles__option')) {\n                const language = option.getAttribute('data-value')!.replace('captions-', '');\n\n                for (const track of this.#mediaTrackList) {\n                    track.mode = track.language === language ? 'showing' : 'hidden';\n                    if (track.language === language) {\n                        this.#currentTrack = track;\n                    }\n                }\n\n                if (detachMenus) {\n                    if (this.#button.classList.contains('op-controls__captions--on')) {\n                        this.#button.classList.remove('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', 'off');\n                    } else {\n                        this.#button.classList.add('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', language);\n                    }\n\n                    const captions = this.#menu.querySelectorAll('.op-settings__submenu-item');\n                    for (const caption of Array.from(captions)) {\n                        caption.setAttribute('aria-checked', 'false');\n                    }\n                    option.parentElement!.setAttribute('aria-checked', 'true');\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#button.setAttribute('data-active-captions', language);\n                }\n                const event = addEvent('captionschanged');\n                this.#player.getElement().dispatchEvent(event);\n            }\n        };\n\n        this.#events.global.cuechange = (e: Event): void => {\n            while (this.#captions.lastChild) {\n                this.#captions.removeChild(this.#captions.lastChild);\n            }\n            const t = e.target as TextTrack;\n            if (t.mode !== 'showing') {\n                return;\n            }\n\n            if (t.activeCues && t.activeCues?.length > 0) {\n                for (const cue of Array.from(t.activeCues)) {\n                    const content = (cue as VTTCue)?.text || '';\n                    if (content) {\n                        this.#captions.classList.add('op-captions--on');\n                        const caption = document.createElement('span');\n                        caption.innerHTML = content;\n                        this.#captions.prepend(caption);\n                    } else {\n                        while (this.#captions.lastChild) {\n                            this.#captions.removeChild(this.#captions.lastChild);\n                        }\n                    }\n                }\n            } else {\n                while (this.#captions.lastChild) {\n                    this.#captions.removeChild(this.#captions.lastChild);\n                }\n            }\n        };\n\n        if (detachMenus) {\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n\n        for (const track of this.#mediaTrackList) {\n            track.mode = track.mode !== 'showing' ? 'hidden' : track.mode;\n            track.addEventListener('cuechange', this.#events.global.cuechange, EVENT_OPTIONS);\n        }\n\n        const targetTrack = this.#player\n            .getElement()\n            .querySelector('track:is([kind=\"subtitles\"],[kind=\"captions\"])[default]') as HTMLTrackElement;\n        if (targetTrack) {\n            const matchTrack = this.#mediaTrackList.find((el) => el.language === targetTrack.srclang);\n            if (matchTrack) {\n                this._setDefaultTrack(matchTrack);\n            }\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n\n        if (!this.#hasTracks && detachMenus) {\n            return;\n        }\n\n        for (const track of this.#mediaTrackList) {\n            track.removeEventListener('cuechange', this.#events.global.cuechange);\n        }\n\n        document.removeEventListener('click', this.#events.global.click);\n        this.#button.removeEventListener('click', this.#events.button.click);\n        if (detachMenus) {\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { detachMenus, labels } = this.#player.getOptions();\n        if (detachMenus || this.#mediaTrackList.length <= 1) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n\n        // Avoid implementing submenu for captions if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-subtitles__option',\n                  default: this.#default || 'off',\n                  key: 'captions',\n                  name: labels?.captions || '',\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (this.#mediaTrackList.length <= 1 && !detachMenus) {\n            return [];\n        }\n\n        let items = [{ key: 'off', label: labels?.off || '' }];\n        for (const track of this.#mediaTrackList) {\n            const label = labels?.lang ? labels.lang[track.language] : null;\n            // Override language item if duplicated when passing list of items\n            items = items.filter((el) => el.key !== track.language);\n            items.push({ key: track.language, label: label || track.label });\n        }\n\n        return items;\n    }\n\n    private _setDefaultTrack(track: TextTrack): void {\n        track.mode = 'showing';\n        this.#default = track.language;\n        this.#button.setAttribute('data-active-captions', this.#default);\n        this.#button.classList.add('op-controls__captions--on');\n        this.#currentTrack = track;\n\n        const options = document.querySelectorAll('.op-settings__submenu-item') || [];\n        for (const option of Array.from(options)) {\n            option.setAttribute('aria-checked', 'false');\n        }\n\n        document\n            .querySelector(`.op-subtitles__option[data-value=\"captions-${track.language}\"]`)\n            ?.parentElement?.setAttribute('aria-checked', 'true');\n    }\n}\n\nexport default Captions;\n","import { FullscreenDocument, FullscreenElement, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IPHONE } from '../utils/constants';\n\nclass Fullscreen implements PlayerComponent {\n    fullScreenEnabled: boolean;\n\n    #player: Player;\n\n    #isFullscreen: boolean;\n\n    #button: HTMLButtonElement;\n\n    #fullscreenEvents: string[] = [];\n\n    #fullscreenWidth = 0;\n\n    #fullscreenHeight = 0;\n\n    #clickEvent: () => void;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this.#isFullscreen = document.body.classList.contains('op-fullscreen__on');\n\n        const target = document as FullscreenDocument;\n\n        // Check if fullscreen is supported\n        this.fullScreenEnabled = !!(\n            target.fullscreenEnabled ||\n            target.mozFullScreenEnabled ||\n            target.msFullscreenEnabled ||\n            target.webkitSupportsFullscreen ||\n            target.webkitFullscreenEnabled ||\n            (document.createElement('video') as FullscreenElement).webkitRequestFullScreen\n        );\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n        this._resize = this._resize.bind(this);\n        this._fullscreenChange = this._fullscreenChange.bind(this);\n        this._setFullscreen = this._setFullscreen.bind(this);\n        this._unsetFullscreen = this._unsetFullscreen.bind(this);\n\n        this.#fullscreenEvents = [\n            'fullscreenchange',\n            'mozfullscreenchange',\n            'webkitfullscreenchange',\n            'msfullscreenchange',\n        ];\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.addEventListener(event, this._fullscreenChange, EVENT_OPTIONS);\n        });\n        this._setFullscreenData(false);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        // Since iPhone still doesn't accept the regular Fullscreen API, use the following events\n        if (IS_IPHONE) {\n            this.#player.getElement().addEventListener('webkitbeginfullscreen', this._setFullscreen, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('webkitendfullscreen', this._unsetFullscreen, EVENT_OPTIONS);\n        }\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__fullscreen op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.fullscreen || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.fullscreen || '');\n\n        this.#clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            this.toggleFullscreen();\n        };\n\n        this.#clickEvent = this.#clickEvent.bind(this);\n\n        this.#button.addEventListener('click', this.#clickEvent, EVENT_OPTIONS);\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n    }\n\n    destroy(): void {\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.removeEventListener(event, this._fullscreenChange);\n        });\n        if (IS_IPHONE) {\n            this.#player.getElement().removeEventListener('webkitbeginfullscreen', this._setFullscreen);\n            this.#player.getElement().removeEventListener('webkitendfullscreen', this._unsetFullscreen);\n        }\n        this.#button.removeEventListener('click', this.#clickEvent);\n        this.#button.remove();\n    }\n\n    toggleFullscreen(): void {\n        // If browser does not support native Fullscreen API, player will adjust the video\n        // and its parent container's dimensions via width and height styles.\n        if (this.#isFullscreen) {\n            const target = document as FullscreenDocument;\n            if (target.exitFullscreen) {\n                target.exitFullscreen();\n            } else if (target.mozCancelFullScreen) {\n                target.mozCancelFullScreen();\n            } else if (target.webkitCancelFullScreen) {\n                target.webkitCancelFullScreen();\n            } else if (target.msExitFullscreen) {\n                target.msExitFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n            document.body.classList.remove('op-fullscreen__on');\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const video = this.#player.getElement() as any;\n            this.#fullscreenWidth = window.screen.width;\n            this.#fullscreenHeight = window.screen.height;\n\n            if (video.requestFullscreen) {\n                video.parentElement.requestFullscreen();\n            } else if (video.mozRequestFullScreen) {\n                video.parentElement.mozRequestFullScreen();\n            } else if (video.webkitRequestFullScreen) {\n                video.parentElement.webkitRequestFullScreen();\n            } else if (video.msRequestFullscreen) {\n                video.parentElement.msRequestFullscreen();\n            } else if (video.webkitEnterFullscreen) {\n                video.webkitEnterFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n\n            document.body.classList.add('op-fullscreen__on');\n        }\n\n        if (typeof window !== 'undefined' && (IS_ANDROID || IS_IPHONE)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const { screen } = window as any;\n            if (screen.orientation && !this.#isFullscreen) {\n                screen.orientation.lock('landscape');\n            }\n        }\n    }\n\n    private _fullscreenChange(): void {\n        const width = this.#isFullscreen ? undefined : this.#fullscreenWidth;\n        const height = this.#isFullscreen ? undefined : this.#fullscreenHeight;\n        this._setFullscreenData(!this.#isFullscreen);\n\n        if (this.#player.isAd()) {\n            this.#player.getAd().resizeAds(width, height);\n        }\n        this.#isFullscreen = !this.#isFullscreen;\n\n        if (this.#isFullscreen) {\n            document.body.classList.add('op-fullscreen__on');\n        } else {\n            document.body.classList.remove('op-fullscreen__on');\n        }\n        this._resize(width, height);\n    }\n\n    private _setFullscreenData(isFullscreen: boolean): void {\n        this.#player.getContainer().setAttribute('data-fullscreen', (!!isFullscreen).toString());\n        if (this.#button) {\n            if (isFullscreen) {\n                this.#button.classList.add('op-controls__fullscreen--out');\n            } else {\n                this.#button.classList.remove('op-controls__fullscreen--out');\n            }\n        }\n    }\n\n    private _resize(width?: number, height?: number): void {\n        const wrapper = this.#player.getContainer();\n        const video = this.#player.getElement();\n        const options = this.#player.getOptions();\n        let styles = '';\n        if (width) {\n            wrapper.style.width = '100%';\n            video.style.width = '100%';\n        } else if (options.width) {\n            const defaultWidth = typeof options.width === 'number' ? `${options.width}px` : options.width;\n            styles += `width: ${defaultWidth} !important;`;\n            video.style.removeProperty('width');\n        } else {\n            video.style.removeProperty('width');\n            wrapper.style.removeProperty('width');\n        }\n        if (height) {\n            video.style.height = '100%';\n            wrapper.style.height = '100%';\n        } else if (options.height) {\n            const defaultHeight = typeof options.height === 'number' ? `${options.height}px` : options.height;\n            styles += `height: ${defaultHeight} !important;`;\n            video.style.removeProperty('height');\n        } else {\n            video.style.removeProperty('height');\n            wrapper.style.removeProperty('height');\n        }\n\n        if (styles) {\n            wrapper.setAttribute('style', styles);\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const fullscreenBtnFocused = document?.activeElement?.classList.contains('op-controls__fullscreen');\n        if (fullscreenBtnFocused && (key === 13 || key === 32)) {\n            this.toggleFullscreen();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    private _setFullscreen(): void {\n        this.#isFullscreen = true;\n        this._setFullscreenData(true);\n        document.body.classList.add('op-fullscreen__on');\n    }\n\n    private _unsetFullscreen(): void {\n        this.#isFullscreen = false;\n        this._setFullscreenData(false);\n        document.body.classList.remove('op-fullscreen__on');\n    }\n}\n\nexport default Fullscreen;\n","import { Source } from '../interfaces';\nimport { isAudio } from './general';\n\nexport function getExtension(url: string): string {\n    const baseUrl = url.split('?')[0];\n    const baseFrags = (baseUrl || '').split('\\\\');\n    const baseUrlFragment = (baseFrags || []).pop();\n    const baseNameFrags = (baseUrlFragment || '').split('/');\n    const baseName = (baseNameFrags || []).pop() || '';\n    return baseName.includes('.') ? baseName.substring(baseName.lastIndexOf('.') + 1) : '';\n}\n\nexport function isHlsSource(media: Source): boolean {\n    return (\n        /\\.m3u8$/i.test(media.src) || ['application/x-mpegURL', 'application/vnd.apple.mpegurl'].includes(media.type)\n    );\n}\n\nexport function isM3USource(media: Source): boolean {\n    return /\\.m3u$/i.test(media.src);\n}\n\nexport function isDashSource(media: Source): boolean {\n    return /\\.mpd/i.test(media.src) || media.type === 'application/dash+xml';\n}\n\nexport function isFlvSource(media: Source): boolean {\n    return /(^rtmp:\\/\\/|\\.flv$)/i.test(media.src) || ['video/x-flv', 'video/flv'].includes(media.type);\n}\n\nexport function predictMimeType(url: string, element: HTMLMediaElement): string {\n    const extension = getExtension(url);\n\n    // If no extension found, check if media is a vendor iframe\n    if (!extension) {\n        return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n\n    // Check native media types\n    switch (extension) {\n        case 'm3u8':\n        case 'm3u':\n            return 'application/x-mpegURL';\n        case 'mpd':\n            return 'application/dash+xml';\n        case 'mp4':\n            return isAudio(element) ? 'audio/mp4' : 'video/mp4';\n        case 'mp3':\n            return 'audio/mp3';\n        case 'webm':\n            return isAudio(element) ? 'audio/webm' : 'video/webm';\n        case 'ogg':\n            return isAudio(element) ? 'audio/ogg' : 'video/ogg';\n        case 'ogv':\n            return 'video/ogg';\n        case 'oga':\n            return 'audio/ogg';\n        case '3gp':\n            return 'audio/3gpp';\n        case 'wav':\n            return 'audio/wav';\n        case 'aac':\n            return 'audio/aac';\n        case 'flac':\n            return 'audio/flac';\n        default:\n            return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n}\n\n// @see https://raw.githubusercontent.com/googleads/googleads-ima-html5/2.11/attempt_to_autoplay/ads.js\n// @see https://github.com/Modernizr/Modernizr/issues/1095#issuecomment-304682473\nexport function isAutoplaySupported(\n    media: HTMLMediaElement,\n    defaultVol: number,\n    autoplay: (playing: boolean) => void,\n    muted: (playing: boolean) => void,\n    callback: () => void\n): void {\n    const playPromise = media.play();\n    if (playPromise !== undefined) {\n        playPromise\n            .then(() => {\n                // Unmuted autoplay works.\n                media.pause();\n                autoplay(true);\n                muted(false);\n                callback();\n            })\n            .catch(() => {\n                // Unmuted autoplay failed. New attempt with muted autoplay.\n                media.volume = 0;\n                media.muted = true;\n                media\n                    .play()\n                    .then(() => {\n                        // Muted autoplay works.\n                        media.pause();\n                        autoplay(true);\n                        muted(true);\n                        callback();\n                    })\n                    .catch(() => {\n                        // Both muted and unmuted autoplay failed. Fallback to click to play.\n                        media.volume = defaultVol;\n                        media.muted = false;\n                        autoplay(false);\n                        muted(false);\n                        callback();\n                    });\n            });\n    } else {\n        autoplay(!media.paused || ('Promise' in window && (playPromise as Promise<void>) instanceof Promise));\n        media.pause();\n        muted(false);\n        callback();\n    }\n}\n","import { EventsList, Level, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, NAV } from '../utils/constants';\nimport { addEvent, sanitize } from '../utils/general';\nimport { isDashSource, isHlsSource } from '../utils/media';\n\nclass Levels implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #levels: Level[] = [];\n\n    #defaultLevel = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, defaultLevel: startLevel, detachMenus } = this.#player.getOptions();\n        const initialLevel = startLevel !== null ? parseInt(startLevel || '0', 10) : this.#player.getMedia().level;\n        this.#defaultLevel = `${initialLevel}`;\n        const menuItems = this._formatMenuItems();\n        const defaultLevel = menuItems.length ? menuItems.find((items) => items.key === this.#defaultLevel) : null;\n        const defaultLabel = defaultLevel ? defaultLevel.label : labels?.auto || '';\n        let levelSet = false;\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__levels op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mediaLevels || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-label', labels?.mediaLevels || '');\n        this.#button.setAttribute('data-active-level', this.#defaultLevel);\n        this.#button.innerHTML = `<span>${defaultLabel}</span>`;\n\n        const loadLevelsEvent = (): void => {\n            if (!this.#levels.length) {\n                this._gatherLevels();\n                setTimeout((): void => {\n                    this.#player.getMedia().level = initialLevel;\n                    const e = addEvent('controlschanged');\n                    this.#player.getElement().dispatchEvent(e);\n                }, 0);\n            } else if (!levelSet) {\n                this.#player.getMedia().level = initialLevel;\n                levelSet = true;\n            }\n        };\n\n        this.#events.media.loadedmetadata = loadLevelsEvent.bind(this);\n        this.#events.media.manifestLoaded = loadLevelsEvent.bind(this);\n        this.#events.media.hlsManifestParsed = loadLevelsEvent.bind(this);\n\n        if (detachMenus) {\n            this._buildMenu();\n            this.#events.button.click = (): void => {\n                if (detachMenus) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    } else {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n            this.#events.button.mouseover = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    }\n                }\n            };\n            this.#events.button.mouseout = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n\n            this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            const { currentTime } = this.#player.getMedia();\n            const isPaused = this.#player.getMedia().paused;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-levels__option')) {\n                const levelVal = option.getAttribute('data-value');\n                const level = levelVal ? levelVal.replace('levels-', '') : '-1';\n                this.#defaultLevel = `${level}`;\n                if (detachMenus) {\n                    this.#button.setAttribute('data-active-level', `${level}`);\n                    this.#button.innerHTML = `<span>${sanitize(option.innerText, true)}</span>`;\n                    const levels =\n                        option.parentElement && option.parentElement.parentElement\n                            ? option.parentElement.parentElement.querySelectorAll('.op-settings__submenu-item')\n                            : [];\n                    for (let i = 0, total = levels.length; i < total; ++i) {\n                        levels[i].setAttribute('aria-checked', 'false');\n                    }\n                    if (option.parentElement) {\n                        option.parentElement.setAttribute('aria-checked', 'true');\n                    }\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n                this.#player.getMedia().level = level;\n                this.#player.getMedia().currentTime = currentTime;\n                if (!isPaused) {\n                    this.#player.play();\n                }\n\n                const event = addEvent('levelchanged', {\n                    detail: {\n                        label: option.innerText.trim(),\n                        level,\n                    },\n                });\n                this.#player.getElement().dispatchEvent(event);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n        this.#events.global.connection = (): void => {\n            // Check connectivity to switch levels (only HTML5 since HLS and Dash can use adaptive streaming)\n            const media = this.#player.getMedia().current;\n            if (!isDashSource(media) && !isHlsSource(media)) {\n                const type = connection?.effectiveType || '';\n                const levels = this.#levels.map((item) => ({\n                    ...item,\n                    resolution: parseInt(item.label.replace('p', ''), 10),\n                }));\n\n                let level = levels.find((item) => item.resolution < 360);\n                if (type === '4g') {\n                    level = levels.find((item) => item.resolution >= 720);\n                } else if (type === '3g') {\n                    level = levels.find((item) => item.resolution >= 360 && item.resolution < 720);\n                }\n\n                if (level) {\n                    this.#player.pause();\n                    this.#player.getMedia().level = level.id;\n                    this.#player.play();\n                }\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        if (connection) {\n            connection.addEventListener('change', this.#events.global.connection, EVENT_OPTIONS);\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        if (connection) {\n            connection.removeEventListener('change', this.#events.global.connection);\n        }\n        if (detachMenus) {\n            this.#button.removeEventListener('click', this.#events.button.click);\n            this.#button.remove();\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (detachMenus) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n        // Avoid implementing submenu for levels if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-levels__option',\n                  default: this.#defaultLevel || '-1',\n                  key: 'levels',\n                  name: labels?.levels,\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels } = this.#player.getOptions();\n        const levels = this._gatherLevels();\n        const total = levels.length;\n        let items = total ? [{ key: '-1', label: labels?.auto }] : [];\n        for (let i = 0; i < total; i++) {\n            const level = levels[i];\n            items = items.filter((el) => el.key !== level.id);\n            items.push({ key: level.id, label: level.label });\n        }\n\n        // Remove duplicated labels\n        return items\n            .reduce((acc: SettingsSubItem[], current) => {\n                const duplicate = acc.find((item) => item.label === current.label);\n                if (!duplicate) {\n                    return acc.concat([current]);\n                }\n                return acc;\n            }, [])\n            .sort((a, b) => (parseInt(a?.label || '', 10) > parseInt(b?.label || '', 10) ? 1 : -1));\n    }\n\n    // @see https://en.wikipedia.org/wiki/Computer_display_standard#Standards\n    private _getResolutionsLabel(height: number): string {\n        const { labels } = this.#player.getOptions();\n        if (height >= 4320) {\n            return '8K';\n        }\n        if (height >= 2160) {\n            return '4K';\n        }\n        if (height >= 1440) {\n            return '1440p';\n        }\n        if (height >= 1080) {\n            return '1080p';\n        }\n        if (height >= 720) {\n            return '720p';\n        }\n        if (height >= 480) {\n            return '480p';\n        }\n        if (height >= 360) {\n            return '360p';\n        }\n        if (height >= 240) {\n            return '240p';\n        }\n        if (height >= 144) {\n            return '144p';\n        }\n        return labels?.auto || '';\n    }\n\n    private _gatherLevels(): Level[] {\n        if (!this.#levels.length) {\n            this.#player.getMedia().levels.forEach((level: Level) => {\n                this.#levels.push({ ...level, label: level.label || this._getResolutionsLabel(level.height) });\n            });\n        }\n        return this.#levels;\n    }\n\n    private _buildMenu(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // Build menu if detachMenu is `true`\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-levels__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            const className = 'op-levels__option';\n            const options = this._formatMenuItems();\n\n            // Store the submenu to reach all options for current menu item\n            const menu = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-levels\">\n                ${options\n                    .map(\n                        (item) => `\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\"\n                    aria-checked=\"${this.#defaultLevel === item.key ? 'true' : 'false'}\">\n                    <div class=\"op-settings__submenu-label ${className || ''}\" data-value=\"levels-${item.key}\">${\n                            item.label\n                        }</div>\n                </div>`\n                    )\n                    .join('')}\n            </div>`;\n            this.#menu.innerHTML = menu;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.appendChild(this.#button);\n            itemContainer.appendChild(this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).appendChild(itemContainer);\n        }\n    }\n}\n\nexport default Levels;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio } from '../utils/general';\n\nclass Play implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__playpause op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.play || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.play || '');\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n\n        this.#events.button = (e: Event): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n\n            if (el.paused || el.ended) {\n                if (this.#player.getAd()) {\n                    this.#player.getAd().playRequested = true;\n                }\n\n                el.play();\n                this.#events.media.play();\n            } else {\n                el.pause();\n                this.#events.media.pause();\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.play = (): void => {\n            if (this.#player.activeElement().ended) {\n                if (this.#player.isMedia()) {\n                    this.#button.classList.add('op-controls__playpause--replay');\n                } else {\n                    this.#button.classList.add('op-controls__playpause--pause');\n                }\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n\n                if (this.#player.getOptions()?.pauseOthers) {\n                    Object.keys(Player.instances).forEach((key) => {\n                        if (key !== this.#player.id) {\n                            const target = Player.instances[key].activeElement();\n                            target.pause();\n                        }\n                    });\n                }\n            }\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            if (this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (!this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            this.#button.classList.remove('op-controls__playpause--pause');\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.ended = (): void => {\n            if (this.#player.activeElement().ended && this.#player.isMedia()) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else if (\n                this.#player.getElement().currentTime >= this.#player.getElement().duration ||\n                this.#player.getElement().currentTime <= 0\n            ) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n            }\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.adsmediaended = (): void => {\n            this.#button.classList.remove('op-controls__playpause--replay');\n            this.#button.classList.add('op-controls__playpause--pause');\n            this.#button.title = labels?.pause || '';\n            this.#button.setAttribute('aria-label', labels?.pause || '');\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl) {\n                const el = this.#player.activeElement();\n                el.pause();\n            }\n        };\n\n        const element = this.#player.getElement();\n        this.#events.controls.controlschanged = (): void => {\n            if (!this.#player.activeElement().paused) {\n                const event = addEvent('playing');\n                element.dispatchEvent(event);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            element.addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            element.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#button.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            this.#player.getElement().removeEventListener('click', this.#events.button);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#button.removeEventListener('click', this.#events.button);\n        this.#button.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__playpause');\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            this.#events.button(e);\n        }\n    }\n}\n\nexport default Play;\n","export function formatTime(seconds: number, frameRate?: number): string {\n    const f = Math.floor((seconds % 1) * (frameRate || 0));\n    let s = Math.floor(seconds);\n    let m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const wrap = (value: number): string => {\n        const formattedVal = value.toString();\n        if (value < 10) {\n            if (value <= 0) {\n                return '00';\n            }\n            return `0${formattedVal}`;\n        }\n        return formattedVal;\n    };\n    m %= 60;\n    s %= 60;\n    return `${h > 0 ? `${wrap(h)}:` : ''}${wrap(m)}:${wrap(s)}${f ? `:${wrap(f)}` : ''}`;\n}\n\n// @see https://en.wikipedia.org/wiki/SMPTE_timecode\nexport function timeToSeconds(timeCode: string): number {\n    const time = timeCode.replace(/;/g, ':').split(':');\n    let seconds = 0;\n    // Hours found; use different calculation\n    if (time.length === 3) {\n        seconds += parseFloat(time[0]) * 60 * 60;\n        seconds += parseFloat(time[1]) * 60;\n        seconds += parseFloat(time[2]);\n    } else {\n        seconds += parseFloat(time[0]) * 60;\n        seconds += parseFloat(time[1]);\n    }\n    return seconds;\n}\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { isAudio, offset } from '../utils/general';\nimport { formatTime } from '../utils/time';\n\nclass Progress implements PlayerComponent {\n    #player: Player;\n\n    #progress: HTMLDivElement;\n\n    #slider: HTMLInputElement;\n\n    #buffer: HTMLProgressElement;\n\n    #played: HTMLProgressElement;\n\n    #tooltip: HTMLSpanElement;\n\n    #events: EventsList = {\n        container: {},\n        controls: {},\n        global: {},\n        media: {},\n        slider: {},\n    };\n\n    #forcePause = false;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n        this.#progress = document.createElement('div');\n        this.#progress.className = `op-controls__progress op-control__${this.#controlPosition}`;\n        this.#progress.tabIndex = 0;\n        this.#progress.setAttribute('aria-label', labels?.progressSlider || '');\n        this.#progress.setAttribute('aria-valuemin', '0');\n        this.#progress.setAttribute('aria-valuenow', '0');\n        this.#progress.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__progress--seek';\n        this.#slider.tabIndex = -1;\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.value = '0';\n        this.#slider.setAttribute('aria-label', labels?.progressRail || '');\n        this.#slider.setAttribute('role', 'slider');\n\n        this.#buffer = document.createElement('progress');\n        this.#buffer.className = 'op-controls__progress--buffer';\n        this.#buffer.setAttribute('max', '100');\n        this.#buffer.value = 0;\n\n        this.#played = document.createElement('progress');\n        this.#played.className = 'op-controls__progress--played';\n        this.#played.setAttribute('max', '100');\n        this.#played.value = 0;\n\n        this.#progress.appendChild(this.#slider);\n        this.#progress.appendChild(this.#played);\n        this.#progress.appendChild(this.#buffer);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip = document.createElement('span');\n            this.#tooltip.className = 'op-controls__tooltip';\n            this.#tooltip.tabIndex = -1;\n            this.#tooltip.innerHTML = '00:00';\n            this.#progress.appendChild(this.#tooltip);\n        }\n\n        const setInitialProgress = (): void => {\n            if (this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n                this.#slider.value = current.toString();\n                if (!Number.isNaN(el.duration)) {\n                    this.#slider.setAttribute('max', `${el.duration}`);\n                    this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n                }\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                this.#slider.setAttribute('max', '1');\n                this.#slider.value = '1';\n                this.#slider.style.backgroundSize = '100% 100%';\n                this.#played.value = 1;\n                this.#progress.setAttribute('aria-valuemax', '1');\n                this.#progress.setAttribute('aria-hidden', 'false');\n            } else if (!this.#player.getOptions().live?.showProgress) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        let lastCurrentTime = 0;\n        const defaultDuration = this.#player.getOptions().progress?.duration || 0;\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.loadedmetadata = setInitialProgress.bind(this);\n        this.#events.controls.controlschanged = setInitialProgress.bind(this);\n\n        this.#events.media.progress = (e: Event): void => {\n            const el = e.target as HTMLMediaElement;\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (el.duration > 0) {\n                    for (let i = 0, total = el.buffered.length; i < total; i++) {\n                        if (el.buffered.start(el.buffered.length - 1 - i) < el.currentTime) {\n                            this.#buffer.value = (el.buffered.end(el.buffered.length - 1 - i) / el.duration) * 100;\n                            break;\n                        }\n                    }\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n        this.#events.media.waiting = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('loading')) {\n                this.#slider.classList.add('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('error')) {\n                this.#slider.classList.add('error');\n            }\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                const current = el.currentTime;\n                this.#progress.setAttribute('aria-valuenow', current.toString());\n                this.#progress.setAttribute('aria-valuetext', formatTime(current));\n            }\n        };\n        this.#events.media.play = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            if (\n                this.#player.activeElement().duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled')\n            ) {\n                this.#progress.removeAttribute('aria-valuenow');\n                this.#progress.removeAttribute('aria-valuetext');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                (!this.#player.getElement().getAttribute('op-live__enabled') ||\n                    this.#player.getElement().getAttribute('op-dvr__enabled'))\n            ) {\n                if (\n                    !this.#slider.getAttribute('max') ||\n                    this.#slider.getAttribute('max') === '0' ||\n                    parseFloat(this.#slider.getAttribute('max') || '-1') !== el.duration\n                ) {\n                    if (!Number.isNaN(el.duration)) {\n                        this.#slider.setAttribute('max', `${el.duration}`);\n                    }\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n\n                // Adjust current time between Media and Ads; with the latter, it is convenient to add an extra\n                // second to ensure it will reach the end of the rail\n                const duration = el.duration - el.currentTime + 1 >= 100 ? 100 : el.duration - el.currentTime + 1;\n                const current = this.#player.isMedia() ? el.currentTime : duration;\n                const min = parseFloat(this.#slider.min);\n                const max = parseFloat(this.#slider.max);\n                this.#slider.value = current.toString();\n                this.#slider.style.backgroundSize = `${((current - min) * 100) / (max - min)}% 100%`;\n                this.#played.value =\n                    el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                        ? defaultDuration\n                        : (current / el.duration) * 100;\n\n                if (this.#player.getElement().getAttribute('op-dvr__enabled') && Math.floor(this.#played.value) >= 99) {\n                    lastCurrentTime = el.currentTime;\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.durationchange = (): void => {\n            const el = this.#player.activeElement();\n            const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n            if (!Number.isNaN(el.duration)) {\n                this.#slider.setAttribute('max', `${el.duration}`);\n                this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n            }\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (current / el.duration) * 100;\n        };\n\n        this.#events.media.ended = (): void => {\n            this.#slider.style.backgroundSize = '0% 100%';\n            if (this.#slider.getAttribute('max')) {\n                this.#slider.setAttribute('max', '0');\n            }\n            this.#buffer.value = 0;\n            this.#played.value = 0;\n        };\n\n        const updateSlider = (e: Event): void => {\n            const el = this.#player.activeElement();\n            const target = e.target as HTMLInputElement;\n            const value = parseFloat(target.value);\n            if (\n                this.#slider.classList.contains('op-progress--pressed') ||\n                (value < el.currentTime && !progress?.allowRewind) ||\n                (value > el.currentTime && !progress?.allowSkip)\n            ) {\n                this.#slider.value = el.currentTime.toString();\n                return;\n            }\n            this.#slider.classList.add('.op-progress--pressed');\n\n            const min = parseFloat(target.min);\n            const max = parseFloat(target.max);\n            const val = parseFloat(target.value);\n            this.#slider.style.backgroundSize = `${((val - min) * 100) / (max - min)}% 100%`;\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (val / el.duration) * 100;\n\n            if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                el.currentTime = Math.round(this.#played.value) >= 99 ? lastCurrentTime : val;\n            } else {\n                el.currentTime = val;\n            }\n\n            this.#slider.classList.remove('.op-progress--pressed');\n        };\n\n        const forcePause = (e: KeyboardEvent): void => {\n            const el = this.#player.activeElement();\n            const key = e.which || e.keyCode || 0;\n            const target = this.#slider;\n            const value = Math.round(Number(target.value));\n            const current = Math.round(el.currentTime);\n            const isProgressManipulationAllowed =\n                (value < current && progress?.allowRewind) || (value >= current && progress?.allowSkip);\n\n            // If current progress is not related to an Ad, manipulate current time\n            if (isProgressManipulationAllowed && (key === 1 || key === 0) && this.#player.isMedia() && !el.paused) {\n                el.pause();\n                this.#forcePause = true;\n            }\n        };\n\n        const releasePause = (): void => {\n            const el = this.#player.activeElement();\n            if (this.#forcePause === true && this.#player.isMedia()) {\n                if (el.paused) {\n                    el.play();\n                    this.#forcePause = false;\n                }\n            }\n        };\n\n        // When tapping on mobile, it will update the time and force pause\n        const mobileForcePause = (e: TouchEvent): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity) {\n                const { changedTouches } = e;\n                const x = changedTouches[0]?.pageX || 0;\n                const pos = x - offset(this.#progress).left;\n                const percentage = pos / this.#progress.offsetWidth;\n                const time = percentage * el.duration;\n\n                if (\n                    (time < el.currentTime && progress?.allowRewind) ||\n                    (time > el.currentTime && progress?.allowSkip)\n                ) {\n                    this.#slider.value = time.toString();\n                    updateSlider(e);\n                    if (!el.paused) {\n                        el.pause();\n                        this.#forcePause = true;\n                    }\n                }\n            }\n        };\n\n        this.#events.slider.input = updateSlider.bind(this);\n        this.#events.slider.change = updateSlider.bind(this);\n        this.#events.slider.mousedown = forcePause.bind(this);\n        this.#events.slider.mouseup = releasePause.bind(this);\n        this.#events.slider.touchstart = mobileForcePause.bind(this);\n        this.#events.slider.touchend = releasePause.bind(this);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#events.container.mousemove = (e: MouseEvent): void => {\n                const el = this.#player.activeElement();\n                if (el.duration !== Infinity && !this.#player.isAd()) {\n                    const x = e.pageX;\n\n                    let pos = x - offset(this.#progress).left;\n                    const half = this.#tooltip.offsetWidth / 2;\n                    const percentage = pos / this.#progress.offsetWidth;\n                    const time = percentage * el.duration;\n                    const mediaContainer = this.#player.getContainer();\n                    const limit = mediaContainer.offsetWidth - this.#tooltip.offsetWidth;\n\n                    if (pos <= 0 || x - offset(mediaContainer).left <= half) {\n                        pos = 0;\n                    } else if (x - offset(mediaContainer).left >= limit) {\n                        pos = limit - offset(this.#slider).left - 10;\n                    } else {\n                        pos -= half;\n                    }\n\n                    if (percentage >= 0 && percentage <= 1) {\n                        this.#tooltip.classList.add('op-controls__tooltip--visible');\n                    } else {\n                        this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                    }\n\n                    this.#tooltip.style.left = `${pos}px`;\n                    this.#tooltip.innerHTML = Number.isNaN(time) ? '00:00' : formatTime(time);\n                }\n            };\n            this.#events.global.mousemove = (e: MouseEvent): void => {\n                if (!(e.target as HTMLElement).closest('.op-controls__progress') || this.#player.isAd()) {\n                    this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                }\n            };\n        }\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#progress.addEventListener('keydown', this.#player.getEvents().keydown, EVENT_OPTIONS);\n        this.#progress.addEventListener('mousemove', this.#events.container.mousemove, EVENT_OPTIONS);\n        document.addEventListener('mousemove', this.#events.global.mousemove, EVENT_OPTIONS);\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#progress);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#progress.removeEventListener('keydown', this.#player.getEvents().keydown);\n        this.#progress.removeEventListener('mousemove', this.#events.container.mousemove);\n\n        document.removeEventListener('mousemove', this.#events.global.mousemove);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#buffer.remove();\n        this.#played.remove();\n        this.#slider.remove();\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip.remove();\n        }\n        this.#progress.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const el = this.#player.activeElement();\n        const isAd = this.#player.isAd();\n        const key = e.which || e.keyCode || 0;\n        // Use the 0-9 keys to manipulate current media time to set media (not Ads) to the 0% to 90% of duration.\n        if (!isAd && key >= 48 && key <= 57 && el.duration !== Infinity) {\n            let step = 0;\n            for (let i = 48, limit = 57; i <= limit; i++) {\n                if (i < key) {\n                    step++;\n                }\n            }\n            el.currentTime = el.duration * (0.1 * step);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Progress;\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem, SettingsSubMenu } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { sanitize } from '../utils/general';\n\nclass Settings implements PlayerComponent {\n    #player: Player;\n\n    #submenu: SettingsSubMenu = {};\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLElement;\n\n    #events: EventsList = {\n        global: {},\n        media: {},\n    };\n\n    #originalOutput = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    private clickEvent: () => void;\n\n    private hideEvent: () => void;\n\n    private removeEvent: (e: CustomEvent) => void;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__settings op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.settings || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.settings || '');\n\n        this.#menu = document.createElement('div');\n        this.#menu.className = 'op-settings';\n        this.#menu.setAttribute('aria-hidden', 'true');\n        this.#menu.innerHTML = '<div class=\"op-settings__menu\" role=\"menu\"></div>';\n\n        this.clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n            for (let i = 0, total = menus.length; i < total; ++i) {\n                if (menus[i] !== this.#menu) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n            }\n            this.#menu.setAttribute(\n                'aria-hidden',\n                this.#menu.getAttribute('aria-hidden') === 'false' ? 'true' : 'false'\n            );\n        };\n\n        this.hideEvent = (): void => {\n            let timeout;\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame((): void => {\n                    this.#menu.innerHTML = this.#originalOutput;\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                });\n            }\n        };\n\n        this.removeEvent = (e: CustomEvent): void => {\n            const { id, type } = e.detail;\n            this.removeItem(id, type);\n        };\n\n        this.clickEvent = this.clickEvent.bind(this);\n        this.hideEvent = this.hideEvent.bind(this);\n        this.removeEvent = this.removeEvent.bind(this);\n\n        this.#events.media.controlshidden = this.hideEvent.bind(this);\n        this.#events.media.settingremoved = this.removeEvent.bind(this);\n        this.#events.media.play = this.hideEvent.bind(this);\n        this.#events.media.pause = this.hideEvent.bind(this);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const { target } = e;\n            const current = target as HTMLElement;\n            if (current?.closest(`#${this.#player.id}`) && current?.classList.contains('op-speed__option')) {\n                const level = current?.getAttribute('data-value') || '';\n                this.#player.getMedia().playbackRate = parseFloat(level.replace('speed-', ''));\n            }\n        };\n        this.#events.global.resize = this.hideEvent.bind(this);\n\n        this.#button.addEventListener('click', this.clickEvent, EVENT_OPTIONS);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        document.addEventListener('keydown', this.#events.global.click, EVENT_OPTIONS);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.#events.global.resize, EVENT_OPTIONS);\n        }\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n        this.#player.getContainer().appendChild(this.#menu);\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.clickEvent);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        document.removeEventListener('keydown', this.#events.global.click);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.#events.global.resize);\n        }\n        if (this.#events.global['settings.submenu'] !== undefined) {\n            document.removeEventListener('click', this.#events.global['settings.submenu']);\n            this.#player.getElement().removeEventListener('controlshidden', this.hideEvent);\n        }\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#menu.remove();\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem {\n        const media = this.#player.getMedia();\n        const { labels } = this.#player.getOptions();\n\n        let rate = 1;\n        if (this.#player && media) {\n            rate = media.defaultPlaybackRate !== media.playbackRate ? media.playbackRate : media.defaultPlaybackRate;\n        }\n        return {\n            className: 'op-speed__option',\n            default: rate.toString(),\n            key: 'speed',\n            name: labels?.speed || '',\n            subitems: [\n                { key: '0.25', label: '0.25' },\n                { key: '0.5', label: '0.5' },\n                { key: '0.75', label: '0.75' },\n                { key: '1', label: labels?.speedNormal || '' },\n                { key: '1.25', label: '1.25' },\n                { key: '1.5', label: '1.5' },\n                { key: '2', label: '2' },\n            ],\n        };\n    }\n\n    addItem(name: string, key: string, defaultValue: string, submenu?: SettingsSubItem[], className?: string): void {\n        // Build the menu entry first\n        const dataValue = `${key}-${sanitize(defaultValue, true)}`;\n        const menuItem = document.createElement('div');\n        menuItem.className = 'op-settings__menu-item';\n        menuItem.tabIndex = 0;\n        menuItem.setAttribute('role', 'menuitemradio');\n        menuItem.innerHTML = `<div class=\"op-settings__menu-label\" data-value=\"${dataValue}\">${name}</div>`;\n\n        const submenuMatch = submenu ? submenu.find((x) => x.key === defaultValue) : null;\n        if (submenuMatch) {\n            menuItem.innerHTML += `<div class=\"op-settings__menu-content\" tabindex=\"0\">${submenuMatch.label}</div>`;\n        }\n\n        const mainMenu = this.#menu.querySelector('.op-settings__menu');\n        if (mainMenu) {\n            mainMenu.appendChild(menuItem);\n        }\n        this.#originalOutput = this.#menu.innerHTML;\n\n        // Store the submenu to reach all options for current menu item\n        if (submenu) {\n            const subItems = `\n                <div class=\"op-settings__header\">\n                    <button type=\"button\" class=\"op-settings__back\" tabindex=\"0\">${name}</button>\n                </div>\n                <div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-${key}\">\n                    ${submenu\n                        .map(\n                            (item: SettingsSubItem) => `\n                    <div class=\"op-settings__submenu-item\" role=\"menuitemradio\" aria-checked=\"${\n                        defaultValue === item.key ? 'true' : 'false'\n                    }\">\n                        <div class=\"op-settings__submenu-label ${className || ''}\" tabindex=\"0\" data-value=\"${key}-${\n                                item.key\n                            }\">\n                            ${item.label}\n                        </div>\n                    </div>`\n                        )\n                        .join('')}\n                </div>`;\n            this.#submenu[key] = subItems;\n        }\n\n        this.#events.global['settings.submenu'] = (e: Event): void => {\n            const target = e.target as HTMLElement;\n            if (target.closest(`#${this.#player.id}`)) {\n                if (target.classList.contains('op-settings__back')) {\n                    this.#menu.classList.add('op-settings--sliding');\n                    setTimeout((): void => {\n                        this.#menu.innerHTML = this.#originalOutput;\n                        this.#menu.classList.remove('op-settings--sliding');\n                    }, 100);\n                } else if (target.classList.contains('op-settings__menu-content')) {\n                    const labelEl = target.parentElement\n                        ? target.parentElement.querySelector('.op-settings__menu-label')\n                        : null;\n                    const label = labelEl ? labelEl.getAttribute('data-value') : null;\n                    const fragments = label ? label.split('-') : [];\n                    if (fragments.length > 0) {\n                        fragments.pop();\n\n                        // eslint-disable-next-line no-useless-escape\n                        const current = fragments.join('-').replace(/^\\-|\\-$/, '');\n                        if (typeof this.#submenu[current] !== 'undefined') {\n                            this.#menu.classList.add('op-settings--sliding');\n                            setTimeout((): void => {\n                                this.#menu.innerHTML = this.#submenu[current];\n                                this.#menu.classList.remove('op-settings--sliding');\n                            }, 100);\n                        }\n                    }\n                } else if (target.classList.contains('op-settings__submenu-label')) {\n                    const current = target.getAttribute('data-value');\n                    const value = current ? current.replace(`${key}-`, '') : '';\n                    const label = target.innerText;\n\n                    // Update values in submenu and store\n                    const menuTarget = this.#menu.querySelector(\n                        `#menu-item-${key} .op-settings__submenu-item[aria-checked=true]`\n                    );\n                    if (menuTarget) {\n                        menuTarget.setAttribute('aria-checked', 'false');\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-checked', 'true');\n                        }\n                        this.#submenu[key] = this.#menu.innerHTML;\n\n                        // Restore original menu, and set the new value\n                        this.#menu.classList.add('op-settings--sliding');\n                        setTimeout((): void => {\n                            this.#menu.innerHTML = this.#originalOutput;\n                            const prev = this.#menu.querySelector(\n                                `.op-settings__menu-label[data-value=\"${key}-${defaultValue}\"]`\n                            );\n                            if (prev) {\n                                prev.setAttribute('data-value', `${current}`);\n                                if (prev.nextElementSibling) {\n                                    prev.nextElementSibling.textContent = label;\n                                }\n                            }\n                            defaultValue = value;\n                            this.#originalOutput = this.#menu.innerHTML;\n                            this.#menu.classList.remove('op-settings--sliding');\n                        }, 100);\n                    }\n                }\n            } else {\n                this.hideEvent();\n            }\n        };\n\n        document.addEventListener('click', this.#events.global['settings.submenu'], EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('controlshidden', this.hideEvent, EVENT_OPTIONS);\n    }\n\n    removeItem(id: string | number, type: string, minItems = 2): void {\n        const target = this.#player.getElement().querySelector(`.op-settings__submenu-label[data-value=${type}-${id}]`);\n        if (target) {\n            target.remove();\n        }\n\n        if (\n            this.#player.getElement().querySelectorAll(`.op-settings__submenu-label[data-value^=${type}]`).length <\n            minItems\n        ) {\n            delete this.#submenu[type];\n            const label = this.#player.getElement().querySelector(`.op-settings__menu-label[data-value^=${type}]`);\n            const menuItem = label ? label.closest('.op-settings__menu-item') : null;\n            if (menuItem) {\n                menuItem.remove();\n            }\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const isAd = this.#player.isAd();\n        const settingsBtnFocused = document?.activeElement?.classList.contains('op-controls__settings');\n\n        const menuFocused =\n            document?.activeElement?.classList.contains('op-settings__menu-content') ||\n            document?.activeElement?.classList.contains('op-settings__back') ||\n            document?.activeElement?.classList.contains('op-settings__submenu-label');\n        if (!isAd) {\n            if (settingsBtnFocused && (key === 13 || key === 32)) {\n                this.clickEvent();\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (menuFocused && (key === 13 || key === 32)) {\n                this.#events.global['settings.submenu'](e);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n}\n\nexport default Settings;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { formatTime } from '../utils/time';\n\nclass Time implements PlayerComponent {\n    #player: Player;\n\n    #currentTime: HTMLTimeElement;\n\n    #delimiter: HTMLSpanElement;\n\n    #duration: HTMLTimeElement;\n\n    #container: HTMLSpanElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n\n        this.#currentTime = document.createElement('time');\n        this.#currentTime.className = 'op-controls__current';\n        this.#currentTime.setAttribute('role', 'timer');\n        this.#currentTime.setAttribute('aria-live', 'off');\n        this.#currentTime.setAttribute('aria-hidden', 'false');\n        this.#currentTime.innerText = '0:00';\n\n        const showOnlyCurrent = progress?.showCurrentTimeOnly || false;\n\n        if (!showOnlyCurrent) {\n            this.#delimiter = document.createElement('span');\n            this.#delimiter.className = 'op-controls__time-delimiter';\n            this.#delimiter.setAttribute('aria-hidden', 'false');\n            this.#delimiter.innerText = '/';\n\n            this.#duration = document.createElement('time');\n            this.#duration.className = 'op-controls__duration';\n            this.#duration.setAttribute('aria-hidden', 'false');\n            this.#duration.innerText = formatTime(progress?.duration || 0);\n        }\n\n        const controls = this.#player.getControls().getLayer(this.#controlLayer);\n        this.#container = document.createElement('span');\n        this.#container.className = `op-controls-time op-control__${this.#controlPosition}`;\n        this.#container.appendChild(this.#currentTime);\n        if (!showOnlyCurrent) {\n            this.#container.appendChild(this.#delimiter);\n            this.#container.appendChild(this.#duration);\n        }\n        controls.appendChild(this.#container);\n\n        const setInitialTime = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (!showOnlyCurrent) {\n                    const duration = !Number.isNaN(el.duration)\n                        ? el.duration\n                        : this.#player.getOptions().progress?.duration || 0;\n                    this.#duration.innerText = formatTime(duration);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (!showOnlyCurrent) {\n                this.#duration.setAttribute('aria-hidden', 'true');\n                this.#delimiter.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.loadedmetadata = setInitialTime.bind(this);\n        this.#events.controls.controlschanged = setInitialTime.bind(this);\n\n        const { showLabel: showLiveLabel } = this.#player.getOptions().live || {};\n\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const duration = formatTime(el.duration);\n                if (!showOnlyCurrent && !Number.isNaN(el.duration) && duration !== this.#duration.innerText) {\n                    this.#duration.innerText = duration;\n                    this.#duration.setAttribute('aria-hidden', 'false');\n                    this.#delimiter.setAttribute('aria-hidden', 'false');\n                } else if (showOnlyCurrent || duration !== this.#duration.innerText) {\n                    this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (\n                showOnlyCurrent ||\n                (!this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                    this.#duration.getAttribute('aria-hidden') === 'false')\n            ) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            } else {\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            }\n        };\n        this.#events.media.ended = (): void => {\n            const el = this.#player.activeElement();\n            const duration = !Number.isNaN(el.duration)\n                ? el.duration\n                : this.#player.getOptions().progress?.duration || 0;\n            if (!showOnlyCurrent && this.#player.isMedia()) {\n                this.#duration.innerText = formatTime(duration);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#currentTime.remove();\n        const { showCurrentTimeOnly } = this.#player.getOptions().progress || {};\n        if (!showCurrentTimeOnly) {\n            this.#delimiter.remove();\n            this.#duration.remove();\n        }\n        this.#container.remove();\n    }\n}\n\nexport default Time;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Volume implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #container: HTMLDivElement;\n\n    #display: HTMLProgressElement;\n\n    #slider: HTMLInputElement;\n\n    #events: EventsList = {\n        button: {},\n        media: {},\n        slider: {},\n    };\n\n    #volume: number;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#volume = this.#player.getMedia().volume;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#container = document.createElement('div');\n        this.#container.className = `op-controls__volume op-control__${this.#controlPosition}`;\n        this.#container.tabIndex = 0;\n        this.#container.setAttribute('aria-valuemin', '0');\n        this.#container.setAttribute('aria-valuemax', '100');\n        this.#container.setAttribute('aria-valuenow', `${this.#volume}`);\n        this.#container.setAttribute('aria-valuetext', `${labels?.volume || ''}: ${this.#volume}`);\n        this.#container.setAttribute('aria-orientation', 'vertical');\n        this.#container.setAttribute('aria-label', labels?.volumeSlider || '');\n        this.#container.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__volume--input';\n        this.#slider.tabIndex = -1;\n        this.#slider.value = this.#player.getMedia().volume.toString();\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('max', '1');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.setAttribute('aria-label', labels?.volumeControl || '');\n\n        this.#display = document.createElement('progress');\n        this.#display.className = 'op-controls__volume--display';\n        this.#display.setAttribute('max', '10');\n        this.#display.value = this.#player.getMedia().volume * 10;\n\n        this.#container.appendChild(this.#slider);\n        this.#container.appendChild(this.#display);\n\n        // Use as backup when mute is clicked\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__mute op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mute || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.mute || '');\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const updateSlider = (element: any): void => {\n            const mediaVolume = element.volume * 1;\n            const vol = Math.floor(mediaVolume * 100);\n\n            this.#slider.value = `${element.volume}`;\n            this.#display.value = mediaVolume * 10;\n            this.#container.setAttribute('aria-valuenow', `${vol}`);\n            this.#container.setAttribute('aria-valuetext', `${labels?.volume}: ${vol}`);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const updateButton = (element: any): void => {\n            const vol = element.volume;\n            if (vol <= 0.5 && vol > 0) {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.add('op-controls__mute--half');\n            } else if (vol === 0) {\n                this.#button.classList.add('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            } else {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            }\n        };\n\n        const updateVolume = (event: Event): void => {\n            const el = this.#player.activeElement();\n            const value = parseFloat((event.target as HTMLInputElement).value);\n            el.volume = value;\n            el.muted = el.volume === 0;\n            this.#volume = value;\n            const unmuteEl = this.#player.getContainer().querySelector('.op-player__unmute');\n            if (!el.muted && unmuteEl) {\n                unmuteEl.remove();\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n\n        this.#events.media.volumechange = (): void => {\n            const el = this.#player.activeElement();\n            updateSlider(el);\n            updateButton(el);\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            const el = this.#player.activeElement();\n            if (el.muted) {\n                el.volume = 0;\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n        this.#events.slider.input = updateVolume.bind(this);\n        this.#events.slider.change = updateVolume.bind(this);\n\n        this.#events.button.click = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n            el.muted = !el.muted;\n\n            if (el.muted) {\n                el.volume = 0;\n                this.#button.title = labels?.unmute || '';\n                this.#button.setAttribute('aria-label', labels?.unmute || '');\n            } else {\n                el.volume = this.#volume;\n                this.#button.title = labels?.mute || '';\n                this.#button.setAttribute('aria-label', labels?.mute || '');\n            }\n            const event = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(event);\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        if ((!IS_ANDROID && !IS_IOS) || !this.#player.getOptions().useDeviceVolume) {\n            const controls = this.#player.getControls().getLayer(this.#controlLayer);\n            controls.appendChild(this.#button);\n            controls.appendChild(this.#container);\n        }\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.#events.button.click);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#slider.remove();\n        this.#display.remove();\n        this.#container.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.#player.activeElement();\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__mute');\n\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            el.muted = !el.muted;\n            el.volume = el.muted ? 0 : this.#volume;\n            this.#events.button.click();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Volume;\n","import Captions from './controls/captions';\nimport Fullscreen from './controls/fullscreen';\nimport Levels from './controls/levels';\nimport Play from './controls/play';\nimport Progress from './controls/progress';\nimport Settings from './controls/settings';\nimport Time from './controls/time';\nimport Volume from './controls/volume';\nimport { ElementItem, EventsList, PlayerComponent, PlayerLayers, SettingsItem } from './interfaces';\nimport Player from './player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\n\nclass Controls implements PlayerComponent {\n    events: EventsList = {\n        media: {},\n        mouse: {},\n    };\n\n    #settings: Settings;\n\n    #timer = 0;\n\n    #controls: HTMLDivElement;\n\n    #player: Player;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #items: any;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #controlEls: any = {\n        Captions,\n        Fullscreen,\n        Levels,\n        Play,\n        Progress,\n        Settings,\n        Time,\n        Volume,\n    };\n\n    constructor(player: Player) {\n        this.#player = player;\n        this._setElements();\n    }\n\n    create(): void {\n        this.#player.getElement().controls = false;\n\n        const isMediaVideo = isVideo(this.#player.getElement());\n\n        this._createControlsLayer();\n        this._buildElements();\n\n        this.events.controlschanged = (): void => {\n            this.destroy();\n            this._setElements();\n            this.create();\n        };\n\n        this.events.ended = (): void => {\n            this.#player.getContainer().classList.remove('op-controls--hidden');\n        };\n\n        this.#player.getElement().addEventListener('controlschanged', this.events.controlschanged, EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('ended', this.events.ended, EVENT_OPTIONS);\n\n        const { alwaysVisible } = this.#player.getOptions().controls || {};\n\n        if (!alwaysVisible) {\n            const showControls = (): void => {\n                if (isMediaVideo) {\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._stopControlTimer();\n                }\n            };\n\n            this.events.mouse.mouseenter = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._stopControlTimer();\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                    } else if (this.#player.getOptions().showLoaderOnInit) {\n                        this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'false');\n                    }\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mousemove = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                    } else {\n                        this.#player.playBtn.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'true' : 'false'\n                        );\n                        this.#player.loader.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'false' : 'true'\n                        );\n                    }\n\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mouseleave = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._startControlTimer(1000);\n                }\n            };\n            this.events.media.play = (): void => {\n                if (isMediaVideo) {\n                    this._startControlTimer(this.#player.getOptions().hidePlayBtnTimer || 350);\n                }\n            };\n            this.events.media.loadedmetadata = showControls.bind(this);\n            this.events.media.pause = showControls.bind(this);\n            this.events.media.waiting = showControls.bind(this);\n            this.events.media.stalled = showControls.bind(this);\n            this.events.media.playererror = showControls.bind(this);\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().addEventListener(event, this.events.media[event], EVENT_OPTIONS);\n            });\n\n            if (IS_ANDROID || IS_IOS) {\n                this.#player.getContainer().addEventListener('click', this.events.mouse.mouseenter, EVENT_OPTIONS);\n            } else {\n                Object.keys(this.events.mouse).forEach((event) => {\n                    this.#player.getContainer().addEventListener(event, this.events.mouse[event], EVENT_OPTIONS);\n                });\n            }\n\n            // Initial countdown to hide controls\n            if (isMediaVideo && !this.#player.activeElement().paused) {\n                this._startControlTimer(3000);\n            }\n        }\n    }\n\n    destroy(): void {\n        if (!IS_ANDROID && !IS_IOS) {\n            Object.keys(this.events.mouse).forEach((event) => {\n                this.#player.getContainer().removeEventListener(event, this.events.mouse[event]);\n            });\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().removeEventListener(event, this.events.media[event]);\n            });\n\n            this._stopControlTimer();\n        }\n\n        this.#player.getElement().removeEventListener('controlschanged', this.events.controlschanged);\n        this.#player.getElement().removeEventListener('ended', this.events.ended);\n\n        Object.keys(this.#items).forEach((position: string) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._destroyCustomElement(item as ElementItem);\n                } else if (typeof (item as PlayerComponent).destroy === 'function') {\n                    (item as PlayerComponent).destroy();\n                }\n            });\n        });\n\n        this.#controls.remove();\n    }\n\n    getContainer(): HTMLDivElement {\n        return this.#controls;\n    }\n\n    getLayer(layer: string): HTMLDivElement {\n        return this.#controls.querySelector(`.op-controls-layer__${layer}`) || this.#controls;\n    }\n\n    private _createControlsLayer(): void {\n        if (!this.#controls || !this.#player.getContainer().querySelector('.op-controls')) {\n            this.#controls = document.createElement('div');\n            this.#controls.className = 'op-controls';\n            this.#player.getContainer().appendChild(this.#controls);\n\n            const messageContainer = document.createElement('div');\n            messageContainer.className = 'op-status';\n            messageContainer.innerHTML = '<span></span>';\n            messageContainer.tabIndex = -1;\n            messageContainer.setAttribute('aria-hidden', 'true');\n\n            if (isAudio(this.#player.getElement())) {\n                this.#controls.appendChild(messageContainer);\n            }\n        }\n    }\n\n    private _startControlTimer(time: number): void {\n        const el = this.#player.activeElement();\n        this._stopControlTimer();\n\n        if (typeof window !== 'undefined') {\n            this.#timer = window.setTimeout(() => {\n                if ((!el.paused || !el.ended) && isVideo(this.#player.getElement())) {\n                    this.#player.getContainer().classList.add('op-controls--hidden');\n                    this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                    this._stopControlTimer();\n                    const event = addEvent('controlshidden');\n                    this.#player.getElement().dispatchEvent(event);\n                }\n            }, time);\n        }\n    }\n\n    private _stopControlTimer(): void {\n        if (this.#timer !== 0) {\n            clearTimeout(this.#timer);\n            this.#timer = 0;\n        }\n    }\n\n    private _setElements(): void {\n        const controls = this.#player.getOptions().controls?.layers || {};\n        this.#items = {\n            'bottom-left': [],\n            'bottom-middle': [],\n            'bottom-right': [],\n            left: [],\n            main: [],\n            middle: [],\n            right: [],\n            'top-left': [],\n            'top-middle': [],\n            'top-right': [],\n        };\n\n        const isVideoEl = isVideo(this.#player.getElement());\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        const controlPositions = Object.keys(controls);\n        const layersExist = controlPositions.find((item) => /^(top|bottom)/.test(item));\n        this._createControlsLayer();\n\n        controlPositions.forEach((position: string) => {\n            const [layer, pos] = position.split('-');\n\n            // Create extra layers if top/bottom exist\n            if (pos) {\n                if (!this.#controls.classList.contains('op-controls__stacked')) {\n                    this.#controls.classList.add('op-controls__stacked');\n                }\n                const className = `op-controls-layer__${layer}`;\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            } else if (layersExist) {\n                const className = 'op-controls-layer__center';\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            }\n\n            const layers = controls ? controls[position as keyof PlayerLayers] : null;\n            if (layers) {\n                // remove duplicate values in the same position\n                layers\n                    .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i)\n                    .forEach((el: string) => {\n                        const currentLayer = layersExist && !pos ? 'center' : layer;\n                        const className = `${el.charAt(0).toUpperCase()}${el.slice(1)}`;\n                        const item = new this.#controlEls[className](this.#player, pos || layer, currentLayer);\n                        if (el === 'settings') {\n                            this.#settings = item as Settings;\n                        }\n                        if (isVideoEl || (el !== 'fullscreen' && isAudioEl)) {\n                            this.#items[position].push(item);\n                        }\n                    });\n            }\n        });\n\n        // Append/prepend the custom items (if any) depending on their position:\n        // If position is right, always prepend so Settings and Fullscreen are the last items;\n        // otherwise, append new controls\n        this.#player.getCustomControls().forEach((item) => {\n            const [layer, pos] = item.position.split('-');\n            const currentLayer = layersExist && !pos ? 'center' : layer;\n            item.layer = currentLayer;\n            item.position = pos || layer;\n\n            if (typeof item.index === 'number') {\n                this.#items[item.position].splice(item.index, 0, item);\n            } else if (item.position === 'right') {\n                this.#items[item.position].unshift(item);\n            } else {\n                this.#items[item.position].push(item);\n            }\n        });\n    }\n\n    private _buildElements(): void {\n        // Loop controls to build them and register events\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._createCustomElement(item as ElementItem);\n                } else {\n                    (item as PlayerComponent).create();\n                }\n            });\n        });\n\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                const allowDefault = !this.#player.getOptions().detachMenus || item instanceof Settings;\n                const current = item as PlayerComponent;\n                if (allowDefault && !current.custom && typeof current.addSettings === 'function') {\n                    const menuItem = current.addSettings() as SettingsItem;\n                    if (this.#settings && Object.keys(menuItem).length) {\n                        this.#settings.addItem(\n                            menuItem.name,\n                            menuItem.key,\n                            menuItem.default,\n                            menuItem.subitems,\n                            menuItem.className\n                        );\n                    }\n                }\n            });\n        });\n\n        const e = addEvent('controlschanged');\n        this.#controls.dispatchEvent(e);\n    }\n\n    private _hideCustomMenu(menu: HTMLDivElement): void {\n        let timeout;\n        if (timeout && typeof window !== 'undefined') {\n            window.cancelAnimationFrame(timeout);\n        }\n\n        if (typeof window !== 'undefined') {\n            timeout = window.requestAnimationFrame(() => {\n                menu.setAttribute('aria-hidden', 'true');\n            });\n        }\n    }\n\n    private _toggleCustomMenu(event: Event, menu: HTMLDivElement, item: ElementItem): void {\n        const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n        menus.forEach((m) => {\n            if (m.getAttribute('aria-hidden') === 'false' && m.id !== menu.id) {\n                m.setAttribute('aria-hidden', 'true');\n            }\n        });\n        menu.setAttribute('aria-hidden', menu.getAttribute('aria-hidden') === 'true' ? 'false' : 'true');\n        if (typeof item.click === 'function') {\n            item.click(event);\n        }\n    }\n\n    private _createCustomElement(item: ElementItem): void {\n        const element = document.createElement(item.type);\n        element.tabIndex = 0;\n        element.id = item.id;\n        element.className = `op-controls__${item.id} op-control__${item.position} ${\n            item.showInAds ? '' : 'op-control__hide-in-ad'\n        }`;\n\n        if (item.styles) {\n            Object.assign(element.style, item.styles);\n        }\n\n        if (item.type === 'button' && item.icon) {\n            element.innerHTML = /\\.(jpg|png|svg|gif)$/.test(item.icon)\n                ? `<img src=\"${sanitize(item.icon)}\"${item.alt ? `alt=\"${sanitize(item.alt)}\"` : ''}>`\n                : sanitize(item.icon);\n        } else if (item.content) {\n            element.innerHTML = sanitize(item.content, false);\n        }\n        if (item.type === 'button' && item.title) {\n            element.title = sanitize(item.title);\n        }\n        if (item.type === 'img' && item.alt) {\n            (element as HTMLImageElement).alt = sanitize(item.alt);\n        }\n        if (item.type !== 'button' && item.click && typeof item.click === 'function') {\n            element.setAttribute('aria-role', 'button');\n        }\n\n        // In the event we have subitems for a button control, create menu and attach events for each item\n        if (item.type === 'button' && item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n            const menu = document.createElement('div');\n            menu.className = 'op-settings op-settings__custom';\n            menu.id = `${item.id}-menu`;\n            menu.setAttribute('aria-hidden', 'true');\n\n            const items = item.subitems.map((s) => {\n                let itemIcon = '';\n                if (s.icon) {\n                    itemIcon = /\\.(jpg|png|svg|gif)$/.test(s.icon)\n                        ? `<img src=\"${sanitize(s.icon)}\"${s.alt ? `alt=\"${sanitize(s.alt)}\"` : ''}>`\n                        : sanitize(s.icon, false);\n                }\n                return `<div class=\"op-settings__menu-item\" tabindex=\"0\" ${\n                    s.title ? `title=\"${s.title}\"` : ''\n                } role=\"menuitemradio\">\n                    <div class=\"op-settings__menu-label\" id=\"${s.id}\" data-value=\"${item.id}-${s.id}\">${itemIcon} ${\n                    s.label\n                }</div>\n                </div>`;\n            });\n\n            menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\">${items.join('')}</div>`;\n            this.#player.getContainer().appendChild(menu);\n\n            item.subitems.forEach((subitem) => {\n                const menuItem = menu.querySelector(`#${subitem.id}`);\n                if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                    menuItem.addEventListener('click', subitem.click, EVENT_OPTIONS);\n                }\n            });\n\n            // Ensure to toggle menu, hide other settings menus and dispatch a general custom\n            // click event (if created)\n            element.addEventListener('click', (e) => this._toggleCustomMenu(e, menu, item), EVENT_OPTIONS);\n\n            this.#player\n                .getElement()\n                .addEventListener('controlshidden', () => this._hideCustomMenu(menu), EVENT_OPTIONS);\n        } else if (item.click && typeof item.click === 'function') {\n            element.addEventListener('click', item.click, EVENT_OPTIONS);\n        }\n        if (item.mouseenter && typeof item.mouseenter === 'function') {\n            element.addEventListener('mouseenter', item.mouseenter, EVENT_OPTIONS);\n        }\n        if (item.mouseleave && typeof item.mouseleave === 'function') {\n            element.addEventListener('mouseleave', item.mouseleave, EVENT_OPTIONS);\n        }\n        if (item.keydown && typeof item.keydown === 'function') {\n            element.addEventListener('keydown', item.keydown, EVENT_OPTIONS);\n        }\n        if (item.blur && typeof item.blur === 'function') {\n            element.addEventListener('blur', item.blur, EVENT_OPTIONS);\n        }\n        if (item.focus && typeof item.focus === 'function') {\n            element.addEventListener('focus', item.focus, EVENT_OPTIONS);\n        }\n        if (item.layer) {\n            if (item.layer === 'main') {\n                this.#player.getContainer().appendChild(element);\n            } else {\n                this.getLayer(item.layer).appendChild(element);\n            }\n        }\n\n        // If there's an initial set of operations to dispatch as soon as the control\n        // is created, dispatch them\n        if (item.init && typeof item.init === 'function') {\n            item.init(this.#player);\n        }\n    }\n\n    private _destroyCustomElement(item: ElementItem): void {\n        const control = this.getContainer().querySelector(`.op-controls__${item.id}`);\n        if (control) {\n            if (item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n                const menu = this.#player.getContainer().querySelector(`#${item.id}-menu`) as HTMLDivElement;\n                if (menu) {\n                    item.subitems.forEach((subitem) => {\n                        const menuItem = menu.querySelector(`#${subitem.id}`);\n                        if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                            menuItem.removeEventListener('click', subitem.click);\n                        }\n                    });\n\n                    control.removeEventListener('click', (e) => this._toggleCustomMenu(e, menu, item));\n\n                    this.#player.getElement().removeEventListener('controlshidden', () => this._hideCustomMenu(menu));\n                    menu.remove();\n                }\n            }\n            if (item.click && typeof item.click === 'function') {\n                control.removeEventListener('click', item.click);\n            }\n            if (item.mouseenter && typeof item.mouseenter === 'function') {\n                control.removeEventListener('mouseenter', item.mouseenter);\n            }\n            if (item.mouseleave && typeof item.mouseleave === 'function') {\n                control.removeEventListener('mouseleave', item.mouseleave);\n            }\n            if (item.keydown && typeof item.keydown === 'function') {\n                control.removeEventListener('keydown', item.keydown);\n            }\n            if (item.blur && typeof item.blur === 'function') {\n                control.removeEventListener('blur', item.blur);\n            }\n            if (item.focus && typeof item.focus === 'function') {\n                control.removeEventListener('focus', item.focus);\n            }\n            control.remove();\n\n            // If there's an initial set of operations to dispatch as soon as the control\n            // is created, dispatch them\n            if (item.destroy && typeof item.destroy === 'function') {\n                item.destroy(this.#player);\n            }\n        }\n    }\n}\n\nexport default Controls;\n","import { Level, Source } from '../interfaces';\n\nabstract class Native {\n    element: HTMLMediaElement;\n\n    media: Source;\n\n    promise: Promise<unknown>;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #customPlayer: any;\n\n    constructor(element: HTMLMediaElement, media: Source) {\n        this.element = element;\n        this.media = media;\n        this.promise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    abstract canPlayType(mimeType: string): boolean;\n\n    abstract load(): void;\n\n    abstract destroy(): void;\n\n    abstract set src(media: Source);\n\n    abstract get src(): Source;\n\n    abstract set level(value: number | string | Record<string, unknown>);\n\n    abstract get level(): number | string;\n\n    abstract get levels(): Level[];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    set instance(customPlayer: any) {\n        this.#customPlayer = customPlayer;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get instance(): any {\n        return this.#customPlayer;\n    }\n\n    play(): Promise<void> {\n        return this.element.play();\n    }\n\n    pause(): void {\n        this.element.pause();\n    }\n\n    set volume(value: number) {\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    set muted(value: boolean) {\n        this.element.muted = value;\n    }\n\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set playbackRate(value: number) {\n        this.element.playbackRate = value;\n    }\n\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value: number) {\n        this.element.defaultPlaybackRate = value;\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        this.element.currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    get ended(): boolean {\n        return this.element.ended;\n    }\n}\n\nexport default Native;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isDashSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const dashjs: any;\n\nclass DashMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    #events: EventsList = {};\n\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n\n        this._assign = this._assign.bind(this);\n        this._preparePlayer = this._preparePlayer.bind(this);\n\n        this.promise =\n            typeof dashjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.dashjs.org/latest/dash.all.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(() => {\n            this.#player = dashjs.MediaPlayer().create();\n            this.instance = this.#player;\n        });\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && mimeType === 'application/dash+xml';\n    }\n\n    load(): void {\n        this._preparePlayer();\n        this.#player.attachSource(this.media.src);\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], this._assign);\n            });\n            this.#events = [];\n        }\n        this.#player.reset();\n    }\n\n    set src(media: Source) {\n        if (isDashSource(media)) {\n            this.destroy();\n            this.#player = dashjs.MediaPlayer().create();\n            this._preparePlayer();\n            this.#player.attachSource(media.src);\n\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player) {\n            const bitrates = this.#player.getBitrateInfoListFor('video');\n            if (bitrates.length) {\n                bitrates.forEach((item: number) => {\n                    if (bitrates[item]) {\n                        const { height, name } = bitrates[item];\n                        const level = {\n                            height,\n                            id: `${item}`,\n                            label: name || null,\n                        };\n                        levels.push(level);\n                    }\n                });\n            }\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        if (level === '0') {\n            this.#player.setAutoSwitchQuality(true);\n        } else {\n            this.#player.setAutoSwitchQuality(false);\n            this.#player.setQualityFor('video', level);\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.getQualityFor('video') : '-1';\n    }\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    private _assign(event: Event): void {\n        if (event.type === 'error') {\n            const details = {\n                detail: {\n                    message: event,\n                    type: 'M(PEG)-DASH',\n                },\n            };\n            const errorEvent = addEvent('playererror', details);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event.type, { detail: event });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _preparePlayer(): void {\n        this.#player.updateSettings({\n            debug: {\n                logLevel: dashjs.Debug.LOG_LEVEL_NONE,\n            },\n            streaming: {\n                fastSwitchEnabled: true,\n                scheduleWhilePaused: false,\n            },\n            ...((this.#options as Record<string, unknown>) || {}),\n        });\n        this.#player.initialize();\n        this.#player.attachView(this.element);\n        this.#player.setAutoPlay(false);\n    }\n}\n\nexport default DashMedia;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isFlvSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const flvjs: any;\n\nclass FlvMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n        this.element = element;\n        this.media = mediaSource;\n\n        this._create = this._create.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof flvjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/flv.js@latest/dist/flv.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && (mimeType === 'video/x-flv' || mimeType === 'video/flv');\n    }\n\n    load(): void {\n        this.#player.unload();\n        this.#player.detachMediaElement();\n        this.#player.attachMediaElement(this.element);\n        this.#player.load();\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        this.#player.destroy();\n        this.#player = null;\n    }\n\n    set src(media: Source) {\n        if (isFlvSource(media)) {\n            this.destroy();\n            this._create();\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const { configs, ...rest } = (this.#options as Record<string, unknown>) || {};\n\n        flvjs.LoggingControl.enableDebug = rest?.debug || false;\n        flvjs.LoggingControl.enableVerbose = rest?.debug || false;\n        const options = { ...rest, type: 'flv', url: this.media.src };\n        this.#player = flvjs.createPlayer(options, configs || {});\n        this.instance = this.#player;\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjsevents\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrortypes\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrordetails\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'error') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: `${data[0]}: ${data[1]} ${data[2].msg}`,\n                    type: 'FLV',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event, { detail: { data } });\n            this.element.dispatchEvent(e);\n        }\n    }\n}\n\nexport default FlvMedia;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventsList, Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS, SUPPORTS_HLS } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const Hls: any;\n\n// @see https://github.com/video-dev/hls.js/\nclass HlsMedia extends Native {\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    #recoverDecodingErrorDate = 0;\n\n    #recoverSwapAudioCodecDate = 0;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning\n    #options?: unknown;\n\n    #autoplay: boolean;\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, autoplay: boolean, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options || {};\n        this.element = element;\n        this.media = mediaSource;\n        this.#autoplay = autoplay;\n\n        this._create = this._create.bind(this);\n        this._play = this._play.bind(this);\n        this._pause = this._pause.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof Hls === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return SUPPORTS_HLS() && mimeType === 'application/x-mpegURL';\n    }\n\n    load(): void {\n        if (this.#player) {\n            this.#player.detachMedia();\n            this.#player.loadSource(this.media.src);\n            this.#player.attachMedia(this.element);\n        }\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n        this.element.removeEventListener('play', this._play);\n        this.element.removeEventListener('pause', this._pause);\n        if (this.#player) {\n            this.#player.destroy();\n            this.#player = null;\n        }\n    }\n\n    set src(media: Source) {\n        if (isHlsSource(media)) {\n            this.destroy();\n            this.#player = new Hls(this.#options);\n            this.#player.loadSource(media.src);\n            this.#player.attachMedia(this.element);\n\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const autoplay = !!(this.element.preload === 'auto' || this.#autoplay);\n        (this.#options as Record<string, unknown>).autoStartLoad = autoplay;\n\n        this.#player = new Hls(this.#options);\n        this.instance = this.#player;\n        this.#events = Hls.Events;\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                this._assign(this.#events[event], args)\n            );\n        });\n\n        if (!autoplay) {\n            this.element.addEventListener('play', this._play, EVENT_OPTIONS);\n            this.element.addEventListener('pause', this._pause, EVENT_OPTIONS);\n        }\n    }\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    // @see https://github.com/video-dev/hls.js/blob/master/src/errors.js\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#runtime-events\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#errors\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'hlsError') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: data[1].details,\n                    type: 'HLS',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n\n            // borrowed from https://video-dev.github.io/hls.js/demo\n            const type = data[1].type as string;\n            const { fatal } = data[1];\n            const details = data[1];\n            if (fatal) {\n                switch (type) {\n                    case 'mediaError':\n                        const now = new Date().getTime();\n                        if (!this.#recoverDecodingErrorDate || now - this.#recoverDecodingErrorDate > 3000) {\n                            this.#recoverDecodingErrorDate = new Date().getTime();\n                            this.#player.recoverMediaError();\n                        } else if (!this.#recoverSwapAudioCodecDate || now - this.#recoverSwapAudioCodecDate > 3000) {\n                            this.#recoverSwapAudioCodecDate = new Date().getTime();\n                            console.warn('Attempting to swap Audio Codec and recover from media error');\n                            this.#player.swapAudioCodec();\n                            this.#player.recoverMediaError();\n                        } else {\n                            const msg = 'Cannot recover, last media error recovery failed';\n                            console.error(msg);\n                            const mediaEvent = addEvent(type, { detail: { data: details } });\n                            this.element.dispatchEvent(mediaEvent);\n                        }\n                        break;\n                    case 'networkError':\n                        const message = 'Network error';\n                        console.error(message);\n                        const networkEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(networkEvent);\n                        break;\n                    default:\n                        this.#player.destroy();\n                        const fatalEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(fatalEvent);\n                        break;\n                }\n            } else {\n                const err = addEvent(type, { detail: { data: details } });\n                this.element.dispatchEvent(err);\n            }\n        } else {\n            const details: Record<string, unknown> = data[1] as Record<string, unknown>;\n            if (event === 'hlsLevelLoaded' && details.live === true) {\n                this.element.setAttribute('op-live__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (\n                event === 'hlsLevelUpdated' &&\n                details.live === true &&\n                (details.totalduration as number) > DVR_THRESHOLD\n            ) {\n                this.element.setAttribute('op-dvr__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (event === 'hlsFragParsingMetadata') {\n                const metaEvent = addEvent('metadataready', { detail: { data: data[1] } });\n                this.element.dispatchEvent(metaEvent);\n            }\n            const e = addEvent(event, { detail: { data: data[1] } });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _play(): void {\n        if (this.#player) {\n            this.#player.startLoad();\n        }\n    }\n\n    private _pause(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n    }\n}\n\nexport default HlsMedia;\n","import { Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio, isVideo } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\nclass HTML5Media extends Native {\n    #currentLevel: Level;\n\n    #levelList: Level[] = [];\n\n    #isStreaming = false;\n\n    #retryCount = 0;\n\n    #started = false;\n\n    #timer: number;\n\n    constructor(element: HTMLMediaElement, mediaFile: Source) {\n        super(element, mediaFile);\n\n        if (!isAudio(element) && !isVideo(element)) {\n            throw new TypeError('Native method only supports video/audio tags');\n        }\n\n        this._clearTimeout = this._clearTimeout.bind(this);\n        this._setTimeout = this._setTimeout.bind(this);\n        this._dispatchError = this._dispatchError.bind(this);\n        this._isDvrEnabled = this._isDvrEnabled.bind(this);\n        this._readMediadataInfo = this._readMediadataInfo.bind(this);\n\n        this.#isStreaming = isHlsSource(mediaFile);\n        this.element.addEventListener('playing', this._clearTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('stalled', this._setTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('error', this._dispatchError, EVENT_OPTIONS);\n        this.element.addEventListener('loadeddata', this._isDvrEnabled, EVENT_OPTIONS);\n        this.element.textTracks.addEventListener('addtrack', this._readMediadataInfo, EVENT_OPTIONS);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return !!this.element.canPlayType(mimeType).replace('no', '');\n    }\n\n    load(): void {\n        this.element.load();\n    }\n\n    destroy(): void {\n        this.element.removeEventListener('playing', this._clearTimeout);\n        this.element.removeEventListener('stalled', this._setTimeout);\n        this.element.removeEventListener('error', this._dispatchError);\n        this.element.removeEventListener('loadeddata', this._isDvrEnabled);\n        this.element.textTracks.removeEventListener('addtrack', this._readMediadataInfo);\n    }\n\n    get levels(): Level[] {\n        if (!this.#levelList.length) {\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const level = {\n                    height: 0,\n                    id: `${i}`,\n                    label: levels[i].getAttribute('title') || '',\n                };\n                this.#levelList.push(level);\n            }\n        }\n        return this.#levelList;\n    }\n\n    set level(level: string) {\n        const idx = this.#levelList.findIndex((item) => item.id === level);\n        if (idx > -1) {\n            this.#currentLevel = this.levels[idx];\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const source = levels[i].getAttribute('src');\n                if (source && parseInt(this.#currentLevel.id, 10) === i) {\n                    this.element.src = source;\n                }\n            }\n        }\n    }\n\n    get level(): string {\n        return this.#currentLevel?.id || '-1';\n    }\n\n    set src(media: Source) {\n        this.element.src = media.src;\n    }\n\n    private _isDvrEnabled(): void {\n        const time = this.element.seekable.end(this.element.seekable.length - 1) - this.element.seekable.start(0);\n        if (this.#isStreaming && time > DVR_THRESHOLD && !this.element.getAttribute('op-dvr__enabled')) {\n            this.element.setAttribute('op-dvr__enabled', 'true');\n            const timeEvent = addEvent('timeupdate');\n            this.element.dispatchEvent(timeEvent);\n        }\n    }\n\n    private _readMediadataInfo(e: TrackEvent): void {\n        const target = e;\n        if (target?.track?.kind === 'metadata') {\n            target.track.mode = 'hidden';\n            target.track.addEventListener(\n                'cuechange',\n                (event) => {\n                    const track = event.target as TextTrack;\n                    const cue = track.activeCues ? track.activeCues[0] : null;\n                    if (cue) {\n                        const metaDataEvent = addEvent('metadataready', { detail: cue });\n                        this.element.dispatchEvent(metaDataEvent);\n                    }\n                },\n                EVENT_OPTIONS\n            );\n        }\n    }\n\n    private _setTimeout(): void {\n        if (!this.#started && window !== undefined) {\n            this.#started = true;\n            this.#timer = window.setInterval(() => {\n                if (this.#retryCount >= 30) {\n                    clearInterval(this.#timer);\n                    const message = 'Media download failed part-way due to a network error';\n                    const details = {\n                        detail: {\n                            data: { message, error: 2 },\n                            message,\n                            type: 'HTML5',\n                        },\n                    };\n                    const errorEvent = addEvent('playererror', details);\n                    this.element.dispatchEvent(errorEvent);\n                    this.#retryCount = 0;\n                    this.#started = false;\n                } else {\n                    this.#retryCount++;\n                }\n            }, 1000);\n        }\n    }\n\n    private _clearTimeout(): void {\n        if (this.#timer) {\n            clearInterval(this.#timer);\n            this.#retryCount = 0;\n            this.#started = false;\n        }\n    }\n\n    private _dispatchError(e: Event): void {\n        let defaultMessage;\n        const target = e.target as HTMLMediaElement;\n        const error = target?.error;\n        switch (error?.code) {\n            case error?.MEDIA_ERR_ABORTED:\n                defaultMessage = 'Media playback aborted';\n                break;\n            case error?.MEDIA_ERR_NETWORK:\n                defaultMessage = 'Media download failed part-way due to a network error';\n                break;\n            case error?.MEDIA_ERR_DECODE:\n                defaultMessage = `Media playback aborted due to a corruption problem or because the\n                    media used features your browser did not support.`;\n                break;\n            case error?.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                defaultMessage = `Media could not be loaded, either because the server or network failed\n                    or because the format is not supported.`;\n                break;\n            default:\n                defaultMessage = 'Unknown error occurred.';\n                break;\n        }\n        const details = {\n            detail: {\n                data: { ...e, message: defaultMessage, error: error?.code },\n                message: defaultMessage,\n                type: 'HTML5',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.element.dispatchEvent(errorEvent);\n    }\n}\n\nexport default HTML5Media;\n","import { CustomMedia, Level, PlayerLayers, PlayerOptions, Source } from './interfaces';\nimport DashMedia from './media/dash';\nimport FlvMedia from './media/flv';\nimport HlsMedia from './media/hls';\nimport HTML5Media from './media/html5';\nimport * as source from './utils/media';\n\nclass Media {\n    #element: HTMLMediaElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #media: HTML5Media | HlsMedia | DashMedia | any;\n\n    #files: Source[];\n\n    #promisePlay: Promise<void>;\n\n    #options: PlayerOptions;\n\n    #autoplay: boolean;\n\n    #mediaLoaded = false;\n\n    #customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    #currentSrc: Source;\n\n    constructor(element: HTMLMediaElement, options: PlayerOptions, autoplay: boolean, customMedia: CustomMedia) {\n        this.#element = element;\n        this.#options = options;\n        this.#files = this._getMediaFiles();\n        this.#customMedia = customMedia;\n        this.#autoplay = autoplay;\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return this.#media.canPlayType(mimeType);\n    }\n\n    async load(): Promise<void> {\n        if (this.#mediaLoaded) {\n            return;\n        }\n\n        this.#mediaLoaded = true;\n\n        if (!this.#files.length) {\n            throw new TypeError('Media not set');\n        }\n\n        // Remove previous media if any is detected and it's different from current one\n        if (this.#media && typeof this.#media.destroy === 'function') {\n            const sameMedia = this.#files.length === 1 && this.#files[0].src === this.#media.media.src;\n            if (!sameMedia) {\n                this.#media.destroy();\n            }\n        }\n\n        // Loop until first playable source is found\n        this.#files.some((media) => {\n            try {\n                this.#media = this._invoke(media);\n            } catch (e) {\n                this.#media = new HTML5Media(this.#element, media);\n            }\n\n            return this.#media.canPlayType(media.type);\n        });\n\n        try {\n            if (this.#media === null) {\n                throw new TypeError('Media cannot be played with any valid media type');\n            }\n\n            await this.#media.promise;\n            this.#media.load();\n        } catch (e) {\n            // destroy media\n            if (this.#media) {\n                this.#media.destroy();\n            }\n            throw e;\n        }\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async play(): Promise<void> {\n        if (!this.#mediaLoaded) {\n            await this.load();\n            this.#mediaLoaded = false;\n        } else {\n            await this.#media.promise;\n        }\n        this.#promisePlay = this.#media.play();\n        return this.#promisePlay;\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async pause(): Promise<void> {\n        if (this.#promisePlay !== undefined) {\n            await this.#promisePlay;\n        }\n        this.#media.pause();\n    }\n\n    destroy(): void {\n        if (this.#media) {\n            this.#media.destroy();\n        }\n    }\n\n    set src(media) {\n        if (typeof media === 'string') {\n            this.#files.push({\n                src: media,\n                type: source.predictMimeType(media, this.#element),\n            });\n        } else if (Array.isArray(media)) {\n            this.#files = media;\n        } else if (typeof media === 'object') {\n            this.#files.push(media);\n        }\n\n        // Remove files without source\n        this.#files = this.#files.filter((file) => file.src);\n\n        if (this.#files.length > 0) {\n            const [file] = this.#files;\n            // Save copy of original file to restore it when player is destroyed\n            if (this.#element.src) {\n                this.#element.setAttribute('data-op-file', this.#files[0].src);\n            }\n\n            this.#element.src = file.src;\n            this.#currentSrc = file;\n            if (this.#media) {\n                this.#media.src = file;\n            }\n        } else {\n            this.#element.src = '';\n        }\n    }\n\n    get src(): Source[] {\n        return this.#files;\n    }\n\n    get current(): Source {\n        return this.#currentSrc;\n    }\n\n    set mediaFiles(sources: Source[]) {\n        this.#files = sources;\n    }\n\n    get mediaFiles(): Source[] {\n        return this.#files;\n    }\n\n    set volume(value: number) {\n        if (this.#media) {\n            this.#media.volume = value;\n        }\n    }\n\n    get volume(): number {\n        return this.#media ? this.#media.volume : this.#element.volume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#media) {\n            this.#media.muted = value;\n        }\n    }\n\n    get muted(): boolean {\n        return this.#media ? this.#media.muted : this.#element.muted;\n    }\n\n    set playbackRate(value) {\n        if (this.#media) {\n            this.#media.playbackRate = value;\n        }\n    }\n\n    get playbackRate(): number {\n        return this.#media ? this.#media.playbackRate : this.#element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value) {\n        if (this.#media) {\n            this.#media.defaultPlaybackRate = value;\n        }\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.#media ? this.#media.defaultPlaybackRate : this.#element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        if (this.#media) {\n            this.#media.currentTime = value;\n        }\n    }\n\n    get currentTime(): number {\n        return this.#media ? this.#media.currentTime : this.#element.currentTime;\n    }\n\n    get duration(): number {\n        const duration = this.#media ? this.#media.duration : this.#element.duration;\n        // To seek backwards in a live streaming (mobile devices)\n        if (duration === Infinity && this.#element.seekable && this.#element.seekable.length) {\n            return this.#element.seekable.end(0);\n        }\n        return duration;\n    }\n\n    get paused(): boolean {\n        return this.#media ? this.#media.paused : this.#element.paused;\n    }\n\n    get ended(): boolean {\n        return this.#media ? this.#media.ended : this.#element.ended;\n    }\n\n    set loaded(loaded: boolean) {\n        this.#mediaLoaded = loaded;\n    }\n\n    get loaded(): boolean {\n        return this.#mediaLoaded;\n    }\n\n    set level(value: number | string | Level) {\n        if (this.#media) {\n            this.#media.level = value;\n        }\n    }\n\n    get level(): number | string | Level {\n        return this.#media ? this.#media.level : -1;\n    }\n\n    get levels(): Level[] {\n        return this.#media ? this.#media.levels : [];\n    }\n\n    get instance(): Media | null {\n        return this.#media ? this.#media.instance : null;\n    }\n\n    private _getMediaFiles(): Source[] {\n        const mediaFiles = [];\n        const sourceTags = this.#element.querySelectorAll('source');\n        const nodeSource = this.#element.src;\n\n        // Consider if node contains the `src` and `type` attributes\n        if (nodeSource) {\n            mediaFiles.push({\n                src: nodeSource,\n                type: this.#element.getAttribute('type') || source.predictMimeType(nodeSource, this.#element),\n            });\n        }\n\n        // test <source> types to see if they are usable\n        for (let i = 0, total = sourceTags.length; i < total; i++) {\n            const item = sourceTags[i];\n            const { src } = item;\n            mediaFiles.push({\n                src,\n                type: item.getAttribute('type') || source.predictMimeType(src, this.#element),\n            });\n\n            // If tag has the attribute `preload` set as `none`, the current media will\n            // be the first one on the list of sources\n            if (i === 0) {\n                const [file] = mediaFiles;\n                this.#currentSrc = file;\n            }\n        }\n\n        if (!mediaFiles.length) {\n            mediaFiles.push({\n                src: '',\n                type: source.predictMimeType('', this.#element),\n            });\n        }\n\n        return mediaFiles;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _invoke(media: Source): HlsMedia | DashMedia | HTML5Media | any {\n        const playHLSNatively =\n            this.#element.canPlayType('application/vnd.apple.mpegurl') ||\n            this.#element.canPlayType('application/x-mpegURL');\n\n        this.#currentSrc = media;\n\n        const { layers } = this.#options.controls || {};\n\n        let activeLevels = false;\n        if (layers) {\n            Object.keys(layers).forEach((layer) => {\n                const current = layers ? layers[layer as keyof PlayerLayers] : null;\n                if (current && current.indexOf('levels') > -1) {\n                    activeLevels = true;\n                }\n            });\n        }\n\n        if (Object.keys(this.#customMedia.media).length) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let customRef: any;\n            this.#customMedia.rules.forEach((rule) => {\n                const type = rule(media.src);\n                if (type) {\n                    const customMedia = this.#customMedia.media[type];\n                    const customOptions = this.#options[this.#customMedia.optionsKey[type]] || undefined;\n                    customRef = customMedia(this.#element, media, this.#autoplay, customOptions);\n                }\n            });\n            if (customRef) {\n                customRef.create();\n                return customRef;\n            }\n            return new HTML5Media(this.#element, media);\n        }\n        if (source.isHlsSource(media)) {\n            if (playHLSNatively && this.#options.forceNative && !activeLevels) {\n                return new HTML5Media(this.#element, media);\n            }\n            const hlsOptions = this.#options?.hls || undefined;\n            return new HlsMedia(this.#element, media, this.#autoplay, hlsOptions);\n        }\n        if (source.isDashSource(media)) {\n            const dashOptions = this.#options?.dash || undefined;\n            return new DashMedia(this.#element, media, dashOptions);\n        }\n        if (source.isFlvSource(media)) {\n            const flvOptions = this.#options?.flv || {\n                debug: false,\n                type: 'flv',\n                url: media.src,\n            };\n            return new FlvMedia(this.#element, media, flvOptions);\n        }\n\n        return new HTML5Media(this.#element, media);\n    }\n}\n\nexport default Media;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AdsOptions, Source } from '../interfaces';\nimport Media from '../media';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from '../utils/constants';\nimport { addEvent, isAudio, isVideo, isXml, loadScript } from '../utils/general';\n\ndeclare const google: any;\n\n// @see https://developers.google.com/interactive-media-ads/\nclass Ads {\n    loadPromise: unknown;\n\n    loadedAd = false;\n\n    #ended = false;\n\n    #done = false;\n\n    #active = false;\n\n    #started = false;\n\n    #intervalTimer = 0;\n\n    #volume: number;\n\n    #muted = false;\n\n    #duration = 0;\n\n    #currentTime = 0;\n\n    // @see https://tinyurl.com/ybjas4ut\n    #manager: any = null;\n\n    #player: Player;\n\n    #media: Media;\n\n    #element: HTMLMediaElement;\n\n    #events: string[] = [];\n\n    #ads: string | string[];\n\n    #promise: Promise<void>;\n\n    // @see https://tinyurl.com/ycwp4ufd\n    #loader: any;\n\n    #container?: HTMLDivElement;\n\n    #customClickContainer?: HTMLDivElement;\n\n    #skipElement?: HTMLElement;\n\n    // @see https://tinyurl.com/ya3zksso\n    #displayContainer: any;\n\n    // @see https://tinyurl.com/ya8bxjf4\n    #request: any;\n\n    #autostart = false;\n\n    #autostartMuted = false;\n\n    #playTriggered = false;\n\n    #options: AdsOptions;\n\n    #currentIndex = 0;\n\n    #originalVolume: number;\n\n    #preloadContent: any;\n\n    #lastTimePaused = 0;\n\n    #mediaSources: Source[] = [];\n\n    #mediaStarted = false;\n\n    #adEvent: any = null;\n\n    constructor(\n        player: Player,\n        ads: string | string[],\n        autostart?: boolean,\n        autostartMuted?: boolean,\n        options?: AdsOptions\n    ) {\n        const defaultOpts: AdsOptions = {\n            autoPlayAdBreaks: true,\n            customClick: {\n                enabled: false,\n                label: 'Click here for more info',\n            },\n            audioSkip: {\n                enabled: true,\n                label: 'Skip Ad',\n                remainingLabel: 'Skip in [[secs]] seconds',\n            },\n            debug: false,\n            enablePreloading: false,\n            language: 'en',\n            loop: false,\n            numRedirects: 4,\n            publisherId: undefined,\n            sdkPath: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n            sessionId: undefined,\n            src: [],\n            vpaidMode: 'enabled',\n        };\n        this.#player = player;\n        this.#ads = ads;\n        this.#media = player.getMedia();\n        this.#element = player.getElement();\n        this.#autostart = autostart || false;\n        this.#muted = player.getElement().muted;\n        this.#autostartMuted = autostartMuted || false;\n        this.#options = { ...defaultOpts, ...options };\n        if (options?.customClick && Object.keys(options.customClick).length) {\n            this.#options.customClick = { ...defaultOpts.customClick, ...options.customClick };\n        }\n        this.#playTriggered = false;\n        this.#originalVolume = this.#element.volume;\n        this.#volume = this.#originalVolume;\n\n        const path = this.#options?.debug\n            ? this.#options?.sdkPath?.replace(/(\\.js$)/, '_debug.js')\n            : this.#options?.sdkPath;\n\n        this.load = this.load.bind(this);\n        this.resizeAds = this.resizeAds.bind(this);\n        this._handleClickInContainer = this._handleClickInContainer.bind(this);\n        this._handleSkipAds = this._handleSkipAds.bind(this);\n        this._loaded = this._loaded.bind(this);\n        this._error = this._error.bind(this);\n        this._assign = this._assign.bind(this);\n        this._contentLoadedAction = this._contentLoadedAction.bind(this);\n        this._loadedMetadataHandler = this._loadedMetadataHandler.bind(this);\n        this._contentEndedListener = this._contentEndedListener.bind(this);\n        this._handleResizeAds = this._handleResizeAds.bind(this);\n        this._onContentPauseRequested = this._onContentPauseRequested.bind(this);\n        this._onContentResumeRequested = this._onContentResumeRequested.bind(this);\n\n        this.#promise =\n            path && (typeof google === 'undefined' || typeof google.ima === 'undefined')\n                ? loadScript(path)\n                : new Promise((resolve) => {\n                      resolve();\n                  });\n\n        this.#promise\n            .then(() => {\n                this.load();\n            })\n            .catch((error) => {\n                let message = 'Ad script could not be loaded; please check if you have an AdBlock ';\n                message += 'turned on, or if you provided a valid URL is correct';\n                console.error(`Ad error: ${message}.`);\n\n                const details = {\n                    detail: {\n                        data: error,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            });\n    }\n\n    load(force = false): void {\n        if (\n            typeof google === 'undefined' ||\n            !google.ima ||\n            (!force && this.loadedAd && this.#options.autoPlayAdBreaks)\n        ) {\n            return;\n        }\n\n        // If we have set `autoPlayAdBreaks` to false and haven't set the force flag, don't load ads yet\n        if (!this.#options.autoPlayAdBreaks && !force) {\n            return;\n        }\n\n        this.loadedAd = true;\n\n        const existingContainer = this.#player.getContainer().querySelector('.op-ads');\n        if (existingContainer && existingContainer.parentNode) {\n            existingContainer.parentNode.removeChild(existingContainer);\n        }\n\n        this.#started = true;\n        this.#container = document.createElement('div');\n        this.#container.className = 'op-ads';\n        this.#container.tabIndex = -1;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.#container, this.#element.nextSibling);\n        }\n        this.#container.addEventListener('click', this._handleClickInContainer);\n\n        if (this.#options.customClick?.enabled) {\n            this.#customClickContainer = document.createElement('div');\n            this.#customClickContainer.className = 'op-ads__click-container';\n            this.#customClickContainer.innerHTML = `<div class=\"op-ads__click-label\">${\n                this.#options.customClick.label\n            }</div>`;\n            if (this.#element.parentElement) {\n                this.#element.parentElement.insertBefore(this.#customClickContainer, this.#element.nextSibling);\n            }\n        }\n\n        if (isAudio(this.#element) && this.#options.audioSkip?.enabled) {\n            if (this.#options.audioSkip?.element) {\n                const { element } = this.#options.audioSkip || {};\n                if (typeof element === 'string') {\n                    const target = document.getElementById(element);\n                    if (target) {\n                        this.#skipElement = target;\n                    }\n                } else if (element instanceof HTMLElement) {\n                    this.#skipElement = element;\n                }\n            } else {\n                this.#skipElement = document.createElement('button');\n                this.#skipElement.className = 'op-ads__skip hidden';\n                this.#player.getControls().getContainer().appendChild(this.#skipElement);\n            }\n            if (this.#skipElement) {\n                this.#skipElement.addEventListener('click', this._handleSkipAds, EVENT_OPTIONS);\n            }\n        }\n\n        this.#mediaSources = this.#media.src;\n        const vpaidModeMap: Record<string, unknown> = {\n            disabled: google.ima.ImaSdkSettings.VpaidMode.DISABLED,\n            enabled: google.ima.ImaSdkSettings.VpaidMode.ENABLED,\n            insecure: google.ima.ImaSdkSettings.VpaidMode.INSECURE,\n        };\n\n        google.ima.settings.setVpaidMode(vpaidModeMap[this.#options.vpaidMode || 'enabled']);\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(true);\n        google.ima.settings.setAutoPlayAdBreaks(this.#options.autoPlayAdBreaks);\n        google.ima.settings.setNumRedirects(this.#options.numRedirects);\n        google.ima.settings.setLocale(this.#options.language);\n        if (this.#options.sessionId) {\n            google.ima.settings.setSessionId(this.#options.sessionId);\n        }\n        if (this.#options.publisherId) {\n            google.ima.settings.setPpid(this.#options.publisherId);\n        }\n        google.ima.settings.setPlayerType('openplayerjs');\n        google.ima.settings.setPlayerVersion('3.0.0');\n\n        this.#displayContainer = new google.ima.AdDisplayContainer(\n            this.#container,\n            this.#element,\n            this.#customClickContainer\n        );\n\n        this.#loader = new google.ima.AdsLoader(this.#displayContainer);\n        this.#loader.addEventListener(\n            google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n            this._loaded,\n            EVENT_OPTIONS\n        );\n\n        this.#loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error, EVENT_OPTIONS);\n\n        // Create responsive ad\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this._handleResizeAds, EVENT_OPTIONS);\n        }\n        this.#element.addEventListener('loadedmetadata', this._handleResizeAds, EVENT_OPTIONS);\n\n        // Request Ads automatically if `autoplay` was set\n        if (\n            this.#autostart === true ||\n            this.#autostartMuted === true ||\n            force === true ||\n            this.#options.enablePreloading === true ||\n            this.#playTriggered === true\n        ) {\n            if (!this.#done) {\n                this.#done = true;\n                this.#displayContainer.initialize();\n            }\n            this._requestAds();\n        }\n    }\n\n    async play(): Promise<void> {\n        if (!this.#done) {\n            this.#playTriggered = true;\n            this._initNotDoneAds();\n            return;\n        }\n\n        if (this.#manager) {\n            try {\n                // No timer interval and no Ad active means it's a potential initial ad play\n                if (!this.#intervalTimer && this.#active === false) {\n                    this.#manager.start();\n                } else {\n                    this.#manager.resume();\n                }\n                this.#active = true;\n                const e = addEvent('play');\n                this.#element.dispatchEvent(e);\n            } catch (err) {\n                this._resumeMedia();\n            }\n        }\n    }\n\n    pause(): void {\n        if (this.#manager) {\n            this.#active = false;\n            this.#manager.pause();\n            const e = addEvent('pause');\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    destroy(): void {\n        if (this.#manager) {\n            this.#manager.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n\n            if (this.#events) {\n                this.#events.forEach((event) => {\n                    this.#manager.removeEventListener(event, this._assign);\n                });\n            }\n        }\n\n        this.#events = [];\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.removeEventListener(event, mouseEvents[event]);\n            }\n        });\n\n        if (this.#loader) {\n            this.#loader.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n            this.#loader.removeEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this._loaded);\n        }\n\n        const destroy = !Array.isArray(this.#ads) || this.#currentIndex > this.#ads.length;\n        if (this.#manager && destroy) {\n            this.#manager.destroy();\n        }\n\n        if (this.#options.customClick?.enabled && this.#customClickContainer) {\n            this.#customClickContainer.remove();\n        }\n\n        if (this.#options.audioSkip?.enabled && this.#skipElement) {\n            this.#skipElement.removeEventListener('click', this._handleSkipAds);\n            this.#skipElement.remove();\n        }\n\n        if (IS_IOS || IS_ANDROID) {\n            this.#element.removeEventListener('loadedmetadata', this._contentLoadedAction);\n        }\n        this.#element.removeEventListener('loadedmetadata', this._handleResizeAds);\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this._handleResizeAds);\n        }\n\n        if (this.#container) {\n            this.#container.removeEventListener('click', this._handleClickInContainer);\n            this.#container.remove();\n        }\n        this.loadPromise = null;\n        this.loadedAd = false;\n        this.#done = false;\n        this.#playTriggered = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        this.#adEvent = null;\n    }\n\n    resizeAds(width?: number, height?: number): void {\n        if (this.#manager) {\n            const target = this.#element;\n            const mode =\n                target.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL;\n\n            let formattedWidth = width;\n            const percentageWidth = width ? width.toString() : '';\n            if (width && percentageWidth.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedWidth = this.#element.parentElement.offsetWidth * (parseInt(percentageWidth, 10) / 100);\n                }\n            }\n\n            let formattedHeight = height;\n            const percentageHeight = height ? height.toString() : '';\n            if (height && percentageHeight.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedHeight = this.#element.parentElement.offsetHeight * (parseInt(percentageHeight, 10) / 100);\n                }\n            }\n\n            let timeout;\n\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame(() => {\n                    this.#manager.resize(\n                        formattedWidth || target.offsetWidth,\n                        formattedHeight || target.offsetHeight,\n                        mode\n                    );\n                });\n            }\n        }\n    }\n\n    getAdsManager(): unknown {\n        return this.#manager;\n    }\n\n    getAdsLoader(): any {\n        return this.#loader;\n    }\n\n    started(): boolean {\n        return this.#started;\n    }\n\n    set src(source: string | string[]) {\n        this.#ads = source;\n    }\n\n    set isDone(value: boolean) {\n        this.#done = value;\n    }\n\n    set playRequested(value: boolean) {\n        this.#playTriggered = value;\n    }\n\n    set volume(value: number) {\n        if (this.#manager) {\n            this.#volume = value;\n            this.#manager.setVolume(value);\n            this._setMediaVolume(value);\n            this.#muted = value === 0;\n        }\n    }\n\n    get volume(): number {\n        return this.#manager ? this.#manager.getVolume() : this.#originalVolume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#manager) {\n            if (value) {\n                this.#manager.setVolume(0);\n                this.#muted = true;\n                this._setMediaVolume(0);\n            } else {\n                this.#manager.setVolume(this.#volume);\n                this.#muted = false;\n                this._setMediaVolume(this.#volume);\n            }\n        }\n    }\n\n    get muted(): boolean {\n        return this.#muted;\n    }\n\n    set currentTime(value: number) {\n        this.#currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.#currentTime;\n    }\n\n    get duration(): number {\n        return this.#duration;\n    }\n\n    get paused(): boolean {\n        return !this.#active;\n    }\n\n    get ended(): boolean {\n        return this.#ended;\n    }\n\n    private _assign(event: any): void {\n        const ad = event.getAd();\n        if (ad) {\n            this.#adEvent = ad;\n        }\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                if (!ad.isLinear()) {\n                    this._onContentResumeRequested();\n                } else {\n                    if (IS_IPHONE && isVideo(this.#element)) {\n                        this.#element.controls = false;\n                    }\n                    this.#duration = ad.getDuration();\n                    this.#currentTime = ad.getDuration();\n                    if (!this.#mediaStarted && !IS_IOS && !IS_ANDROID) {\n                        const waitingEvent = addEvent('waiting');\n                        this.#element.dispatchEvent(waitingEvent);\n\n                        const loadedEvent = addEvent('loadedmetadata');\n                        this.#element.dispatchEvent(loadedEvent);\n\n                        this.resizeAds();\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.STARTED:\n                if (ad.isLinear()) {\n                    if (\n                        this.#element.parentElement &&\n                        !this.#element.parentElement.classList.contains('op-ads--active')\n                    ) {\n                        this.#element.parentElement.classList.add('op-ads--active');\n                    }\n\n                    if (!this.#media.paused) {\n                        this.#media.pause();\n                    }\n                    this.#active = true;\n                    const playEvent = addEvent('play');\n                    this.#element.dispatchEvent(playEvent);\n                    let resized;\n\n                    if (!resized) {\n                        this.resizeAds();\n                        resized = true;\n                    }\n\n                    if (this.#media.ended) {\n                        this.#ended = false;\n                        const endEvent = addEvent('adsmediaended');\n                        this.#element.dispatchEvent(endEvent);\n                    }\n\n                    if (typeof window !== 'undefined') {\n                        this.#intervalTimer = window.setInterval(() => {\n                            if (this.#active === true) {\n                                this.#currentTime = Math.round(this.#manager.getRemainingTime());\n                                const timeEvent = addEvent('timeupdate');\n                                this.#element.dispatchEvent(timeEvent);\n                            }\n                        }, 350);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.SKIPPED:\n                if (ad.isLinear()) {\n                    if (event.type === google.ima.AdEvent.Type.SKIPPED) {\n                        const skipEvent = addEvent('adsskipped');\n                        this.#element.dispatchEvent(skipEvent);\n                    }\n\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.#active = false;\n                    clearInterval(this.#intervalTimer);\n                }\n                break;\n            case google.ima.AdEvent.Type.VOLUME_CHANGED:\n                this._setMediaVolume(this.volume);\n                break;\n            case google.ima.AdEvent.Type.VOLUME_MUTED:\n                if (ad.isLinear()) {\n                    const volumeEvent = addEvent('volumechange');\n                    this.#element.dispatchEvent(volumeEvent);\n                }\n                break;\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                if (ad.isLinear()) {\n                    this.#active = false;\n                    this.#ended = true;\n                    this.#intervalTimer = 0;\n                    this.#muted = false;\n                    this.#started = false;\n                    this.#adEvent = null;\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.destroy();\n                    if (this.#element.currentTime >= this.#element.duration) {\n                        const endedEvent = addEvent('ended');\n                        this.#element.dispatchEvent(endedEvent);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.CLICK:\n                const pauseEvent = addEvent('pause');\n                this.#element.dispatchEvent(pauseEvent);\n                break;\n            case google.ima.AdEvent.Type.AD_BREAK_READY:\n                if (!this.#options.autoPlayAdBreaks) {\n                    this.play();\n                }\n                break;\n            case google.ima.AdEvent.Type.AD_PROGRESS:\n                const progressData = event.getAdData();\n                const offset = this.#adEvent ? this.#adEvent.getSkipTimeOffset() : -1;\n                if (this.#skipElement) {\n                    if (offset !== -1) {\n                        const canSkip = this.#manager.getAdSkippableState();\n                        const remainingTime = Math.ceil(offset - progressData.currentTime);\n                        this.#skipElement.classList.remove('hidden');\n                        if (canSkip) {\n                            this.#skipElement.textContent = this.#options.audioSkip?.label || '';\n                            this.#skipElement.classList.remove('disabled');\n                        } else {\n                            this.#skipElement.textContent =\n                                this.#options.audioSkip?.remainingLabel.replace('[[secs]]', remainingTime.toString()) ||\n                                '';\n                            this.#skipElement.classList.add('disabled');\n                        }\n                    } else {\n                        this.#skipElement.classList.add('hidden');\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        // Assign events prefixed with `ads` to main element so user\n        // can listen to these events, except if the system detects a non-fatal error\n        if (event.type === google.ima.AdEvent.Type.LOG) {\n            const adData = event.getAdData();\n            if (adData.adError) {\n                const message = adData.adError.getMessage();\n                console.warn(`Ad warning: Non-fatal error occurred: ${message}`);\n                const details = {\n                    detail: {\n                        data: adData.adError,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            }\n        } else {\n            const e = addEvent(`ads${event.type}`);\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.ErrorCode\n    private _error(event: any): void {\n        const error = event.getError();\n        const details = {\n            detail: {\n                data: error,\n                message: error.toString(),\n                type: 'Ads',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.#element.dispatchEvent(errorEvent);\n\n        // @see https://support.google.com/admanager/answer/4442429?hl=en\n        const fatalErrorCodes = [\n            100, 101, 102, 300, 301, 302, 303, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 500, 501, 502, 503,\n            900, 901, 1005,\n        ];\n\n        if (Array.isArray(this.#ads) && this.#ads.length > 1 && this.#currentIndex < this.#ads.length - 1) {\n            this.#currentIndex++;\n            this.destroy();\n            this.#started = true;\n            this.#playTriggered = true;\n            this.load(true);\n            console.warn(`Ad warning: ${error.toString()}`);\n        } else {\n            // Unless there's a fatal error, do not destroy the Ads manager\n            if (fatalErrorCodes.indexOf(error.getErrorCode()) > -1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                console.error(`Ad error: ${error.toString()}`);\n            } else {\n                console.warn(`Ad warning: ${error.toString()}`);\n            }\n            this.#adEvent = null;\n            if (this.#autostart === true || this.#autostartMuted === true || this.#started === true) {\n                this.#active = false;\n                // Sometimes, due to pre-fetch issues, Ads could report an error, but the SDK is able to\n                // play Ads, so check if src was set to determine what action to take\n                this._resumeMedia();\n            }\n        }\n    }\n\n    private _loaded(managerLoadedEvent: any): void {\n        const adsRenderingSettings = new google.ima.AdsRenderingSettings();\n        adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = false;\n        adsRenderingSettings.enablePreloading = this.#options.enablePreloading;\n        // Get the ads manager.\n        this.#manager = managerLoadedEvent.getAdsManager(this.#element, adsRenderingSettings);\n        this._start(this.#manager);\n        this.loadPromise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    private _start(manager: any): void {\n        if (this.#customClickContainer && manager.isCustomClickTrackingUsed()) {\n            this.#customClickContainer.classList.add('op-ads__click-container--visible');\n        }\n        // Add listeners to the required events.\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n            this._onContentPauseRequested,\n            EVENT_OPTIONS\n        );\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n            this._onContentResumeRequested,\n            EVENT_OPTIONS\n        );\n\n        this.#events = [\n            google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n            google.ima.AdEvent.Type.CLICK,\n            google.ima.AdEvent.Type.VIDEO_CLICKED,\n            google.ima.AdEvent.Type.VIDEO_ICON_CLICKED,\n            google.ima.AdEvent.Type.AD_PROGRESS,\n            google.ima.AdEvent.Type.AD_BUFFERING,\n            google.ima.AdEvent.Type.IMPRESSION,\n            google.ima.AdEvent.Type.DURATION_CHANGE,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.LINEAR_CHANGED,\n            google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n            google.ima.AdEvent.Type.AD_METADATA,\n            google.ima.AdEvent.Type.INTERACTION,\n            google.ima.AdEvent.Type.COMPLETE,\n            google.ima.AdEvent.Type.FIRST_QUARTILE,\n            google.ima.AdEvent.Type.LOADED,\n            google.ima.AdEvent.Type.MIDPOINT,\n            google.ima.AdEvent.Type.PAUSED,\n            google.ima.AdEvent.Type.RESUMED,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.STARTED,\n            google.ima.AdEvent.Type.THIRD_QUARTILE,\n            google.ima.AdEvent.Type.SKIPPED,\n            google.ima.AdEvent.Type.VOLUME_CHANGED,\n            google.ima.AdEvent.Type.VOLUME_MUTED,\n            google.ima.AdEvent.Type.LOG,\n        ];\n\n        if (!this.#options.autoPlayAdBreaks) {\n            // Add it to the events array so it gets removed onDestroy\n            this.#events.push(google.ima.AdEvent.Type.AD_BREAK_READY);\n        }\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.addEventListener(event, mouseEvents[event], EVENT_OPTIONS);\n            }\n        });\n        this.#events.forEach((event) => {\n            manager.addEventListener(event, this._assign, EVENT_OPTIONS);\n        });\n\n        if (this.#autostart === true || this.#autostartMuted === true || this.#playTriggered === true) {\n            this.#playTriggered = false;\n            if (!this.#done) {\n                this._initNotDoneAds();\n                return;\n            }\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n            manager.start();\n            const e = addEvent('play');\n            this.#element.dispatchEvent(e);\n        } else if (this.#options.enablePreloading === true) {\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n        }\n    }\n\n    private _initNotDoneAds(): void {\n        if (this.#displayContainer) {\n            this.#done = true;\n            this.#displayContainer.initialize();\n\n            if (IS_IOS || IS_ANDROID) {\n                this.#preloadContent = this._contentLoadedAction;\n                this.#element.addEventListener('loadedmetadata', this._contentLoadedAction, EVENT_OPTIONS);\n                this.#element.load();\n            } else {\n                this._contentLoadedAction();\n            }\n        } else {\n            this.load();\n            this.loadedAd = false;\n        }\n    }\n\n    private _contentEndedListener(): void {\n        this.#ended = true;\n        this.#active = false;\n        this.#started = false;\n        this.#loader.contentComplete();\n    }\n\n    private _onContentPauseRequested(): void {\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        this.#lastTimePaused = this.#media.currentTime;\n\n        if (this.#started) {\n            this.#media.pause();\n        } else {\n            this.#started = true;\n        }\n        const e = addEvent('play');\n        this.#element.dispatchEvent(e);\n    }\n\n    private _onContentResumeRequested(): void {\n        this.#element.addEventListener('ended', this._contentEndedListener, EVENT_OPTIONS);\n        this.#element.addEventListener('loadedmetadata', this._loadedMetadataHandler, EVENT_OPTIONS);\n        if (IS_IOS || IS_ANDROID) {\n            this.#media.src = this.#mediaSources;\n            this.#media.load();\n            this._prepareMedia();\n            if (this.#element.parentElement) {\n                this.#element.parentElement.classList.add('op-ads--active');\n            }\n        } else {\n            const event = addEvent('loadedmetadata');\n            this.#element.dispatchEvent(event);\n        }\n    }\n\n    private _loadedMetadataHandler(): void {\n        if (Array.isArray(this.#ads)) {\n            this.#currentIndex++;\n            if (this.#currentIndex <= this.#ads.length - 1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                this.#loader.contentComplete();\n                this.#playTriggered = true;\n                this.#started = true;\n                this.#done = false;\n                this.load(true);\n            } else {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else if (this.#element.seekable.length) {\n            if (this.#element.seekable.end(0) > this.#lastTimePaused) {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else {\n            setTimeout(this._loadedMetadataHandler, 100);\n        }\n    }\n\n    private _resumeMedia(): void {\n        this.#intervalTimer = 0;\n        this.#muted = false;\n        this.#started = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.classList.remove('op-ads--active');\n        }\n\n        if (this.#media.ended) {\n            const e = addEvent('ended');\n            this.#element.dispatchEvent(e);\n        } else {\n            try {\n                this.#media.play();\n                setTimeout(() => {\n                    const e = addEvent('play');\n                    this.#element.dispatchEvent(e);\n                }, 50);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    }\n\n    private _requestAds(): void {\n        this.#request = new google.ima.AdsRequest();\n        const ads = Array.isArray(this.#ads) ? this.#ads[this.#currentIndex] : this.#ads;\n\n        if (isXml(ads)) {\n            this.#request.adsResponse = ads;\n        } else {\n            this.#request.adTagUrl = ads;\n        }\n\n        const width = this.#element.parentElement ? this.#element.parentElement.offsetWidth : 0;\n        const height = this.#element.parentElement ? this.#element.parentElement.offsetHeight : 0;\n        this.#request.linearAdSlotWidth = width;\n        this.#request.linearAdSlotHeight = height;\n        this.#request.nonLinearAdSlotWidth = width;\n        this.#request.nonLinearAdSlotHeight = height / 3;\n        this.#request.setAdWillAutoPlay(this.#autostart);\n        this.#request.setAdWillPlayMuted(this.#autostartMuted);\n        this.#loader.requestAds(this.#request);\n    }\n\n    /**\n     * Internal callback to request Ads.\n     *\n     * @memberof Ads\n     */\n    private _contentLoadedAction(): void {\n        if (this.#preloadContent) {\n            this.#element.removeEventListener('loadedmetadata', this.#preloadContent);\n            this.#preloadContent = null;\n        }\n        this._requestAds();\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/faq#8\n    private _resetAdsAfterManualBreak(): void {\n        if (this.#manager) {\n            this.#manager.destroy();\n        }\n        this.#loader.contentComplete();\n        this.#done = false;\n        this.#playTriggered = true;\n    }\n\n    private _prepareMedia(): void {\n        this.#media.currentTime = this.#lastTimePaused;\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this._resumeMedia();\n    }\n\n    private _setMediaVolume(volume: number): void {\n        this.#media.volume = volume;\n        this.#media.muted = volume === 0;\n    }\n\n    private _handleClickInContainer(): void {\n        if (this.#media.paused) {\n            const e = addEvent('paused');\n            this.#element.dispatchEvent(e);\n            this.pause();\n        }\n    }\n\n    private _handleResizeAds(): void {\n        this.resizeAds();\n    }\n\n    private _handleSkipAds(): void {\n        this.#manager.skip();\n    }\n}\n\nexport default Ads;\n","import Controls from './controls';\nimport Fullscreen from './controls/fullscreen';\nimport {\n    CustomMedia,\n    ElementItem,\n    EventsList,\n    Languages,\n    PlayerLabels,\n    PlayerOptions,\n    Source,\n    Track,\n} from './interfaces';\nimport Media from './media';\nimport Ads from './media/ads';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\nimport { isAutoplaySupported, predictMimeType } from './utils/media';\n\ninterface P {\n    loader: HTMLSpanElement;\n    playBtn: HTMLButtonElement;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any;\n    init(): Promise<void>;\n    load(): Promise<void> | void;\n    play(): Promise<void>;\n    pause(): void;\n    destroy(): void;\n    getContainer(): HTMLElement;\n    getControls(): Controls;\n    getCustomControls(): ElementItem[];\n    getElement(): HTMLMediaElement;\n    getEvents(): EventsList;\n    getOptions(): PlayerOptions;\n    activeElement(): Ads | Media;\n    isMedia(): boolean;\n    isAd(): boolean;\n    getMedia(): Media;\n    getAd(): Ads;\n    addCaptions(args: Track): void;\n    addControl(args: ElementItem): void;\n    removeControl(controlName: string): void;\n    _prepareMedia(): Promise<void>;\n    enableDefaultPlayer(): void;\n    loadAd(src: string | string[]): Promise<void>;\n}\n\nclass Player {\n    static instances: { [id: string]: P } = {};\n\n    static customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    static init(): void {\n        Player.instances = {};\n        const targets = document.querySelectorAll('video.op-player, audio.op-player');\n        for (let i = 0, total = targets.length; i < total; i++) {\n            const target = targets[i] as HTMLMediaElement;\n            const settings = target.getAttribute('data-op-settings');\n            const options = settings ? JSON.parse(settings) : {};\n            const player = new Player(target, options);\n            player.init();\n        }\n    }\n\n    static addMedia(name: string, mimeType: string, valid: (url: string) => string, media: Source): void {\n        Player.customMedia.media[mimeType] = media;\n        Player.customMedia.optionsKey[mimeType] = name;\n        Player.customMedia.rules.push(valid);\n    }\n\n    loader: HTMLSpanElement;\n\n    playBtn: HTMLButtonElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any = null;\n\n    #controls: Controls;\n\n    #adsInstance: Ads;\n\n    #uid = '';\n\n    #element: HTMLMediaElement;\n\n    #ads?: string | string[];\n\n    #media: Media;\n\n    #events: EventsList = {};\n\n    #autoplay = false;\n\n    #volume: number;\n\n    #canAutoplay = false;\n\n    #canAutoplayMuted = false;\n\n    #processedAutoplay = false;\n\n    #options: PlayerOptions;\n\n    #customElements: ElementItem[] = [];\n\n    #fullscreen: Fullscreen;\n\n    #defaultOptions: PlayerOptions = {\n        controls: {\n            alwaysVisible: false,\n            layers: {\n                left: ['play', 'time', 'volume'],\n                middle: ['progress'],\n                right: ['captions', 'settings', 'fullscreen'],\n            },\n        },\n        defaultLevel: undefined,\n        detachMenus: false,\n        forceNative: true,\n        height: 0,\n        hidePlayBtnTimer: 350,\n        labels: {\n            auto: 'Auto',\n            captions: 'CC/Subtitles',\n            click: 'Click to unmute',\n            fullscreen: 'Fullscreen',\n            lang: {\n                en: 'English',\n            },\n            levels: 'Quality Levels',\n            live: 'Live Broadcast',\n            mediaLevels: 'Change Quality',\n            mute: 'Mute',\n            off: 'Off',\n            pause: 'Pause',\n            play: 'Play',\n            progressRail: 'Time Rail',\n            progressSlider: 'Time Slider',\n            settings: 'Player Settings',\n            speed: 'Speed',\n            speedNormal: 'Normal',\n            tap: 'Tap to unmute',\n            toggleCaptions: 'Toggle Captions',\n            unmute: 'Unmute',\n            volume: 'Volume',\n            volumeControl: 'Volume Control',\n            volumeSlider: 'Volume Slider',\n        },\n        live: {\n            showLabel: true,\n            showProgress: false,\n        },\n        media: {\n            pauseOnClick: false,\n        },\n        mode: 'responsive', // or `fill` or `fit`\n        onError: (e: unknown) => console.error(e),\n        pauseOthers: true,\n        progress: {\n            allowRewind: true,\n            allowSkip: true,\n            duration: 0,\n            showCurrentTimeOnly: false,\n        },\n        showLoaderOnInit: false,\n        startTime: 0,\n        startVolume: 1,\n        step: 0,\n        useDeviceVolume: true,\n        width: 0,\n    };\n\n    constructor(element: HTMLMediaElement | string, options?: PlayerOptions) {\n        this.#element =\n            element instanceof HTMLMediaElement ? element : (document.getElementById(element) as HTMLMediaElement);\n        if (this.#element) {\n            this.#autoplay = this.#element.autoplay || false;\n            if (typeof options !== 'string' && !Array.isArray(options)) {\n                this._mergeOptions(options);\n            }\n            this.#element.volume = this.#options.startVolume || 1;\n\n            if (this.#options.ads && this.#options.ads.src) {\n                this.#ads = this.#options.ads.src;\n            }\n            if ((this.#options?.startTime || 0) > 0) {\n                this.#element.currentTime = this.#options.startTime || 0;\n            }\n            this.#volume = this.#element.volume;\n        }\n        this._autoplay = this._autoplay.bind(this);\n        this._enableKeyBindings = this._enableKeyBindings.bind(this);\n    }\n\n    async init(): Promise<void> {\n        if (this._isValid()) {\n            this._wrapInstance();\n            await this._prepareMedia();\n            this._createPlayButton();\n            this._createUID();\n            this._createControls();\n            this._setEvents();\n            Player.instances[this.id] = this;\n        }\n    }\n\n    async load(): Promise<void> {\n        if (!this.#media) {\n            await this._prepareMedia();\n            return (this.#media as Media).load();\n        }\n        this.#media.loaded = false;\n        return this.isMedia() ? this.#media.load() : undefined;\n    }\n\n    async play(): Promise<void> {\n        if (!this.#media.loaded) {\n            await this.#media.load();\n            this.#media.loaded = true;\n        }\n        if (this.#adsInstance) {\n            this.#adsInstance.playRequested = true;\n            await this.#adsInstance.loadPromise;\n            return this.#adsInstance.play();\n        }\n        return this.#media.play();\n    }\n\n    pause(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n        } else {\n            this.#media.pause();\n        }\n    }\n\n    stop(): void {\n        this.pause();\n\n        if (this.#media) {\n            this.#media.currentTime = 0;\n            this.src = [{ src: '', type: 'video/mp4' }];\n        }\n    }\n\n    destroy(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n            this.#adsInstance.destroy();\n        }\n\n        if (this.#fullscreen) {\n            this.#fullscreen.destroy();\n        }\n\n        const el = this.#element as HTMLMediaElement;\n        if (this.#media) {\n            this.#media.destroy();\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            el.removeEventListener(event, this.#events[event]);\n        });\n\n        this.getContainer().removeEventListener('keydown', this._enableKeyBindings);\n\n        if (this.#autoplay && !this.#processedAutoplay && isVideo(this.#element)) {\n            el.removeEventListener('canplay', this._autoplay);\n        }\n        if (this.#controls) {\n            this.#controls.destroy();\n        }\n\n        if (isVideo(this.#element)) {\n            if (this.playBtn) {\n                this.playBtn.remove();\n            }\n            if (this.loader) {\n                this.loader.remove();\n            }\n        }\n\n        if (this.#options?.onError) {\n            this.#element.removeEventListener('playererror', this.#options.onError);\n        }\n\n        el.controls = true;\n        el.setAttribute('id', this.#uid);\n        el.removeAttribute('op-live__enabled');\n        el.removeAttribute('op-dvr__enabled');\n        const parent =\n            this.#options.mode === 'fit' && !isAudio(el) ? el.closest('.op-player__fit--wrapper') : el.parentElement;\n        if (parent && parent.parentNode) {\n            parent.parentNode.replaceChild(el, parent);\n        }\n\n        delete Player.instances[this.#uid];\n\n        const e = addEvent('playerdestroyed');\n        el.dispatchEvent(e);\n    }\n\n    getContainer(): HTMLElement {\n        return this.#element.parentElement || this.#element;\n    }\n\n    getControls(): Controls {\n        return this.#controls;\n    }\n\n    getCustomControls(): ElementItem[] {\n        return this.#customElements;\n    }\n\n    getElement(): HTMLMediaElement {\n        return this.#element;\n    }\n\n    getEvents(): EventsList {\n        return this.#events;\n    }\n\n    getOptions(): PlayerOptions {\n        return this.#options;\n    }\n\n    activeElement(): Ads | Media {\n        return this.#adsInstance && this.#adsInstance.started() ? this.#adsInstance : this.#media;\n    }\n\n    isMedia(): boolean {\n        return this.activeElement() instanceof Media;\n    }\n\n    isAd(): boolean {\n        return this.activeElement() instanceof Ads;\n    }\n\n    getMedia(): Media {\n        return this.#media;\n    }\n\n    getAd(): Ads {\n        return this.#adsInstance;\n    }\n\n    addCaptions(args: Track): void {\n        if (args.default) {\n            const tracks = this.#element.querySelectorAll('track');\n            for (let i = 0, total = tracks.length; i < total; i++) {\n                (tracks[i] as HTMLTrackElement).default = false;\n            }\n        }\n\n        const el = this.#element;\n\n        // If captions have been added previously, just update URL and default status\n        let track = el.querySelector(`track[srclang=\"${args.srclang}\"][kind=\"${args.kind}\"]`) as HTMLTrackElement;\n        if (track) {\n            track.src = args.src;\n            track.label = args.label;\n            track.default = args.default || false;\n        } else {\n            track = document.createElement('track');\n            track.srclang = args.srclang;\n            track.src = args.src;\n            track.kind = args.kind;\n            track.label = args.label;\n            track.default = args.default || false;\n            el.appendChild(track);\n        }\n\n        const e = addEvent('controlschanged');\n        el.dispatchEvent(e);\n    }\n\n    addControl(args: ElementItem): void {\n        args.custom = true;\n        args.type = 'button';\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    addElement(args: ElementItem): void {\n        args.custom = true;\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    removeControl(controlName: string): void {\n        // Check custom controls and remove reference there as well\n        this.#customElements.forEach((item: ElementItem, idx: number) => {\n            if (item.id === controlName) {\n                this.#customElements.splice(idx, 1);\n            }\n        });\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    async _prepareMedia(): Promise<void> {\n        try {\n            if (this.#options?.onError) {\n                this.#element.addEventListener('playererror', this.#options.onError, EVENT_OPTIONS);\n            }\n            if (this.#autoplay && isVideo(this.#element)) {\n                this.#element.addEventListener('canplay', this._autoplay, EVENT_OPTIONS);\n            }\n            this.#media = new Media(this.#element, this.#options, this.#autoplay, Player.customMedia);\n            const preload = this.#element.getAttribute('preload');\n            if (this.#ads || !preload || preload !== 'none') {\n                await this.#media.load();\n                this.#media.loaded = true;\n            }\n\n            if (!this.#autoplay && this.#ads) {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                this.#adsInstance = new Ads(this, this.#ads, false, false, adsOptions);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    enableDefaultPlayer(): void {\n        let paused = true;\n        let currentTime = 0;\n\n        if (this.proxy && !this.proxy.paused) {\n            paused = false;\n            currentTime = this.proxy.currentTime;\n            this.proxy.pause();\n        }\n\n        this.proxy = this;\n        this.getElement().addEventListener('loadedmetadata', (): void => {\n            this.getMedia().currentTime = currentTime;\n            if (!paused) {\n                this.play();\n            }\n        });\n    }\n\n    async loadAd(src: string | string[]): Promise<void> {\n        try {\n            if (this.isAd()) {\n                this.getAd().destroy();\n                this.getAd().src = src;\n                this.getAd().loadedAd = false;\n                this.getAd().load();\n            } else {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                const autoplay = !this.activeElement().paused || this.#canAutoplay;\n                this.#adsInstance = new Ads(this, src, autoplay, this.#canAutoplayMuted, adsOptions);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    set src(media) {\n        if (this.#media instanceof Media) {\n            this.#media.mediaFiles = [];\n            this.#media.src = media;\n        } else if (typeof media === 'string') {\n            this.#element.src = media;\n        } else if (Array.isArray(media)) {\n            media.forEach((m) => {\n                const source = document.createElement('source');\n                source.src = m.src;\n                source.type = m.type || predictMimeType(m.src, this.#element);\n                this.#element.appendChild(source);\n            });\n        } else if (typeof media === 'object') {\n            this.#element.src = (media as Source).src;\n        }\n    }\n\n    get src(): Source[] {\n        return this.#media.src;\n    }\n\n    get id(): string {\n        return this.#uid;\n    }\n\n    private _isValid(): boolean {\n        const el = this.#element;\n\n        if (el instanceof HTMLElement === false) {\n            return false;\n        }\n\n        if (!isAudio(el) && !isVideo(el)) {\n            return false;\n        }\n\n        if (!el.classList.contains('op-player__media')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private _wrapInstance(): void {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'op-player op-player__keyboard--inactive';\n        wrapper.className += isAudio(this.#element) ? ' op-player__audio' : ' op-player__video';\n        wrapper.tabIndex = 0;\n\n        this.#element.classList.remove('op-player');\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(wrapper, this.#element);\n        }\n        wrapper.appendChild(this.#element);\n\n        const messageContainer = document.createElement('div');\n        messageContainer.className = 'op-status';\n        messageContainer.innerHTML = '<span></span>';\n        messageContainer.tabIndex = -1;\n        messageContainer.setAttribute('aria-hidden', 'true');\n\n        if (isVideo(this.#element) && this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(messageContainer, this.#element);\n        }\n\n        wrapper.addEventListener(\n            'keydown',\n            (): void => {\n                if (wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.remove('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        wrapper.addEventListener(\n            'click',\n            (): void => {\n                if (!wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.add('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        if (this.#options.mode === 'fill' && !isAudio(this.#element) && !IS_IPHONE) {\n            // Create fill effect on video, scaling and cropping dimensions relative to its parent, setting just a class.\n            // This method centers the video view using pure CSS in both Ads and Media.\n            // @see https://slicejack.com/fullscreen-html5-video-background-css/\n            this.getContainer().classList.add('op-player__full');\n        } else if (this.#options.mode === 'fit' && !isAudio(this.#element)) {\n            const container = this.getContainer();\n            if (container.parentElement) {\n                const fitWrapper = document.createElement('div');\n                fitWrapper.className = 'op-player__fit--wrapper';\n                fitWrapper.tabIndex = 0;\n                container.parentElement.insertBefore(fitWrapper, container);\n                fitWrapper.appendChild(container);\n                container.classList.add('op-player__fit');\n            }\n        } else {\n            let style = '';\n            if (this.#options.width) {\n                const width =\n                    typeof this.#options.width === 'number' ? `${this.#options.width}px` : this.#options.width;\n                style += `width: ${width} !important;`;\n            }\n            if (this.#options.height) {\n                const height =\n                    typeof this.#options.height === 'number' ? `${this.#options.height}px` : this.#options.height;\n                style += `height: ${height} !important;`;\n            }\n\n            if (style) {\n                wrapper.setAttribute('style', style);\n            }\n        }\n    }\n\n    private _createControls(): void {\n        if (IS_IPHONE && isVideo(this.#element)) {\n            this.getContainer().classList.add('op-player__ios--iphone');\n        }\n        this.#controls = new Controls(this);\n        this.#controls.create();\n    }\n\n    private _createUID(): void {\n        if (this.#element.id) {\n            this.#uid = this.#element.id;\n            this.#element.removeAttribute('id');\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const cryptoLib = crypto as any;\n            const encryption =\n                typeof cryptoLib.getRandomBytes === 'function' ? cryptoLib.getRandomBytes : cryptoLib.getRandomValues;\n            this.#uid = `op_${encryption(new Uint32Array(1))[0].toString(36).substr(2, 9)}`;\n        }\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.id = this.#uid;\n        }\n    }\n\n    private _createPlayButton(): void {\n        if (isAudio(this.#element)) {\n            return;\n        }\n\n        this.playBtn = document.createElement('button');\n        this.playBtn.className = 'op-player__play';\n        this.playBtn.tabIndex = 0;\n        this.playBtn.title = this.#options.labels?.play || '';\n        this.playBtn.innerHTML = `<span>${this.#options.labels?.play || ''}</span>`;\n        this.playBtn.setAttribute('aria-pressed', 'false');\n        this.playBtn.setAttribute('aria-hidden', 'false');\n\n        this.loader = document.createElement('span');\n        this.loader.className = 'op-player__loader';\n        this.loader.tabIndex = -1;\n        this.loader.setAttribute('aria-hidden', 'true');\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.loader, this.#element);\n            this.#element.parentElement.insertBefore(this.playBtn, this.#element);\n        }\n\n        this.playBtn.addEventListener(\n            'click',\n            (): void => {\n                if (this.#adsInstance) {\n                    this.#adsInstance.playRequested = this.activeElement().paused;\n                }\n                if (this.activeElement().paused) {\n                    this.activeElement().play();\n                } else {\n                    this.activeElement().pause();\n                }\n            },\n            EVENT_OPTIONS\n        );\n    }\n\n    private _setEvents(): void {\n        if (isVideo(this.#element)) {\n            this.#events.loadedmetadata = (): void => {\n                const el = this.activeElement();\n                if (this.#options.showLoaderOnInit && !IS_IOS && !IS_ANDROID) {\n                    this.loader.setAttribute('aria-hidden', 'false');\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    this.loader.setAttribute('aria-hidden', 'true');\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                }\n                if (el.paused) {\n                    this.playBtn.classList.remove('op-player__play--paused');\n                    this.playBtn.setAttribute('aria-pressed', 'false');\n                }\n            };\n            this.#events.waiting = (): void => {\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', 'false');\n            };\n            this.#events.seeking = (): void => {\n                const el = this.activeElement();\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n            };\n            this.#events.seeked = (): void => {\n                const el = this.activeElement();\n                if (Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.play = (): void => {\n                this.playBtn.classList.add('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.pause || '';\n                this.loader.setAttribute('aria-hidden', 'true');\n                if (this.#options.showLoaderOnInit) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    setTimeout((): void => {\n                        this.playBtn.setAttribute('aria-hidden', 'true');\n                    }, this.#options.hidePlayBtnTimer);\n                }\n            };\n            this.#events.playing = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            this.#events.pause = (): void => {\n                const el = this.activeElement();\n                this.playBtn.classList.remove('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.play || '';\n\n                if (this.#options.showLoaderOnInit && Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.ended = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            // This workflow is needed when media is on a loop and post roll needs to be played.\n            // This happens because, when in loop, media never sends the `ended` event back;\n            // so, when media reaches a quarter of a second left before the end, Ads would be dispatched\n            // @see https://github.com/googleads/videojs-ima/issues/890\n            let postRollCalled = false;\n            this.#events.timeupdate = (): void => {\n                if (this.#element.loop && this.isMedia() && this.#adsInstance) {\n                    const el = this.getMedia();\n                    const remainingTime = el.duration - el.currentTime;\n                    if (remainingTime > 0 && remainingTime <= 0.25 && !postRollCalled) {\n                        postRollCalled = true;\n                        const e = addEvent('ended');\n                        this.#element.dispatchEvent(e);\n                    } else if (remainingTime === 0) {\n                        postRollCalled = false;\n                    }\n                }\n            };\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            this.#element.addEventListener(event, this.#events[event], EVENT_OPTIONS);\n        });\n\n        this.getContainer().addEventListener('keydown', this._enableKeyBindings, EVENT_OPTIONS);\n    }\n\n    private _autoplay(): void {\n        if (!this.#processedAutoplay) {\n            this.#processedAutoplay = true;\n            this.#element.removeEventListener('canplay', this._autoplay);\n\n            isAutoplaySupported(\n                this.#element,\n                this.#volume,\n                (autoplay) => {\n                    this.#canAutoplay = autoplay;\n                },\n                (muted) => {\n                    this.#canAutoplayMuted = muted;\n                },\n                (): void => {\n                    if (this.#canAutoplayMuted) {\n                        this.activeElement().muted = true;\n                        this.activeElement().volume = 0;\n\n                        const e = addEvent('volumechange');\n                        this.#element.dispatchEvent(e);\n\n                        // Insert element to unmute if browser allows autoplay with muted media\n                        const volumeEl = document.createElement('div');\n                        const action = IS_IOS || IS_ANDROID ? this.#options.labels?.tap : this.#options.labels?.click;\n                        volumeEl.className = 'op-player__unmute';\n                        volumeEl.innerHTML = `<span>${action}</span>`;\n                        volumeEl.tabIndex = 0;\n\n                        volumeEl.addEventListener(\n                            'click',\n                            (): void => {\n                                this.activeElement().muted = false;\n                                this.activeElement().volume = this.#volume;\n\n                                const event = addEvent('volumechange');\n                                this.#element.dispatchEvent(event);\n\n                                volumeEl.remove();\n                            },\n                            EVENT_OPTIONS\n                        );\n\n                        const target = this.getContainer();\n                        target.insertBefore(volumeEl, target.firstChild);\n                    } else {\n                        this.activeElement().muted = this.#element.muted;\n                        this.activeElement().volume = this.#volume;\n                    }\n\n                    if (this.#ads) {\n                        const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                        this.#adsInstance = new Ads(\n                            this,\n                            this.#ads,\n                            this.#canAutoplay,\n                            this.#canAutoplayMuted,\n                            adsOptions\n                        );\n                    } else if (this.#canAutoplay || this.#canAutoplayMuted) {\n                        this.play();\n                    }\n                }\n            );\n        }\n    }\n\n    private _mergeOptions(playerOptions?: PlayerOptions): void {\n        const opts = { ...(playerOptions || {}) };\n        this.#options = { ...this.#defaultOptions, ...opts };\n        const complexOptions = Object.keys(this.#defaultOptions).filter(\n            (key) => key !== 'labels' && typeof this.#defaultOptions[key] === 'object'\n        );\n        complexOptions.forEach((key) => {\n            const currOption = (opts[key] as Record<string, unknown>) || {};\n            if (currOption && Object.keys(currOption).length) {\n                this.#options[key] = { ...(this.#defaultOptions[key] as Record<string, unknown>), ...currOption };\n            }\n        });\n        if (opts.labels) {\n            const keys = opts.labels ? Object.keys(opts.labels) : [];\n            let sanitizedLabels: PlayerLabels = {};\n\n            keys.forEach((key) => {\n                const current = opts.labels ? opts.labels[key as keyof PlayerLabels] : null;\n                if (current && typeof current === 'object' && key === 'lang') {\n                    Object.keys(current).forEach((k) => {\n                        const lang = current ? (current as Languages)[k] : null;\n                        if (lang) {\n                            sanitizedLabels = {\n                                ...sanitizedLabels,\n                                lang: { ...sanitizedLabels.lang, [k]: sanitize(lang as string) },\n                            };\n                        }\n                    });\n                } else if (current) {\n                    sanitizedLabels = { ...sanitizedLabels, [key]: sanitize(current as string) };\n                }\n            });\n\n            this.#options.labels = { ...this.#defaultOptions.labels, ...sanitizedLabels };\n        }\n    }\n\n    private _enableKeyBindings(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.activeElement();\n        const isAd = this.isAd();\n        const playerFocused = document?.activeElement?.classList.contains('op-player');\n\n        switch (key) {\n            // Toggle play/pause using letter K, Tab or Enter\n            case 13:\n            case 32:\n            case 75:\n                // Avoid interference of Enter/Space keys when focused in the player container\n                if (playerFocused && (key === 13 || key === 32)) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                } else if (key === 75) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // End key ends video\n            case 35:\n                if (!isAd && el.duration !== Infinity) {\n                    el.currentTime = el.duration;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Home key resets progress\n            case 36:\n                if (!isAd) {\n                    el.currentTime = 0;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the left and right arrow keys to manipulate current media time.\n            // Letter J/L will set double of step forward/backward\n            case 37:\n            case 39:\n            case 74:\n            case 76:\n                if (!isAd && el.duration !== Infinity) {\n                    let newStep = 5;\n                    const configStep = this.getOptions().step;\n                    if (configStep) {\n                        newStep = key === 74 || key === 76 ? configStep * 2 : configStep;\n                    } else if (key === 74 || key === 76) {\n                        newStep = 10;\n                    }\n                    const step = el.duration !== Infinity ? newStep : this.getOptions().progress?.duration || 0;\n                    el.currentTime += key === 37 || key === 74 ? step * -1 : step;\n                    if (el.currentTime < 0) {\n                        el.currentTime = 0;\n                    } else if (el.currentTime >= el.duration) {\n                        el.currentTime = el.duration;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the up/down arrow keys to manipulate volume.\n            case 38:\n            case 40:\n                const newVol = key === 38 ? Math.min(el.volume + 0.1, 1) : Math.max(el.volume - 0.1, 0);\n                el.volume = newVol;\n                el.muted = !(newVol > 0);\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // Letter F sets fullscreen (only video)\n            case 70:\n                if (isVideo(this.#element) && !e.ctrlKey) {\n                    this.#fullscreen = new Fullscreen(this, '', '');\n                    if (typeof this.#fullscreen.fullScreenEnabled !== 'undefined') {\n                        this.#fullscreen.toggleFullscreen();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n                break;\n            // Letter M toggles mute\n            case 77:\n                el.muted = !el.muted;\n                if (el.muted) {\n                    el.volume = 0;\n                } else {\n                    el.volume = this.#volume;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // < and > will decrease/increase the speed of playback by 0.25\n            // , and . will go to the prev/next frame of the media\n            case 188:\n            case 190:\n                if (!isAd && e.shiftKey) {\n                    const elem = el as Media;\n                    elem.playbackRate =\n                        key === 188 ? Math.max(elem.playbackRate - 0.25, 0.25) : Math.min(elem.playbackRate + 0.25, 2);\n                    // Show playbackRate and update controls to reflect change in settings\n                    const target = this.getContainer().querySelector('.op-status>span');\n                    if (target) {\n                        target.textContent = `${elem.playbackRate}x`;\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-hidden', 'false');\n                        }\n                        setTimeout((): void => {\n                            if (target.parentElement) {\n                                target.parentElement.setAttribute('aria-hidden', 'true');\n                            }\n                        }, 500);\n                    }\n                    const ev = addEvent('controlschanged');\n                    dispatchEvent(ev);\n                    e.preventDefault();\n                    e.stopPropagation();\n                } else if (!isAd && el.paused) {\n                    el.currentTime += (1 / 25) * (key === 188 ? -1 : 1);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default Player;\n\n// Expose element globally.\nif (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayer = Player;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayerJS = Player;\n    Player.init();\n}\n"],"names":["NAV","UA","IS_IPHONE","IS_IOS","IS_ANDROID","IS_CHROME","IS_SAFARI","HAS_MSE","SUPPORTS_HLS","mediaSource","sourceBuffer","isTypeSupported","sourceBufferValidAPI","DVR_THRESHOLD","EVENT_OPTIONS","isVideo","element","isAudio","loadScript","url","resolve","reject","script","offset","el","rect","sanitize","html","plainText","formattedContent","scripts","i","total","clean","nodes","node","attributes","j","t","name","value","val","isXml","input","parsedXml","text","addEvent","event","details","detail","Captions","#player","#button","#captions","#menu","#events","#mediaTrackList","#hasTracks","#currentTrack","#default","#controlPosition","#controlLayer","player","position","layer","textTracks","labels","detachMenus","k","target","itemContainer","track","item","label","e","button","menus","menuItem","option","language","captions","caption","cue","content","targetTrack","matchTrack","subitems","items","options","Fullscreen","#isFullscreen","#fullscreenEvents","#fullscreenWidth","#fullscreenHeight","#clickEvent","video","screen","width","height","isFullscreen","wrapper","styles","defaultWidth","defaultHeight","key","getExtension","baseName","isHlsSource","media","isDashSource","isFlvSource","predictMimeType","extension","isAutoplaySupported","defaultVol","autoplay","muted","callback","playPromise","Levels","#levels","#defaultLevel","startLevel","initialLevel","menuItems","defaultLevel","defaultLabel","levelSet","loadLevelsEvent","currentTime","isPaused","levelVal","level","levels","connection","type","acc","current","a","b","className","menu","Play","isAudioEl","Player","formatTime","seconds","frameRate","f","m","h","wrap","formattedVal","Progress","#progress","#slider","#buffer","#played","#tooltip","#forcePause","progress","setInitialProgress","lastCurrentTime","defaultDuration","duration","min","max","updateSlider","forcePause","releasePause","mobileForcePause","changedTouches","time","x","pos","half","percentage","mediaContainer","limit","isAd","step","Settings","#submenu","#originalOutput","timeout","id","rate","defaultValue","submenu","dataValue","submenuMatch","mainMenu","subItems","labelEl","fragments","menuTarget","prev","minItems","settingsBtnFocused","menuFocused","Time","#currentTime","#delimiter","#duration","#container","showOnlyCurrent","controls","setInitialTime","showLiveLabel","showCurrentTimeOnly","Volume","#display","#volume","mediaVolume","vol","updateButton","updateVolume","unmuteEl","Controls","#timer","#controlEls","#settings","#controls","#items","isMediaVideo","alwaysVisible","showControls","messageContainer","isVideoEl","controlPositions","layersExist","controlLayer","layers","v","currentLayer","allowDefault","s","itemIcon","subitem","control","Native","#customPlayer","customPlayer","DashMedia","#options","mimeType","bitrates","errorEvent","FlvMedia","args","configs","rest","data","errorDetails","HlsMedia","#recoverDecodingErrorDate","#recoverSwapAudioCodecDate","#autoplay","fatal","now","mediaEvent","networkEvent","fatalEvent","err","timeEvent","metaEvent","HTML5Media","#currentLevel","#levelList","#isStreaming","#retryCount","#started","mediaFile","idx","source","metaDataEvent","message","defaultMessage","error","Media","#element","#media","#files","#promisePlay","#mediaLoaded","#customMedia","#currentSrc","customMedia","source.predictMimeType","file","sources","loaded","mediaFiles","sourceTags","nodeSource","src","playHLSNatively","activeLevels","customRef","rule","customOptions","source.isHlsSource","hlsOptions","source.isDashSource","dashOptions","source.isFlvSource","flvOptions","Ads","ads","autostart","autostartMuted","#ended","#done","#active","#intervalTimer","#muted","#manager","#autostart","#autostartMuted","#playTriggered","#currentIndex","#lastTimePaused","#mediaSources","#mediaStarted","#adEvent","defaultOpts","#ads","#originalVolume","path","#promise","#loader","#customClickContainer","#skipElement","#displayContainer","#request","#preloadContent","force","existingContainer","vpaidModeMap","mouseEvents","destroy","mode","formattedWidth","percentageWidth","formattedHeight","percentageHeight","ad","waitingEvent","loadedEvent","playEvent","resized","endEvent","skipEvent","volumeEvent","endedEvent","pauseEvent","progressData","canSkip","remainingTime","adData","fatalErrorCodes","managerLoadedEvent","adsRenderingSettings","manager","volume","#uid","#canAutoplay","#canAutoplayMuted","#processedAutoplay","#customElements","#defaultOptions","targets","settings","valid","#adsInstance","#fullscreen","parent","tracks","controlName","preload","adsOptions","paused","container","fitWrapper","style","cryptoLib","encryption","postRollCalled","volumeEl","action","playerOptions","opts","currOption","keys","sanitizedLabels","lang","playerFocused","newStep","configStep","newVol","elem","ev","Player$1"],"mappings":"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"}