{"version":3,"file":"openplayer.min.js","sources":["../src/utils/constants.ts","../src/utils/general.ts","../src/controls/captions.ts","../src/controls/fullscreen.ts","../src/utils/media.ts","../src/controls/levels.ts","../src/controls/play.ts","../src/utils/time.ts","../src/controls/progress.ts","../src/controls/settings.ts","../src/controls/time.ts","../src/controls/volume.ts","../src/controls.ts","../src/media/native.ts","../src/media/dash.ts","../src/media/flv.ts","../src/media/hls.ts","../src/media/html5.ts","../src/media.ts","../src/media/ads.ts","../src/player.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\ndeclare global {\n    interface Window {\n        MSStream: any;\n        WebKitMediaSource: any;\n        WebKitSourceBuffer: any;\n    }\n}\n\nexport const NAV: Navigator | null = typeof window !== 'undefined' ? window.navigator : null;\n\nexport const UA: string | null = NAV ? NAV.userAgent.toLowerCase() : null;\n\nexport const IS_IPAD = UA ? /ipad/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPHONE = UA ? /iphone/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPOD = UA ? /ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IOS = UA ? /ipad|iphone|ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_ANDROID = UA ? /android/i.test(UA) : false;\n\nexport const IS_EDGE = NAV ? 'msLaunchUri' in NAV && !('documentMode' in document) : false;\n\nexport const IS_CHROME = UA ? /chrome/i.test(UA) : false;\n\nexport const IS_FIREFOX = UA ? /firefox/i.test(UA) : false;\n\nexport const IS_SAFARI = UA ? /safari/i.test(UA) && !IS_CHROME : false;\n\nexport const IS_STOCK_ANDROID = UA ? /^mozilla\\/\\d+\\.\\d+\\s\\(linux;\\su;/i.test(UA) : false;\n\nexport const HAS_MSE = typeof window !== 'undefined' ? 'MediaSource' in window : false;\n\n// @see https://github.com/video-dev/hls.js/blob/master/src/is-supported.js\nexport const SUPPORTS_HLS = (): boolean => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    const mediaSource = window.MediaSource || window.WebKitMediaSource;\n    const sourceBuffer = window.SourceBuffer || window.WebKitSourceBuffer;\n    const isTypeSupported =\n        mediaSource &&\n        typeof mediaSource.isTypeSupported === 'function' &&\n        mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n    const sourceBufferValidAPI =\n        !sourceBuffer ||\n        (sourceBuffer.prototype &&\n            typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n            typeof sourceBuffer.prototype.remove === 'function');\n\n    // Safari is still an exception since it has built-in HLS support; currently HLS.js\n    // is still in beta to support Safari\n    return !!isTypeSupported && !!sourceBufferValidAPI && !IS_SAFARI;\n};\n\nexport const DVR_THRESHOLD = 120;\n\nexport const EVENT_OPTIONS = { passive: false };\n","export function getAbsoluteUrl(url: string): string {\n    const a: HTMLAnchorElement = document.createElement('a');\n    a.href = url;\n    return a.href;\n}\n\nexport function isVideo(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'video';\n}\n\nexport function isAudio(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'audio';\n}\n\nexport function loadScript(url: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.onload = (): void => {\n            script.remove();\n            resolve();\n        };\n        script.onerror = (): void => {\n            script.remove();\n            reject(new Error(`${url} could not be loaded`));\n        };\n        if (document.head) {\n            document.head.appendChild(script);\n        }\n    });\n}\n\nexport function offset(el: HTMLElement): { left: number; top: number } {\n    const rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft),\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop),\n    };\n}\n\nexport function sanitize(html: string, plainText = true): string {\n    const parser = new DOMParser();\n    const content = parser.parseFromString(html, 'text/html');\n    const formattedContent = content.body || document.createElement('body');\n\n    const scripts = formattedContent.querySelectorAll('script');\n    for (let i = 0, total = scripts.length; i < total; i++) {\n        scripts[i].remove();\n    }\n\n    const clean = (element: Element): void => {\n        const nodes = element.children;\n        for (let i = 0, total = nodes.length; i < total; i++) {\n            const node = nodes[i];\n            const { attributes } = node;\n            for (let j = 0, t = attributes.length; j < t; j++) {\n                const { name, value } = attributes[j];\n                const val = value.replace(/\\s+/g, '').toLowerCase();\n                if (['src', 'href', 'xlink:href'].includes(name)) {\n                    // eslint-disable-next-line no-script-url\n                    if (val.includes('javascript:') || val.includes('data:')) {\n                        node.removeAttribute(name);\n                    }\n                }\n                if (name.startsWith('on')) {\n                    node.removeAttribute(name);\n                }\n            }\n            clean(node);\n        }\n    };\n\n    clean(formattedContent);\n    return plainText ? (formattedContent.textContent || '').replace(/\\s{2,}/g, '') : formattedContent.innerHTML;\n}\n\nexport function isXml(input: string): boolean {\n    let parsedXml;\n\n    if (typeof DOMParser !== 'undefined') {\n        parsedXml = (text: string): Document => new DOMParser().parseFromString(text, 'text/xml');\n    } else {\n        return false;\n    }\n\n    try {\n        const response = parsedXml(input);\n        if (response.getElementsByTagName('parsererror').length > 0) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport function isJson(item: unknown): boolean {\n    item = typeof item !== 'string' ? JSON.stringify(item) : item;\n    try {\n        item = JSON.parse(item as string);\n    } catch (e) {\n        return false;\n    }\n\n    if (typeof item === 'object' && item !== null) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function addEvent(event: string, details?: CustomEventInit): CustomEvent {\n    let detail = {};\n    if (details && details.detail) {\n        detail = { detail: details.detail };\n    }\n    return new CustomEvent(event, detail);\n}\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Captions implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #captions: HTMLDivElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #hasTracks: boolean;\n\n    #currentTrack?: TextTrack;\n\n    #default = 'off';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._formatMenuItems = this._formatMenuItems.bind(this);\n        this._setDefaultTrack = this._setDefaultTrack.bind(this);\n        this._showCaptions = this._showCaptions.bind(this);\n        this._hideCaptions = this._hideCaptions.bind(this);\n    }\n\n    custom?: boolean | undefined;\n\n    create(): void {\n        const { labels, detachMenus } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__captions op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.toggleCaptions || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.toggleCaptions || '');\n        this.#button.setAttribute('data-active-captions', 'off');\n\n        // Build container to display captions to mitigate cross browser inconsistencies\n        this.#captions = document.createElement('div');\n        this.#captions.className = 'op-captions';\n        const target = this.#player.getContainer();\n        target.insertBefore(this.#captions, target.firstChild);\n\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-captions__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            this.#menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-captions\">\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\" aria-checked=\"${\n                    this.#default === 'off' ? 'true' : 'false'\n                }\">\n                    <div class=\"op-settings__submenu-label op-subtitles__option\" data-value=\"captions-off\">${\n                        labels?.off\n                    }</div>\n                </div>\n            </div>`;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.append(this.#button, this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).append(itemContainer);\n\n            for (const track of this.#player.getElement().textTracks) {\n                const item = document.createElement('div');\n                const label = labels?.lang?.[track.language] || null;\n                item.className = 'op-settings__submenu-item';\n                item.tabIndex = 0;\n                item.setAttribute('role', 'menuitemradio');\n                item.setAttribute('aria-checked', this.#default === track.language ? 'true' : 'false');\n                item.innerHTML = `<div class=\"op-settings__submenu-label op-subtitles__option\"\n                    data-value=\"captions-${track.language}\">\n                    ${label || track.label}\n                </div>`;\n                this.#menu.append(item);\n            }\n        } else {\n            this.#player.getControls().getLayer(this.#controlLayer).append(this.#button);\n        }\n\n        ['play', 'loadeddata'].forEach((event: string) => {\n        // Show/hide captions\n        this.#events.button.click = (e: Event): void => {\n            const button = e.target as HTMLDivElement;\n            if (detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (const menuItem of Array.from(menus)) {\n                    if (menuItem !== this.#menu) {\n                        menuItem.setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            } else {\n                button.setAttribute('aria-pressed', 'true');\n                if (button.classList.contains('op-controls__captions--on')) {\n                    button.classList.remove('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', 'off');\n                    this._hideCaptions();\n                } else {\n                    button.classList.add('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', this.#currentTrack?.language || 'off');\n                    this._showCaptions();\n                }\n\n                for (const track of this.#player.getElement().textTracks) {\n                    track.mode = button.getAttribute('data-active-captions') === track.language ? 'showing' : 'hidden';\n                }\n            }\n        };\n\n        this.#events.button.mouseover = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    if (menus[i] !== this.#menu) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n            }\n        };\n        this.#events.button.mouseout = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            }\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-subtitles__option')) {\n                const language = option.getAttribute('data-value')!.replace('captions-', '');\n\n                this._hideCaptions();\n\n                if (language === 'off') {\n                    this.#currentTrack = undefined;\n                }\n\n                for (const track of this.#player.getElement().textTracks) {\n                    console.log({ language, track})\n                    track.mode = track.language === language ? 'showing' : 'hidden';\n                    if (track.language === language) {\n                        this.#currentTrack = track;\n                        this._showCaptions();\n                    }\n                }\n\n                if (detachMenus) {\n                    if (this.#button.classList.contains('op-controls__captions--on')) {\n                        this.#button.classList.remove('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', 'off');\n                    } else {\n                        this.#button.classList.add('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', language);\n                    }\n\n                    const captions = this.#menu.querySelectorAll('.op-settings__submenu-item');\n                    for (const caption of Array.from(captions)) {\n                        caption.setAttribute('aria-checked', 'false');\n                    }\n                    option.parentElement!.setAttribute('aria-checked', 'true');\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#button.setAttribute('data-active-captions', language);\n                }\n                const event = addEvent('captionschanged');\n                this.#player.getElement().dispatchEvent(event);\n            }\n        };\n\n        this.#events.global.cuechange = (e: Event): void => {\n            this._hideCaptions();\n            const t = e.target as TextTrack;\n            if (t.mode !== 'showing' || this.#button.getAttribute('data-active-captions') === 'off') {\n                return;\n            }\n\n            if (t.activeCues && t.activeCues?.length > 0) {\n                this._showCaptions();\n            }\n        };\n\n        if (detachMenus) {\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n    \n        \n            this.#player.getElement().addEventListener(event, () => {\n                for (const track of this.#player.getElement().textTracks) {\n                    track.mode = track.mode !== 'showing' ? 'hidden' : track.mode;\n                    track.addEventListener('cuechange', this.#events.global.cuechange, EVENT_OPTIONS);\n                }\n            });\n        \n\n        const targetTrack = this.#player\n            .getElement()\n            .querySelector('track:is([kind=\"subtitles\"],[kind=\"captions\"])[default]') as HTMLTrackElement;\n        if (targetTrack) {\n            const matchTrack = Array.from(this.#player.getElement().textTracks).find((el) => el.language === targetTrack.srclang);\n            if (matchTrack) {\n                this._setDefaultTrack(matchTrack);\n            }\n        }\n    })\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n\n        if (!this.#hasTracks) {\n            return;\n        }\n\n        for (const track of this.#player.getElement().textTracks) {\n            track.removeEventListener('cuechange', this.#events.global.cuechange);\n        }\n\n        document.removeEventListener('click', this.#events.global.click);\n        this.#button.removeEventListener('click', this.#events.button.click);\n        if (detachMenus) {\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { detachMenus, labels } = this.#player.getOptions();\n        if (detachMenus || this.#player.getElement().textTracks.length <= 1) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n\n        // Avoid implementing submenu for captions if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-subtitles__option',\n                  default: this.#default || 'off',\n                  key: 'captions',\n                  name: labels?.captions || '',\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (this.#player.getElement().textTracks.length <= 1 && !detachMenus) {\n            return [];\n        }\n\n        let items = [{ key: 'off', label: labels?.off || '' }];\n        for (const track of this.#player.getElement().textTracks) {\n            const label = labels?.lang ? labels.lang[track.language] : null;\n            // Override language item if duplicated when passing list of items\n            items = items.filter((el) => el.key !== track.language);\n            items.push({ key: track.language, label: label || track.label });\n        }\n\n        return items;\n    }\n\n    private _setDefaultTrack(track: TextTrack): void {\n        track.mode = 'showing';\n        this.#default = track.language;\n        this.#button.setAttribute('data-active-captions', this.#default);\n        this.#button.classList.add('op-controls__captions--on');\n        this.#captions.classList.add('op-captions--on');\n        this.#currentTrack = track;\n\n        const options = document.querySelectorAll('.op-settings__submenu-item') || [];\n        for (const option of Array.from(options)) {\n            option.setAttribute('aria-checked', 'false');\n        }\n\n        document\n            .querySelector(`.op-subtitles__option[data-value=\"captions-${track.language}\"]`)\n            ?.parentElement?.setAttribute('aria-checked', 'true');\n    }\n\n    private _showCaptions() {\n        for (const cue of Array.from(this.#currentTrack?.activeCues || [])) {\n            const content = (cue as VTTCue)?.text || '';\n            if (content && this.#captions) {\n                const caption = document.createElement('span');\n                caption.innerHTML = content;\n                this.#captions.prepend(caption);\n                this.#captions.classList.add('op-captions--on');\n            } else {\n                this._hideCaptions();\n            }\n        }\n    }\n\n    private _hideCaptions() {\n        while (this.#captions?.lastChild) {\n            this.#captions.removeChild(this.#captions.lastChild);\n        }\n    }\n}\n\nexport default Captions;\n","import { FullscreenDocument, FullscreenElement, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IPHONE } from '../utils/constants';\n\nclass Fullscreen implements PlayerComponent {\n    fullScreenEnabled: boolean;\n\n    #player: Player;\n\n    #isFullscreen: boolean;\n\n    #button: HTMLButtonElement;\n\n    #fullscreenEvents: string[] = [];\n\n    #fullscreenWidth = 0;\n\n    #fullscreenHeight = 0;\n\n    #clickEvent: () => void;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this.#isFullscreen = document.body.classList.contains('op-fullscreen__on');\n\n        const target = document as FullscreenDocument;\n\n        // Check if fullscreen is supported\n        this.fullScreenEnabled = !!(\n            target.fullscreenEnabled ||\n            target.mozFullScreenEnabled ||\n            target.msFullscreenEnabled ||\n            target.webkitSupportsFullscreen ||\n            target.webkitFullscreenEnabled ||\n            (document.createElement('video') as FullscreenElement).webkitRequestFullScreen\n        );\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n        this._resize = this._resize.bind(this);\n        this._fullscreenChange = this._fullscreenChange.bind(this);\n        this._setFullscreen = this._setFullscreen.bind(this);\n        this._unsetFullscreen = this._unsetFullscreen.bind(this);\n\n        this.#fullscreenEvents = [\n            'fullscreenchange',\n            'mozfullscreenchange',\n            'webkitfullscreenchange',\n            'msfullscreenchange',\n        ];\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.addEventListener(event, this._fullscreenChange, EVENT_OPTIONS);\n        });\n        this._setFullscreenData(false);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        // Since iPhone still doesn't accept the regular Fullscreen API, use the following events\n        if (IS_IPHONE) {\n            this.#player.getElement().addEventListener('webkitbeginfullscreen', this._setFullscreen, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('webkitendfullscreen', this._unsetFullscreen, EVENT_OPTIONS);\n        }\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__fullscreen op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.fullscreen || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.fullscreen || '');\n\n        this.#clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            this.toggleFullscreen();\n        };\n\n        this.#clickEvent = this.#clickEvent.bind(this);\n\n        this.#button.addEventListener('click', this.#clickEvent, EVENT_OPTIONS);\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n    }\n\n    destroy(): void {\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.removeEventListener(event, this._fullscreenChange);\n        });\n        if (IS_IPHONE) {\n            this.#player.getElement().removeEventListener('webkitbeginfullscreen', this._setFullscreen);\n            this.#player.getElement().removeEventListener('webkitendfullscreen', this._unsetFullscreen);\n        }\n        this.#button.removeEventListener('click', this.#clickEvent);\n        this.#button.remove();\n    }\n\n    toggleFullscreen(): void {\n        // If browser does not support native Fullscreen API, player will adjust the video\n        // and its parent container's dimensions via width and height styles.\n        if (this.#isFullscreen) {\n            const target = document as FullscreenDocument;\n            if (target.exitFullscreen) {\n                target.exitFullscreen();\n            } else if (target.mozCancelFullScreen) {\n                target.mozCancelFullScreen();\n            } else if (target.webkitCancelFullScreen) {\n                target.webkitCancelFullScreen();\n            } else if (target.msExitFullscreen) {\n                target.msExitFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n            document.body.classList.remove('op-fullscreen__on');\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const video = this.#player.getElement() as any;\n            this.#fullscreenWidth = window.screen.width;\n            this.#fullscreenHeight = window.screen.height;\n\n            if (video.requestFullscreen) {\n                video.parentElement.requestFullscreen();\n            } else if (video.mozRequestFullScreen) {\n                video.parentElement.mozRequestFullScreen();\n            } else if (video.webkitRequestFullScreen) {\n                video.parentElement.webkitRequestFullScreen();\n            } else if (video.msRequestFullscreen) {\n                video.parentElement.msRequestFullscreen();\n            } else if (video.webkitEnterFullscreen) {\n                video.webkitEnterFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n\n            document.body.classList.add('op-fullscreen__on');\n        }\n\n        if (typeof window !== 'undefined' && (IS_ANDROID || IS_IPHONE)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const { screen } = window as any;\n            if (screen.orientation && !this.#isFullscreen) {\n                screen.orientation.lock('landscape');\n            }\n        }\n    }\n\n    private _fullscreenChange(): void {\n        const width = this.#isFullscreen ? undefined : this.#fullscreenWidth;\n        const height = this.#isFullscreen ? undefined : this.#fullscreenHeight;\n        this._setFullscreenData(!this.#isFullscreen);\n\n        if (this.#player.isAd()) {\n            this.#player.getAd().resizeAds(width, height);\n        }\n        this.#isFullscreen = !this.#isFullscreen;\n\n        if (this.#isFullscreen) {\n            document.body.classList.add('op-fullscreen__on');\n        } else {\n            document.body.classList.remove('op-fullscreen__on');\n        }\n        this._resize(width, height);\n    }\n\n    private _setFullscreenData(isFullscreen: boolean): void {\n        this.#player.getContainer().setAttribute('data-fullscreen', (!!isFullscreen).toString());\n        if (this.#button) {\n            if (isFullscreen) {\n                this.#button.classList.add('op-controls__fullscreen--out');\n            } else {\n                this.#button.classList.remove('op-controls__fullscreen--out');\n            }\n        }\n    }\n\n    private _resize(width?: number, height?: number): void {\n        const wrapper = this.#player.getContainer();\n        const video = this.#player.getElement();\n        const options = this.#player.getOptions();\n        let styles = '';\n        if (width) {\n            wrapper.style.width = '100%';\n            video.style.width = '100%';\n        } else if (options.width) {\n            const defaultWidth = typeof options.width === 'number' ? `${options.width}px` : options.width;\n            styles += `width: ${defaultWidth} !important;`;\n            video.style.removeProperty('width');\n        } else {\n            video.style.removeProperty('width');\n            wrapper.style.removeProperty('width');\n        }\n        if (height) {\n            video.style.height = '100%';\n            wrapper.style.height = '100%';\n        } else if (options.height) {\n            const defaultHeight = typeof options.height === 'number' ? `${options.height}px` : options.height;\n            styles += `height: ${defaultHeight} !important;`;\n            video.style.removeProperty('height');\n        } else {\n            video.style.removeProperty('height');\n            wrapper.style.removeProperty('height');\n        }\n\n        if (styles) {\n            wrapper.setAttribute('style', styles);\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const fullscreenBtnFocused = document?.activeElement?.classList.contains('op-controls__fullscreen');\n        if (fullscreenBtnFocused && (key === 13 || key === 32)) {\n            this.toggleFullscreen();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    private _setFullscreen(): void {\n        this.#isFullscreen = true;\n        this._setFullscreenData(true);\n        document.body.classList.add('op-fullscreen__on');\n    }\n\n    private _unsetFullscreen(): void {\n        this.#isFullscreen = false;\n        this._setFullscreenData(false);\n        document.body.classList.remove('op-fullscreen__on');\n    }\n}\n\nexport default Fullscreen;\n","import { Source } from '../interfaces';\nimport { isAudio } from './general';\n\nexport function getExtension(url: string): string {\n    const baseUrl = url.split('?')[0];\n    const baseFrags = (baseUrl || '').split('\\\\');\n    const baseUrlFragment = (baseFrags || []).pop();\n    const baseNameFrags = (baseUrlFragment || '').split('/');\n    const baseName = (baseNameFrags || []).pop() || '';\n    return baseName.includes('.') ? baseName.substring(baseName.lastIndexOf('.') + 1) : '';\n}\n\nexport function isHlsSource(media: Source): boolean {\n    return (\n        /\\.m3u8$/i.test(media.src) || ['application/x-mpegURL', 'application/vnd.apple.mpegurl'].includes(media.type)\n    );\n}\n\nexport function isM3USource(media: Source): boolean {\n    return /\\.m3u$/i.test(media.src);\n}\n\nexport function isDashSource(media: Source): boolean {\n    return /\\.mpd/i.test(media.src) || media.type === 'application/dash+xml';\n}\n\nexport function isFlvSource(media: Source): boolean {\n    return /(^rtmp:\\/\\/|\\.flv$)/i.test(media.src) || ['video/x-flv', 'video/flv'].includes(media.type);\n}\n\nexport function predictMimeType(url: string, element: HTMLMediaElement): string {\n    const extension = getExtension(url);\n\n    // If no extension found, check if media is a vendor iframe\n    if (!extension) {\n        return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n\n    // Check native media types\n    switch (extension) {\n        case 'm3u8':\n        case 'm3u':\n            return 'application/x-mpegURL';\n        case 'mpd':\n            return 'application/dash+xml';\n        case 'mp4':\n            return isAudio(element) ? 'audio/mp4' : 'video/mp4';\n        case 'mp3':\n            return 'audio/mp3';\n        case 'webm':\n            return isAudio(element) ? 'audio/webm' : 'video/webm';\n        case 'ogg':\n            return isAudio(element) ? 'audio/ogg' : 'video/ogg';\n        case 'ogv':\n            return 'video/ogg';\n        case 'oga':\n            return 'audio/ogg';\n        case '3gp':\n            return 'audio/3gpp';\n        case 'wav':\n            return 'audio/wav';\n        case 'aac':\n            return 'audio/aac';\n        case 'flac':\n            return 'audio/flac';\n        default:\n            return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n}\n\n// @see https://raw.githubusercontent.com/googleads/googleads-ima-html5/2.11/attempt_to_autoplay/ads.js\n// @see https://github.com/Modernizr/Modernizr/issues/1095#issuecomment-304682473\nexport function isAutoplaySupported(\n    media: HTMLMediaElement,\n    defaultVol: number,\n    autoplay: (playing: boolean) => void,\n    muted: (playing: boolean) => void,\n    callback: () => void\n): void {\n    const playPromise = media.play();\n    if (playPromise !== undefined) {\n        playPromise\n            .then(() => {\n                // Unmuted autoplay works.\n                media.pause();\n                autoplay(true);\n                muted(false);\n                callback();\n            })\n            .catch(() => {\n                // Unmuted autoplay failed. New attempt with muted autoplay.\n                media.volume = 0;\n                media.muted = true;\n                media\n                    .play()\n                    .then(() => {\n                        // Muted autoplay works.\n                        media.pause();\n                        autoplay(true);\n                        muted(true);\n                        callback();\n                    })\n                    .catch(() => {\n                        // Both muted and unmuted autoplay failed. Fallback to click to play.\n                        media.volume = defaultVol;\n                        media.muted = false;\n                        autoplay(false);\n                        muted(false);\n                        callback();\n                    });\n            });\n    } else {\n        autoplay(!media.paused || ('Promise' in window && (playPromise as Promise<void>) instanceof Promise));\n        media.pause();\n        muted(false);\n        callback();\n    }\n}\n","import { EventsList, Level, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, NAV } from '../utils/constants';\nimport { addEvent, sanitize } from '../utils/general';\nimport { isDashSource, isHlsSource } from '../utils/media';\n\nclass Levels implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #levels: Level[] = [];\n\n    #defaultLevel = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, defaultLevel: startLevel, detachMenus } = this.#player.getOptions();\n        const initialLevel = startLevel !== null ? parseInt(startLevel || '0', 10) : this.#player.getMedia().level;\n        this.#defaultLevel = `${initialLevel}`;\n        const menuItems = this._formatMenuItems();\n        const defaultLevel = menuItems.length ? menuItems.find((items) => items.key === this.#defaultLevel) : null;\n        const defaultLabel = defaultLevel ? defaultLevel.label : labels?.auto || '';\n        let levelSet = false;\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__levels op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mediaLevels || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-label', labels?.mediaLevels || '');\n        this.#button.setAttribute('data-active-level', this.#defaultLevel);\n        this.#button.innerHTML = `<span>${defaultLabel}</span>`;\n\n        const loadLevelsEvent = (): void => {\n            if (!this.#levels.length) {\n                this._gatherLevels();\n                setTimeout((): void => {\n                    this.#player.getMedia().level = initialLevel;\n                    const e = addEvent('controlschanged');\n                    this.#player.getElement().dispatchEvent(e);\n                }, 0);\n            } else if (!levelSet) {\n                this.#player.getMedia().level = initialLevel;\n                levelSet = true;\n            }\n        };\n\n        this.#events.media.loadedmetadata = loadLevelsEvent.bind(this);\n        this.#events.media.manifestLoaded = loadLevelsEvent.bind(this);\n        this.#events.media.hlsManifestParsed = loadLevelsEvent.bind(this);\n\n        if (detachMenus) {\n            this._buildMenu();\n            this.#events.button.click = (): void => {\n                if (detachMenus) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    } else {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n            this.#events.button.mouseover = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    }\n                }\n            };\n            this.#events.button.mouseout = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n\n            this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            const { currentTime } = this.#player.getMedia();\n            const isPaused = this.#player.getMedia().paused;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-levels__option')) {\n                const levelVal = option.getAttribute('data-value');\n                const level = levelVal ? levelVal.replace('levels-', '') : '-1';\n                this.#defaultLevel = `${level}`;\n                if (detachMenus) {\n                    this.#button.setAttribute('data-active-level', `${level}`);\n                    this.#button.innerHTML = `<span>${sanitize(option.innerText, true)}</span>`;\n                    const levels =\n                        option.parentElement && option.parentElement.parentElement\n                            ? option.parentElement.parentElement.querySelectorAll('.op-settings__submenu-item')\n                            : [];\n                    for (let i = 0, total = levels.length; i < total; ++i) {\n                        levels[i].setAttribute('aria-checked', 'false');\n                    }\n                    if (option.parentElement) {\n                        option.parentElement.setAttribute('aria-checked', 'true');\n                    }\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n                this.#player.getMedia().level = level;\n                this.#player.getMedia().currentTime = currentTime;\n                if (!isPaused) {\n                    this.#player.play();\n                }\n\n                const event = addEvent('levelchanged', {\n                    detail: {\n                        label: option.innerText.trim(),\n                        level,\n                    },\n                });\n                this.#player.getElement().dispatchEvent(event);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n\n        // @ts-ignore\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n        this.#events.global.connection = (): void => {\n            // Check connectivity to switch levels (only HTML5 since HLS and Dash can use adaptive streaming)\n            const media = this.#player.getMedia().current;\n            if (!isDashSource(media) && !isHlsSource(media)) {\n                const type = connection?.effectiveType || '';\n                const levels = this.#levels.map((item) => ({\n                    ...item,\n                    resolution: parseInt(item.label.replace('p', ''), 10),\n                }));\n\n                let level = levels.find((item) => item.resolution < 360);\n                if (type === '4g') {\n                    level = levels.find((item) => item.resolution >= 720);\n                } else if (type === '3g') {\n                    level = levels.find((item) => item.resolution >= 360 && item.resolution < 720);\n                }\n\n                if (level) {\n                    this.#player.pause();\n                    this.#player.getMedia().level = level.id;\n                    this.#player.play();\n                }\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        if (connection) {\n            connection.addEventListener('change', this.#events.global.connection, EVENT_OPTIONS);\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // @ts-ignore\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        if (connection) {\n            connection.removeEventListener('change', this.#events.global.connection);\n        }\n        if (detachMenus) {\n            this.#button.removeEventListener('click', this.#events.button.click);\n            this.#button.remove();\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (detachMenus) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n        // Avoid implementing submenu for levels if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-levels__option',\n                  default: this.#defaultLevel || '-1',\n                  key: 'levels',\n                  name: labels?.levels,\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels } = this.#player.getOptions();\n        const levels = this._gatherLevels();\n        const total = levels.length;\n        let items = total ? [{ key: '-1', label: labels?.auto }] : [];\n        for (let i = 0; i < total; i++) {\n            const level = levels[i];\n            items = items.filter((el) => el.key !== level.id);\n            items.push({ key: level.id, label: level.label });\n        }\n\n        // Remove duplicated labels\n        return items\n            .reduce((acc: SettingsSubItem[], current) => {\n                const duplicate = acc.find((item) => item.label === current.label);\n                if (!duplicate) {\n                    return acc.concat([current]);\n                }\n                return acc;\n            }, [])\n            .sort((a, b) => (parseInt(a?.label || '', 10) > parseInt(b?.label || '', 10) ? 1 : -1));\n    }\n\n    // @see https://en.wikipedia.org/wiki/Computer_display_standard#Standards\n    private _getResolutionsLabel(height: number): string {\n        const { labels } = this.#player.getOptions();\n        if (height >= 4320) {\n            return '8K';\n        }\n        if (height >= 2160) {\n            return '4K';\n        }\n        if (height >= 1440) {\n            return '1440p';\n        }\n        if (height >= 1080) {\n            return '1080p';\n        }\n        if (height >= 720) {\n            return '720p';\n        }\n        if (height >= 480) {\n            return '480p';\n        }\n        if (height >= 360) {\n            return '360p';\n        }\n        if (height >= 240) {\n            return '240p';\n        }\n        if (height >= 144) {\n            return '144p';\n        }\n        return labels?.auto || '';\n    }\n\n    private _gatherLevels(): Level[] {\n        if (!this.#levels.length) {\n            this.#player.getMedia().levels.forEach((level: Level) => {\n                this.#levels.push({ ...level, label: level.label || this._getResolutionsLabel(level.height) });\n            });\n        }\n        return this.#levels;\n    }\n\n    private _buildMenu(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // Build menu if detachMenu is `true`\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-levels__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            const className = 'op-levels__option';\n            const options = this._formatMenuItems();\n\n            // Store the submenu to reach all options for current menu item\n            const menu = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-levels\">\n                ${options\n                    .map(\n                        (item) => `\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\"\n                    aria-checked=\"${this.#defaultLevel === item.key ? 'true' : 'false'}\">\n                    <div class=\"op-settings__submenu-label ${className || ''}\" data-value=\"levels-${item.key}\">${\n                            item.label\n                        }</div>\n                </div>`\n                    )\n                    .join('')}\n            </div>`;\n            this.#menu.innerHTML = menu;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.appendChild(this.#button);\n            itemContainer.appendChild(this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).appendChild(itemContainer);\n        }\n    }\n}\n\nexport default Levels;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio } from '../utils/general';\n\nclass Play implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__playpause op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.play || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.play || '');\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n\n        this.#events.button = (e: Event): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n\n            if (el.paused || el.ended) {\n                if (this.#player.getAd()) {\n                    this.#player.getAd().playRequested = true;\n                }\n\n                el.play();\n                this.#events.media.play();\n            } else {\n                el.pause();\n                this.#events.media.pause();\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.play = (): void => {\n            if (this.#player.activeElement().ended) {\n                if (this.#player.isMedia()) {\n                    this.#button.classList.add('op-controls__playpause--replay');\n                } else {\n                    this.#button.classList.add('op-controls__playpause--pause');\n                }\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n\n                if (this.#player.getOptions()?.pauseOthers) {\n                    Object.keys(Player.instances).forEach((key) => {\n                        if (key !== this.#player.id) {\n                            const target = Player.instances[key].activeElement();\n                            target.pause();\n                        }\n                    });\n                }\n            }\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            if (this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (!this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            this.#button.classList.remove('op-controls__playpause--pause');\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.ended = (): void => {\n            if (this.#player.activeElement().ended && this.#player.isMedia()) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else if (\n                this.#player.getElement().currentTime >= this.#player.getElement().duration ||\n                this.#player.getElement().currentTime <= 0\n            ) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n            }\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.adsmediaended = (): void => {\n            this.#button.classList.remove('op-controls__playpause--replay');\n            this.#button.classList.add('op-controls__playpause--pause');\n            this.#button.title = labels?.pause || '';\n            this.#button.setAttribute('aria-label', labels?.pause || '');\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl) {\n                const el = this.#player.activeElement();\n                el.pause();\n            }\n        };\n\n        const element = this.#player.getElement();\n        this.#events.controls.controlschanged = (): void => {\n            if (!this.#player.activeElement().paused) {\n                const event = addEvent('playing');\n                element.dispatchEvent(event);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            element.addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            element.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#button.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            this.#player.getElement().removeEventListener('click', this.#events.button);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#button.removeEventListener('click', this.#events.button);\n        this.#button.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__playpause');\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            this.#events.button(e);\n        }\n    }\n}\n\nexport default Play;\n","export function formatTime(seconds: number, frameRate?: number): string {\n    const f = Math.floor((seconds % 1) * (frameRate || 0));\n    let s = Math.floor(seconds);\n    let m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const wrap = (value: number): string => {\n        const formattedVal = value.toString();\n        if (value < 10) {\n            if (value <= 0) {\n                return '00';\n            }\n            return `0${formattedVal}`;\n        }\n        return formattedVal;\n    };\n    m %= 60;\n    s %= 60;\n    return `${h > 0 ? `${wrap(h)}:` : ''}${wrap(m)}:${wrap(s)}${f ? `:${wrap(f)}` : ''}`;\n}\n\n// @see https://en.wikipedia.org/wiki/SMPTE_timecode\nexport function timeToSeconds(timeCode: string): number {\n    const time = timeCode.replace(/;/g, ':').split(':');\n    let seconds = 0;\n    // Hours found; use different calculation\n    if (time.length === 3) {\n        seconds += parseFloat(time[0]) * 60 * 60;\n        seconds += parseFloat(time[1]) * 60;\n        seconds += parseFloat(time[2]);\n    } else {\n        seconds += parseFloat(time[0]) * 60;\n        seconds += parseFloat(time[1]);\n    }\n    return seconds;\n}\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { isAudio, offset } from '../utils/general';\nimport { formatTime } from '../utils/time';\n\nclass Progress implements PlayerComponent {\n    #player: Player;\n\n    #progress: HTMLDivElement;\n\n    #slider: HTMLInputElement;\n\n    #buffer: HTMLProgressElement;\n\n    #played: HTMLProgressElement;\n\n    #tooltip: HTMLSpanElement;\n\n    #events: EventsList = {\n        container: {},\n        controls: {},\n        global: {},\n        media: {},\n        slider: {},\n    };\n\n    #forcePause = false;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n        this.#progress = document.createElement('div');\n        this.#progress.className = `op-controls__progress op-control__${this.#controlPosition}`;\n        this.#progress.tabIndex = 0;\n        this.#progress.setAttribute('aria-label', labels?.progressSlider || '');\n        this.#progress.setAttribute('aria-valuemin', '0');\n        this.#progress.setAttribute('aria-valuenow', '0');\n        this.#progress.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__progress--seek';\n        this.#slider.tabIndex = -1;\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.value = '0';\n        this.#slider.setAttribute('aria-label', labels?.progressRail || '');\n        this.#slider.setAttribute('role', 'slider');\n\n        this.#buffer = document.createElement('progress');\n        this.#buffer.className = 'op-controls__progress--buffer';\n        this.#buffer.setAttribute('max', '100');\n        this.#buffer.value = 0;\n\n        this.#played = document.createElement('progress');\n        this.#played.className = 'op-controls__progress--played';\n        this.#played.setAttribute('max', '100');\n        this.#played.value = 0;\n\n        this.#progress.appendChild(this.#slider);\n        this.#progress.appendChild(this.#played);\n        this.#progress.appendChild(this.#buffer);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip = document.createElement('span');\n            this.#tooltip.className = 'op-controls__tooltip';\n            this.#tooltip.tabIndex = -1;\n            this.#tooltip.innerHTML = '00:00';\n            this.#progress.appendChild(this.#tooltip);\n        }\n\n        const setInitialProgress = (): void => {\n            if (this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n                this.#slider.value = current.toString();\n                if (!Number.isNaN(el.duration)) {\n                    this.#slider.setAttribute('max', `${el.duration}`);\n                    this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n                }\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                this.#slider.setAttribute('max', '1');\n                this.#slider.value = '1';\n                this.#slider.style.backgroundSize = '100% 100%';\n                this.#played.value = 1;\n                this.#progress.setAttribute('aria-valuemax', '1');\n                this.#progress.setAttribute('aria-hidden', 'false');\n            } else if (!this.#player.getOptions().live?.showProgress) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        let lastCurrentTime = 0;\n        const defaultDuration = this.#player.getOptions().progress?.duration || 0;\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.loadedmetadata = setInitialProgress.bind(this);\n        this.#events.controls.controlschanged = setInitialProgress.bind(this);\n\n        this.#events.media.progress = (e: Event): void => {\n            const el = e.target as HTMLMediaElement;\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (el.duration > 0) {\n                    for (let i = 0, total = el.buffered.length; i < total; i++) {\n                        if (el.buffered.start(el.buffered.length - 1 - i) < el.currentTime) {\n                            this.#buffer.value = (el.buffered.end(el.buffered.length - 1 - i) / el.duration) * 100;\n                            break;\n                        }\n                    }\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n        this.#events.media.waiting = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('loading')) {\n                this.#slider.classList.add('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('error')) {\n                this.#slider.classList.add('error');\n            }\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                const current = el.currentTime;\n                this.#progress.setAttribute('aria-valuenow', current.toString());\n                this.#progress.setAttribute('aria-valuetext', formatTime(current));\n            }\n        };\n        this.#events.media.play = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            if (\n                this.#player.activeElement().duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled')\n            ) {\n                this.#progress.removeAttribute('aria-valuenow');\n                this.#progress.removeAttribute('aria-valuetext');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                (!this.#player.getElement().getAttribute('op-live__enabled') ||\n                    this.#player.getElement().getAttribute('op-dvr__enabled'))\n            ) {\n                if (\n                    !this.#slider.getAttribute('max') ||\n                    this.#slider.getAttribute('max') === '0' ||\n                    parseFloat(this.#slider.getAttribute('max') || '-1') !== el.duration\n                ) {\n                    if (!Number.isNaN(el.duration)) {\n                        this.#slider.setAttribute('max', `${el.duration}`);\n                    }\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n\n                // Adjust current time between Media and Ads; with the latter, it is convenient to add an extra\n                // second to ensure it will reach the end of the rail\n                const duration = el.duration - el.currentTime + 1 >= 100 ? 100 : el.duration - el.currentTime + 1;\n                const current = this.#player.isMedia() ? el.currentTime : duration;\n                const min = parseFloat(this.#slider.min);\n                const max = parseFloat(this.#slider.max);\n                this.#slider.value = current.toString();\n                this.#slider.style.backgroundSize = `${((current - min) * 100) / (max - min)}% 100%`;\n                this.#played.value =\n                    el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                        ? defaultDuration\n                        : (current / el.duration) * 100;\n\n                if (this.#player.getElement().getAttribute('op-dvr__enabled') && Math.floor(this.#played.value) >= 99) {\n                    lastCurrentTime = el.currentTime;\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.durationchange = (): void => {\n            const el = this.#player.activeElement();\n            const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n            if (!Number.isNaN(el.duration)) {\n                this.#slider.setAttribute('max', `${el.duration}`);\n                this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n            }\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (current / el.duration) * 100;\n        };\n\n        this.#events.media.ended = (): void => {\n            this.#slider.style.backgroundSize = '0% 100%';\n            if (this.#slider.getAttribute('max')) {\n                this.#slider.setAttribute('max', '0');\n            }\n            this.#buffer.value = 0;\n            this.#played.value = 0;\n        };\n\n        const updateSlider = (e: Event): void => {\n            const el = this.#player.activeElement();\n            const target = e.target as HTMLInputElement;\n            const value = parseFloat(target.value);\n            if (\n                this.#slider.classList.contains('op-progress--pressed') ||\n                (value < el.currentTime && !progress?.allowRewind) ||\n                (value > el.currentTime && !progress?.allowSkip)\n            ) {\n                this.#slider.value = el.currentTime.toString();\n                return;\n            }\n            this.#slider.classList.add('.op-progress--pressed');\n\n            const min = parseFloat(target.min);\n            const max = parseFloat(target.max);\n            const val = parseFloat(target.value);\n            this.#slider.style.backgroundSize = `${((val - min) * 100) / (max - min)}% 100%`;\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (val / el.duration) * 100;\n\n            if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                el.currentTime = Math.round(this.#played.value) >= 99 ? lastCurrentTime : val;\n            } else {\n                el.currentTime = val;\n            }\n\n            this.#slider.classList.remove('.op-progress--pressed');\n        };\n\n        const forcePause = (e: KeyboardEvent): void => {\n            const el = this.#player.activeElement();\n            const key = e.which || e.keyCode || 0;\n            const target = this.#slider;\n            const value = Math.round(Number(target.value));\n            const current = Math.round(el.currentTime);\n            const isProgressManipulationAllowed =\n                (value < current && progress?.allowRewind) || (value >= current && progress?.allowSkip);\n\n            // If current progress is not related to an Ad, manipulate current time\n            if (isProgressManipulationAllowed && (key === 1 || key === 0) && this.#player.isMedia() && !el.paused) {\n                el.pause();\n                this.#forcePause = true;\n            }\n        };\n\n        const releasePause = (): void => {\n            const el = this.#player.activeElement();\n            if (this.#forcePause === true && this.#player.isMedia()) {\n                if (el.paused) {\n                    el.play();\n                    this.#forcePause = false;\n                }\n            }\n        };\n\n        // When tapping on mobile, it will update the time and force pause\n        const mobileForcePause = (e: TouchEvent): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity) {\n                const { changedTouches } = e;\n                const x = changedTouches[0]?.pageX || 0;\n                const pos = x - offset(this.#progress).left;\n                const percentage = pos / this.#progress.offsetWidth;\n                const time = percentage * el.duration;\n\n                if (\n                    (time < el.currentTime && progress?.allowRewind) ||\n                    (time > el.currentTime && progress?.allowSkip)\n                ) {\n                    this.#slider.value = time.toString();\n                    updateSlider(e);\n                    if (!el.paused) {\n                        el.pause();\n                        this.#forcePause = true;\n                    }\n                }\n            }\n        };\n\n        this.#events.slider.input = updateSlider.bind(this);\n        this.#events.slider.change = updateSlider.bind(this);\n        this.#events.slider.mousedown = forcePause.bind(this);\n        this.#events.slider.mouseup = releasePause.bind(this);\n        this.#events.slider.touchstart = mobileForcePause.bind(this);\n        this.#events.slider.touchend = releasePause.bind(this);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#events.container.mousemove = (e: MouseEvent): void => {\n                const el = this.#player.activeElement();\n                if (el.duration !== Infinity && !this.#player.isAd()) {\n                    const x = e.pageX;\n\n                    let pos = x - offset(this.#progress).left;\n                    const half = this.#tooltip.offsetWidth / 2;\n                    const percentage = pos / this.#progress.offsetWidth;\n                    const time = percentage * el.duration;\n                    const mediaContainer = this.#player.getContainer();\n                    const limit = mediaContainer.offsetWidth - this.#tooltip.offsetWidth;\n\n                    if (pos <= 0 || x - offset(mediaContainer).left <= half) {\n                        pos = 0;\n                    } else if (x - offset(mediaContainer).left >= limit) {\n                        pos = limit - offset(this.#slider).left - 10;\n                    } else {\n                        pos -= half;\n                    }\n\n                    if (percentage >= 0 && percentage <= 1) {\n                        this.#tooltip.classList.add('op-controls__tooltip--visible');\n                    } else {\n                        this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                    }\n\n                    this.#tooltip.style.left = `${pos}px`;\n                    this.#tooltip.innerHTML = Number.isNaN(time) ? '00:00' : formatTime(time);\n                }\n            };\n            this.#events.global.mousemove = (e: MouseEvent): void => {\n                if (!(e.target as HTMLElement).closest('.op-controls__progress') || this.#player.isAd()) {\n                    this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                }\n            };\n        }\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#progress.addEventListener('keydown', this.#player.getEvents().keydown, EVENT_OPTIONS);\n        this.#progress.addEventListener('mousemove', this.#events.container.mousemove, EVENT_OPTIONS);\n        document.addEventListener('mousemove', this.#events.global.mousemove, EVENT_OPTIONS);\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#progress);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#progress.removeEventListener('keydown', this.#player.getEvents().keydown);\n        this.#progress.removeEventListener('mousemove', this.#events.container.mousemove);\n\n        document.removeEventListener('mousemove', this.#events.global.mousemove);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#buffer.remove();\n        this.#played.remove();\n        this.#slider.remove();\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip.remove();\n        }\n        this.#progress.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const el = this.#player.activeElement();\n        const isAd = this.#player.isAd();\n        const key = e.which || e.keyCode || 0;\n        // Use the 0-9 keys to manipulate current media time to set media (not Ads) to the 0% to 90% of duration.\n        if (!isAd && key >= 48 && key <= 57 && el.duration !== Infinity) {\n            let step = 0;\n            for (let i = 48, limit = 57; i <= limit; i++) {\n                if (i < key) {\n                    step++;\n                }\n            }\n            el.currentTime = el.duration * (0.1 * step);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Progress;\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem, SettingsSubMenu } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { sanitize } from '../utils/general';\n\nclass Settings implements PlayerComponent {\n    #player: Player;\n\n    #submenu: SettingsSubMenu = {};\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLElement;\n\n    #events: EventsList = {\n        global: {},\n        media: {},\n    };\n\n    #originalOutput = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    private clickEvent: () => void;\n\n    private hideEvent: () => void;\n\n    private removeEvent: (e: CustomEvent) => void;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__settings op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.settings || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.settings || '');\n\n        this.#menu = document.createElement('div');\n        this.#menu.className = 'op-settings';\n        this.#menu.setAttribute('aria-hidden', 'true');\n        this.#menu.innerHTML = '<div class=\"op-settings__menu\" role=\"menu\"></div>';\n\n        this.clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n            for (let i = 0, total = menus.length; i < total; ++i) {\n                if (menus[i] !== this.#menu) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n            }\n            this.#menu.setAttribute(\n                'aria-hidden',\n                this.#menu.getAttribute('aria-hidden') === 'false' ? 'true' : 'false'\n            );\n        };\n\n        this.hideEvent = (): void => {\n            let timeout;\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame((): void => {\n                    this.#menu.innerHTML = this.#originalOutput;\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                });\n            }\n        };\n\n        this.removeEvent = (e: CustomEvent): void => {\n            const { id, type } = e.detail;\n            this.removeItem(id, type);\n        };\n\n        this.clickEvent = this.clickEvent.bind(this);\n        this.hideEvent = this.hideEvent.bind(this);\n        this.removeEvent = this.removeEvent.bind(this);\n\n        this.#events.media.controlshidden = this.hideEvent.bind(this);\n        this.#events.media.settingremoved = this.removeEvent.bind(this);\n        this.#events.media.play = this.hideEvent.bind(this);\n        this.#events.media.pause = this.hideEvent.bind(this);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const { target } = e;\n            const current = target as HTMLElement;\n            if (current?.closest(`#${this.#player.id}`) && current?.classList.contains('op-speed__option')) {\n                const level = current?.getAttribute('data-value') || '';\n                this.#player.getMedia().playbackRate = parseFloat(level.replace('speed-', ''));\n            }\n        };\n        this.#events.global.resize = this.hideEvent.bind(this);\n\n        this.#button.addEventListener('click', this.clickEvent, EVENT_OPTIONS);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        document.addEventListener('keydown', this.#events.global.click, EVENT_OPTIONS);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.#events.global.resize, EVENT_OPTIONS);\n        }\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n        this.#player.getContainer().appendChild(this.#menu);\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.clickEvent);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        document.removeEventListener('keydown', this.#events.global.click);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.#events.global.resize);\n        }\n        if (this.#events.global['settings.submenu'] !== undefined) {\n            document.removeEventListener('click', this.#events.global['settings.submenu']);\n            this.#player.getElement().removeEventListener('controlshidden', this.hideEvent);\n        }\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#menu.remove();\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem {\n        const media = this.#player.getMedia();\n        const { labels } = this.#player.getOptions();\n\n        let rate = 1;\n        if (this.#player && media) {\n            rate = media.defaultPlaybackRate !== media.playbackRate ? media.playbackRate : media.defaultPlaybackRate;\n        }\n        return {\n            className: 'op-speed__option',\n            default: rate.toString(),\n            key: 'speed',\n            name: labels?.speed || '',\n            subitems: [\n                { key: '0.25', label: '0.25' },\n                { key: '0.5', label: '0.5' },\n                { key: '0.75', label: '0.75' },\n                { key: '1', label: labels?.speedNormal || '' },\n                { key: '1.25', label: '1.25' },\n                { key: '1.5', label: '1.5' },\n                { key: '2', label: '2' },\n            ],\n        };\n    }\n\n    addItem(name: string, key: string, defaultValue: string, submenu?: SettingsSubItem[], className?: string): void {\n        // Build the menu entry first\n        const dataValue = `${key}-${sanitize(defaultValue, true)}`;\n        const menuItem = document.createElement('div');\n        menuItem.className = 'op-settings__menu-item';\n        menuItem.tabIndex = 0;\n        menuItem.setAttribute('role', 'menuitemradio');\n        menuItem.innerHTML = `<div class=\"op-settings__menu-label\" data-value=\"${dataValue}\">${name}</div>`;\n\n        const submenuMatch = submenu ? submenu.find((x) => x.key === defaultValue) : null;\n        if (submenuMatch) {\n            menuItem.innerHTML += `<div class=\"op-settings__menu-content\" tabindex=\"0\">${submenuMatch.label}</div>`;\n        }\n\n        const mainMenu = this.#menu.querySelector('.op-settings__menu');\n        if (mainMenu) {\n            mainMenu.appendChild(menuItem);\n        }\n        this.#originalOutput = this.#menu.innerHTML;\n\n        // Store the submenu to reach all options for current menu item\n        if (submenu) {\n            const subItems = `\n                <div class=\"op-settings__header\">\n                    <button type=\"button\" class=\"op-settings__back\" tabindex=\"0\">${name}</button>\n                </div>\n                <div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-${key}\">\n                    ${submenu\n                        .map(\n                            (item: SettingsSubItem) => `\n                    <div class=\"op-settings__submenu-item\" role=\"menuitemradio\" aria-checked=\"${\n                        defaultValue === item.key ? 'true' : 'false'\n                    }\">\n                        <div class=\"op-settings__submenu-label ${className || ''}\" tabindex=\"0\" data-value=\"${key}-${\n                                item.key\n                            }\">\n                            ${item.label}\n                        </div>\n                    </div>`\n                        )\n                        .join('')}\n                </div>`;\n            this.#submenu[key] = subItems;\n        }\n\n        this.#events.global['settings.submenu'] = (e: Event): void => {\n            const target = e.target as HTMLElement;\n            if (target.closest(`#${this.#player.id}`)) {\n                if (target.classList.contains('op-settings__back')) {\n                    this.#menu.classList.add('op-settings--sliding');\n                    setTimeout((): void => {\n                        this.#menu.innerHTML = this.#originalOutput;\n                        this.#menu.classList.remove('op-settings--sliding');\n                    }, 100);\n                } else if (target.classList.contains('op-settings__menu-content')) {\n                    const labelEl = target.parentElement\n                        ? target.parentElement.querySelector('.op-settings__menu-label')\n                        : null;\n                    const label = labelEl ? labelEl.getAttribute('data-value') : null;\n                    const fragments = label ? label.split('-') : [];\n                    if (fragments.length > 0) {\n                        fragments.pop();\n\n                        // eslint-disable-next-line no-useless-escape\n                        const current = fragments.join('-').replace(/^\\-|\\-$/, '');\n                        if (typeof this.#submenu[current] !== 'undefined') {\n                            this.#menu.classList.add('op-settings--sliding');\n                            setTimeout((): void => {\n                                this.#menu.innerHTML = this.#submenu[current];\n                                this.#menu.classList.remove('op-settings--sliding');\n                            }, 100);\n                        }\n                    }\n                } else if (target.classList.contains('op-settings__submenu-label')) {\n                    const current = target.getAttribute('data-value');\n                    const value = current ? current.replace(`${key}-`, '') : '';\n                    const label = target.innerText;\n\n                    // Update values in submenu and store\n                    const menuTarget = this.#menu.querySelector(\n                        `#menu-item-${key} .op-settings__submenu-item[aria-checked=true]`\n                    );\n                    if (menuTarget) {\n                        menuTarget.setAttribute('aria-checked', 'false');\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-checked', 'true');\n                        }\n                        this.#submenu[key] = this.#menu.innerHTML;\n\n                        // Restore original menu, and set the new value\n                        this.#menu.classList.add('op-settings--sliding');\n                        setTimeout((): void => {\n                            this.#menu.innerHTML = this.#originalOutput;\n                            const prev = this.#menu.querySelector(\n                                `.op-settings__menu-label[data-value=\"${key}-${defaultValue}\"]`\n                            );\n                            if (prev) {\n                                prev.setAttribute('data-value', `${current}`);\n                                if (prev.nextElementSibling) {\n                                    prev.nextElementSibling.textContent = label;\n                                }\n                            }\n                            defaultValue = value;\n                            this.#originalOutput = this.#menu.innerHTML;\n                            this.#menu.classList.remove('op-settings--sliding');\n                        }, 100);\n                    }\n                }\n            } else {\n                this.hideEvent();\n            }\n        };\n\n        document.addEventListener('click', this.#events.global['settings.submenu'], EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('controlshidden', this.hideEvent, EVENT_OPTIONS);\n    }\n\n    removeItem(id: string | number, type: string, minItems = 2): void {\n        const target = this.#player.getElement().querySelector(`.op-settings__submenu-label[data-value=${type}-${id}]`);\n        if (target) {\n            target.remove();\n        }\n\n        if (\n            this.#player.getElement().querySelectorAll(`.op-settings__submenu-label[data-value^=${type}]`).length <\n            minItems\n        ) {\n            delete this.#submenu[type];\n            const label = this.#player.getElement().querySelector(`.op-settings__menu-label[data-value^=${type}]`);\n            const menuItem = label ? label.closest('.op-settings__menu-item') : null;\n            if (menuItem) {\n                menuItem.remove();\n            }\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const isAd = this.#player.isAd();\n        const settingsBtnFocused = document?.activeElement?.classList.contains('op-controls__settings');\n\n        const menuFocused =\n            document?.activeElement?.classList.contains('op-settings__menu-content') ||\n            document?.activeElement?.classList.contains('op-settings__back') ||\n            document?.activeElement?.classList.contains('op-settings__submenu-label');\n        if (!isAd) {\n            if (settingsBtnFocused && (key === 13 || key === 32)) {\n                this.clickEvent();\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (menuFocused && (key === 13 || key === 32)) {\n                this.#events.global['settings.submenu'](e);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n}\n\nexport default Settings;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { formatTime } from '../utils/time';\n\nclass Time implements PlayerComponent {\n    #player: Player;\n\n    #currentTime: HTMLTimeElement;\n\n    #delimiter: HTMLSpanElement;\n\n    #duration: HTMLTimeElement;\n\n    #container: HTMLSpanElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n\n        this.#currentTime = document.createElement('time');\n        this.#currentTime.className = 'op-controls__current';\n        this.#currentTime.setAttribute('role', 'timer');\n        this.#currentTime.setAttribute('aria-live', 'off');\n        this.#currentTime.setAttribute('aria-hidden', 'false');\n        this.#currentTime.innerText = '0:00';\n\n        const showOnlyCurrent = progress?.showCurrentTimeOnly || false;\n\n        if (!showOnlyCurrent) {\n            this.#delimiter = document.createElement('span');\n            this.#delimiter.className = 'op-controls__time-delimiter';\n            this.#delimiter.setAttribute('aria-hidden', 'false');\n            this.#delimiter.innerText = '/';\n\n            this.#duration = document.createElement('time');\n            this.#duration.className = 'op-controls__duration';\n            this.#duration.setAttribute('aria-hidden', 'false');\n            this.#duration.innerText = formatTime(progress?.duration || 0);\n        }\n\n        const controls = this.#player.getControls().getLayer(this.#controlLayer);\n        this.#container = document.createElement('span');\n        this.#container.className = `op-controls-time op-control__${this.#controlPosition}`;\n        this.#container.appendChild(this.#currentTime);\n        if (!showOnlyCurrent) {\n            this.#container.appendChild(this.#delimiter);\n            this.#container.appendChild(this.#duration);\n        }\n        controls.appendChild(this.#container);\n\n        const setInitialTime = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (!showOnlyCurrent) {\n                    const duration = !Number.isNaN(el.duration)\n                        ? el.duration\n                        : this.#player.getOptions().progress?.duration || 0;\n                    this.#duration.innerText = formatTime(duration);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (!showOnlyCurrent) {\n                this.#duration.setAttribute('aria-hidden', 'true');\n                this.#delimiter.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.loadedmetadata = setInitialTime.bind(this);\n        this.#events.controls.controlschanged = setInitialTime.bind(this);\n\n        const { showLabel: showLiveLabel } = this.#player.getOptions().live || {};\n\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const duration = formatTime(el.duration);\n                if (!showOnlyCurrent && !Number.isNaN(el.duration) && duration !== this.#duration.innerText) {\n                    this.#duration.innerText = duration;\n                    this.#duration.setAttribute('aria-hidden', 'false');\n                    this.#delimiter.setAttribute('aria-hidden', 'false');\n                } else if (showOnlyCurrent || duration !== this.#duration.innerText) {\n                    this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (\n                showOnlyCurrent ||\n                (!this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                    this.#duration.getAttribute('aria-hidden') === 'false')\n            ) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            } else {\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            }\n        };\n        this.#events.media.ended = (): void => {\n            const el = this.#player.activeElement();\n            const duration = !Number.isNaN(el.duration)\n                ? el.duration\n                : this.#player.getOptions().progress?.duration || 0;\n            if (!showOnlyCurrent && this.#player.isMedia()) {\n                this.#duration.innerText = formatTime(duration);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#currentTime.remove();\n        const { showCurrentTimeOnly } = this.#player.getOptions().progress || {};\n        if (!showCurrentTimeOnly) {\n            this.#delimiter.remove();\n            this.#duration.remove();\n        }\n        this.#container.remove();\n    }\n}\n\nexport default Time;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Volume implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #container: HTMLDivElement;\n\n    #display: HTMLProgressElement;\n\n    #slider: HTMLInputElement;\n\n    #events: EventsList = {\n        button: {},\n        media: {},\n        slider: {},\n    };\n\n    #volume: number;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#volume = this.#player.getMedia().volume;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#container = document.createElement('div');\n        this.#container.className = `op-controls__volume op-control__${this.#controlPosition}`;\n        this.#container.tabIndex = 0;\n        this.#container.setAttribute('aria-valuemin', '0');\n        this.#container.setAttribute('aria-valuemax', '100');\n        this.#container.setAttribute('aria-valuenow', `${this.#volume}`);\n        this.#container.setAttribute('aria-valuetext', `${labels?.volume || ''}: ${this.#volume}`);\n        this.#container.setAttribute('aria-orientation', 'vertical');\n        this.#container.setAttribute('aria-label', labels?.volumeSlider || '');\n        this.#container.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__volume--input';\n        this.#slider.tabIndex = -1;\n        this.#slider.value = this.#player.getMedia().volume.toString();\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('max', '1');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.setAttribute('aria-label', labels?.volumeControl || '');\n\n        this.#display = document.createElement('progress');\n        this.#display.className = 'op-controls__volume--display';\n        this.#display.setAttribute('max', '10');\n        this.#display.value = this.#player.getMedia().volume * 10;\n\n        this.#container.appendChild(this.#slider);\n        this.#container.appendChild(this.#display);\n\n        // Use as backup when mute is clicked\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__mute op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mute || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.mute || '');\n\n        const updateSlider = (element: any): void => {\n            const mediaVolume = element.volume * 1;\n            const vol = Math.floor(mediaVolume * 100);\n\n            this.#slider.value = `${element.volume}`;\n            this.#display.value = mediaVolume * 10;\n            this.#container.setAttribute('aria-valuenow', `${vol}`);\n            this.#container.setAttribute('aria-valuetext', `${labels?.volume}: ${vol}`);\n        };\n\n        const updateButton = (element: any): void => {\n            const vol = element.volume;\n            if (vol <= 0.5 && vol > 0) {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.add('op-controls__mute--half');\n            } else if (vol === 0) {\n                this.#button.classList.add('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            } else {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            }\n        };\n\n        const updateVolume = (event: Event): void => {\n            const el = this.#player.activeElement();\n            const value = parseFloat((event.target as HTMLInputElement).value);\n            el.volume = value;\n            el.muted = el.volume === 0;\n            this.#volume = value;\n            const unmuteEl = this.#player.getContainer().querySelector('.op-player__unmute');\n            if (!el.muted && unmuteEl) {\n                unmuteEl.remove();\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n\n        this.#events.media.volumechange = (): void => {\n            const el = this.#player.activeElement();\n            updateSlider(el);\n            updateButton(el);\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            const el = this.#player.activeElement();\n            if (el.muted) {\n                el.volume = 0;\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n        this.#events.slider.input = updateVolume.bind(this);\n        this.#events.slider.change = updateVolume.bind(this);\n\n        this.#events.button.click = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n            el.muted = !el.muted;\n\n            if (el.muted) {\n                el.volume = 0;\n                this.#button.title = labels?.unmute || '';\n                this.#button.setAttribute('aria-label', labels?.unmute || '');\n            } else {\n                el.volume = this.#volume;\n                this.#button.title = labels?.mute || '';\n                this.#button.setAttribute('aria-label', labels?.mute || '');\n            }\n            const event = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(event);\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        if ((!IS_ANDROID && !IS_IOS) || !this.#player.getOptions().useDeviceVolume) {\n            const controls = this.#player.getControls().getLayer(this.#controlLayer);\n            controls.appendChild(this.#button);\n            controls.appendChild(this.#container);\n        }\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.#events.button.click);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#slider.remove();\n        this.#display.remove();\n        this.#container.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.#player.activeElement();\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__mute');\n\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            el.muted = !el.muted;\n            el.volume = el.muted ? 0 : this.#volume;\n            this.#events.button.click();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Volume;\n","import Captions from './controls/captions';\nimport Fullscreen from './controls/fullscreen';\nimport Levels from './controls/levels';\nimport Play from './controls/play';\nimport Progress from './controls/progress';\nimport Settings from './controls/settings';\nimport Time from './controls/time';\nimport Volume from './controls/volume';\nimport { ElementItem, EventsList, PlayerComponent, PlayerLayers, SettingsItem } from './interfaces';\nimport Player from './player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\n\nclass Controls implements PlayerComponent {\n    events: EventsList = {\n        media: {},\n        mouse: {},\n    };\n\n    #settings: Settings;\n\n    #timer = 0;\n\n    #controls: HTMLDivElement;\n\n    #player: Player;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #items: any;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #controlEls: any = {\n        Captions,\n        Fullscreen,\n        Levels,\n        Play,\n        Progress,\n        Settings,\n        Time,\n        Volume,\n    };\n\n    constructor(player: Player) {\n        this.#player = player;\n        this._setElements();\n    }\n\n    create(): void {\n        this.#player.getElement().controls = false;\n\n        const isMediaVideo = isVideo(this.#player.getElement());\n\n        this._createControlsLayer();\n        this._buildElements();\n\n        this.events.controlschanged = (): void => {\n            this.destroy();\n            this._setElements();\n            this.create();\n        };\n\n        this.events.ended = (): void => {\n            this.#player.getContainer().classList.remove('op-controls--hidden');\n        };\n\n        this.#player.getElement().addEventListener('controlschanged', this.events.controlschanged, EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('ended', this.events.ended, EVENT_OPTIONS);\n\n        const { alwaysVisible } = this.#player.getOptions().controls || {};\n\n        if (!alwaysVisible) {\n            const showControls = (): void => {\n                if (isMediaVideo) {\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._stopControlTimer();\n                }\n            };\n\n            this.events.mouse.mouseenter = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._stopControlTimer();\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                    } else if (this.#player.getOptions().showLoaderOnInit) {\n                        this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'false');\n                    }\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mousemove = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                    } else {\n                        this.#player.playBtn.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'true' : 'false'\n                        );\n                        this.#player.loader.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'false' : 'true'\n                        );\n                    }\n\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mouseleave = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._startControlTimer(1000);\n                }\n            };\n            this.events.media.play = (): void => {\n                if (isMediaVideo) {\n                    this._startControlTimer(this.#player.getOptions().hidePlayBtnTimer || 350);\n                }\n            };\n            this.events.media.loadedmetadata = showControls.bind(this);\n            this.events.media.pause = showControls.bind(this);\n            this.events.media.waiting = showControls.bind(this);\n            this.events.media.stalled = showControls.bind(this);\n            this.events.media.playererror = showControls.bind(this);\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().addEventListener(event, this.events.media[event], EVENT_OPTIONS);\n            });\n\n            if (IS_ANDROID || IS_IOS) {\n                this.#player.getContainer().addEventListener('click', this.events.mouse.mouseenter, EVENT_OPTIONS);\n            } else {\n                Object.keys(this.events.mouse).forEach((event) => {\n                    this.#player.getContainer().addEventListener(event, this.events.mouse[event], EVENT_OPTIONS);\n                });\n            }\n\n            // Initial countdown to hide controls\n            if (isMediaVideo && !this.#player.activeElement().paused) {\n                this._startControlTimer(3000);\n            }\n        }\n    }\n\n    destroy(): void {\n        if (!IS_ANDROID && !IS_IOS) {\n            Object.keys(this.events.mouse).forEach((event) => {\n                this.#player.getContainer().removeEventListener(event, this.events.mouse[event]);\n            });\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().removeEventListener(event, this.events.media[event]);\n            });\n\n            this._stopControlTimer();\n        }\n\n        this.#player.getElement().removeEventListener('controlschanged', this.events.controlschanged);\n        this.#player.getElement().removeEventListener('ended', this.events.ended);\n\n        Object.keys(this.#items).forEach((position: string) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._destroyCustomElement(item as ElementItem);\n                } else if (typeof (item as PlayerComponent).destroy === 'function') {\n                    (item as PlayerComponent).destroy();\n                }\n            });\n        });\n\n        this.#controls.remove();\n    }\n\n    getContainer(): HTMLDivElement {\n        return this.#controls;\n    }\n\n    getLayer(layer: string): HTMLDivElement {\n        return this.#controls.querySelector(`.op-controls-layer__${layer}`) || this.#controls;\n    }\n\n    private _createControlsLayer(): void {\n        if (!this.#controls || !this.#player.getContainer().querySelector('.op-controls')) {\n            this.#controls = document.createElement('div');\n            this.#controls.className = 'op-controls';\n            this.#player.getContainer().appendChild(this.#controls);\n\n            const messageContainer = document.createElement('div');\n            messageContainer.className = 'op-status';\n            messageContainer.innerHTML = '<span></span>';\n            messageContainer.tabIndex = -1;\n            messageContainer.setAttribute('aria-hidden', 'true');\n\n            if (isAudio(this.#player.getElement())) {\n                this.#controls.appendChild(messageContainer);\n            }\n        }\n    }\n\n    private _startControlTimer(time: number): void {\n        const el = this.#player.activeElement();\n        this._stopControlTimer();\n\n        if (typeof window !== 'undefined') {\n            this.#timer = window.setTimeout(() => {\n                if ((!el.paused || !el.ended) && isVideo(this.#player.getElement())) {\n                    this.#player.getContainer().classList.add('op-controls--hidden');\n                    this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                    this._stopControlTimer();\n                    const event = addEvent('controlshidden');\n                    this.#player.getElement().dispatchEvent(event);\n                }\n            }, time);\n        }\n    }\n\n    private _stopControlTimer(): void {\n        if (this.#timer !== 0) {\n            clearTimeout(this.#timer);\n            this.#timer = 0;\n        }\n    }\n\n    private _setElements(): void {\n        const controls = this.#player.getOptions().controls?.layers || {};\n        this.#items = {\n            'bottom-left': [],\n            'bottom-middle': [],\n            'bottom-right': [],\n            left: [],\n            main: [],\n            middle: [],\n            right: [],\n            'top-left': [],\n            'top-middle': [],\n            'top-right': [],\n        };\n\n        const isVideoEl = isVideo(this.#player.getElement());\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        const controlPositions = Object.keys(controls);\n        const layersExist = controlPositions.find((item) => /^(top|bottom)/.test(item));\n        this._createControlsLayer();\n\n        controlPositions.forEach((position: string) => {\n            const [layer, pos] = position.split('-');\n\n            // Create extra layers if top/bottom exist\n            if (pos) {\n                if (!this.#controls.classList.contains('op-controls__stacked')) {\n                    this.#controls.classList.add('op-controls__stacked');\n                }\n                const className = `op-controls-layer__${layer}`;\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            } else if (layersExist) {\n                const className = 'op-controls-layer__center';\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            }\n\n            const layers = controls ? controls[position as keyof PlayerLayers] : null;\n            if (layers) {\n                // remove duplicate values in the same position\n                layers\n                    .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i)\n                    .forEach((el: string) => {\n                        const currentLayer = layersExist && !pos ? 'center' : layer;\n                        const className = `${el.charAt(0).toUpperCase()}${el.slice(1)}`;\n                        const item = new this.#controlEls[className](this.#player, pos || layer, currentLayer);\n                        if (el === 'settings') {\n                            this.#settings = item as Settings;\n                        }\n                        if (isVideoEl || (el !== 'fullscreen' && isAudioEl)) {\n                            this.#items[position].push(item);\n                        }\n                    });\n            }\n        });\n\n        // Append/prepend the custom items (if any) depending on their position:\n        // If position is right, always prepend so Settings and Fullscreen are the last items;\n        // otherwise, append new controls\n        this.#player.getCustomControls().forEach((item) => {\n            const [layer, pos] = item.position.split('-');\n            const currentLayer = layersExist && !pos ? 'center' : layer;\n            item.layer = currentLayer;\n            item.position = pos || layer;\n\n            if (typeof item.index === 'number') {\n                this.#items[item.position].splice(item.index, 0, item);\n            } else if (item.position === 'right') {\n                this.#items[item.position].unshift(item);\n            } else {\n                this.#items[item.position].push(item);\n            }\n        });\n    }\n\n    private _buildElements(): void {\n        // Loop controls to build them and register events\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._createCustomElement(item as ElementItem);\n                } else {\n                    (item as PlayerComponent).create();\n                }\n            });\n        });\n\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                const allowDefault = !this.#player.getOptions().detachMenus || item instanceof Settings;\n                const current = item as PlayerComponent;\n                if (allowDefault && !current.custom && typeof current.addSettings === 'function') {\n                    const menuItem = current.addSettings() as SettingsItem;\n                    if (this.#settings && Object.keys(menuItem).length) {\n                        this.#settings.addItem(\n                            menuItem.name,\n                            menuItem.key,\n                            menuItem.default,\n                            menuItem.subitems,\n                            menuItem.className\n                        );\n                    }\n                }\n            });\n        });\n\n        const e = addEvent('controlschanged');\n        this.#controls.dispatchEvent(e);\n    }\n\n    private _hideCustomMenu(menu: HTMLDivElement): void {\n        let timeout;\n        if (timeout && typeof window !== 'undefined') {\n            window.cancelAnimationFrame(timeout);\n        }\n\n        if (typeof window !== 'undefined') {\n            timeout = window.requestAnimationFrame(() => {\n                menu.setAttribute('aria-hidden', 'true');\n            });\n        }\n    }\n\n    private _toggleCustomMenu(event: Event, menu: HTMLDivElement, item: ElementItem): void {\n        const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n        menus.forEach((m) => {\n            if (m.getAttribute('aria-hidden') === 'false' && m.id !== menu.id) {\n                m.setAttribute('aria-hidden', 'true');\n            }\n        });\n        menu.setAttribute('aria-hidden', menu.getAttribute('aria-hidden') === 'true' ? 'false' : 'true');\n        if (typeof item.click === 'function') {\n            item.click(event);\n        }\n    }\n\n    private _createCustomElement(item: ElementItem): void {\n        const element = document.createElement(item.type);\n        element.tabIndex = 0;\n        element.id = item.id;\n        element.className = `op-controls__${item.id} op-control__${item.position} ${\n            item.showInAds ? '' : 'op-control__hide-in-ad'\n        }`;\n\n        if (item.styles) {\n            Object.assign(element.style, item.styles);\n        }\n\n        if (item.type === 'button' && item.icon) {\n            element.innerHTML = /\\.(jpg|png|svg|gif)$/.test(item.icon)\n                ? `<img src=\"${sanitize(item.icon)}\"${item.alt ? `alt=\"${sanitize(item.alt)}\"` : ''}>`\n                : sanitize(item.icon);\n        } else if (item.content) {\n            element.innerHTML = sanitize(item.content, false);\n        }\n        if (item.type === 'button' && item.title) {\n            element.title = sanitize(item.title);\n        }\n        if (item.type === 'img' && item.alt) {\n            (element as HTMLImageElement).alt = sanitize(item.alt);\n        }\n        if (item.type !== 'button' && item.click && typeof item.click === 'function') {\n            element.setAttribute('aria-role', 'button');\n        }\n\n        // In the event we have subitems for a button control, create menu and attach events for each item\n        if (item.type === 'button' && item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n            const menu = document.createElement('div');\n            menu.className = 'op-settings op-settings__custom';\n            menu.id = `${item.id}-menu`;\n            menu.setAttribute('aria-hidden', 'true');\n\n            const items = item.subitems.map((s) => {\n                let itemIcon = '';\n                if (s.icon) {\n                    itemIcon = /\\.(jpg|png|svg|gif)$/.test(s.icon)\n                        ? `<img src=\"${sanitize(s.icon)}\"${s.alt ? `alt=\"${sanitize(s.alt)}\"` : ''}>`\n                        : sanitize(s.icon, false);\n                }\n                return `<div class=\"op-settings__menu-item\" tabindex=\"0\" ${\n                    s.title ? `title=\"${s.title}\"` : ''\n                } role=\"menuitemradio\">\n                    <div class=\"op-settings__menu-label\" id=\"${s.id}\" data-value=\"${item.id}-${s.id}\">${itemIcon} ${\n                    s.label\n                }</div>\n                </div>`;\n            });\n\n            menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\">${items.join('')}</div>`;\n            this.#player.getContainer().appendChild(menu);\n\n            item.subitems.forEach((subitem) => {\n                const menuItem = menu.querySelector(`#${subitem.id}`);\n                if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                    menuItem.addEventListener('click', subitem.click, EVENT_OPTIONS);\n                }\n            });\n\n            // Ensure to toggle menu, hide other settings menus and dispatch a general custom\n            // click event (if created)\n            element.addEventListener('click', (e) => this._toggleCustomMenu(e, menu, item), EVENT_OPTIONS);\n\n            this.#player\n                .getElement()\n                .addEventListener('controlshidden', () => this._hideCustomMenu(menu), EVENT_OPTIONS);\n        } else if (item.click && typeof item.click === 'function') {\n            element.addEventListener('click', item.click, EVENT_OPTIONS);\n        }\n        if (item.mouseenter && typeof item.mouseenter === 'function') {\n            element.addEventListener('mouseenter', item.mouseenter, EVENT_OPTIONS);\n        }\n        if (item.mouseleave && typeof item.mouseleave === 'function') {\n            element.addEventListener('mouseleave', item.mouseleave, EVENT_OPTIONS);\n        }\n        if (item.keydown && typeof item.keydown === 'function') {\n            element.addEventListener('keydown', item.keydown, EVENT_OPTIONS);\n        }\n        if (item.blur && typeof item.blur === 'function') {\n            element.addEventListener('blur', item.blur, EVENT_OPTIONS);\n        }\n        if (item.focus && typeof item.focus === 'function') {\n            element.addEventListener('focus', item.focus, EVENT_OPTIONS);\n        }\n        if (item.layer) {\n            if (item.layer === 'main') {\n                this.#player.getContainer().appendChild(element);\n            } else {\n                this.getLayer(item.layer).appendChild(element);\n            }\n        }\n\n        // If there's an initial set of operations to dispatch as soon as the control\n        // is created, dispatch them\n        if (item.init && typeof item.init === 'function') {\n            item.init(this.#player);\n        }\n    }\n\n    private _destroyCustomElement(item: ElementItem): void {\n        const control = this.getContainer().querySelector(`.op-controls__${item.id}`);\n        if (control) {\n            if (item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n                const menu = this.#player.getContainer().querySelector(`#${item.id}-menu`) as HTMLDivElement;\n                if (menu) {\n                    item.subitems.forEach((subitem) => {\n                        const menuItem = menu.querySelector(`#${subitem.id}`);\n                        if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                            menuItem.removeEventListener('click', subitem.click);\n                        }\n                    });\n\n                    control.removeEventListener('click', (e) => this._toggleCustomMenu(e, menu, item));\n\n                    this.#player.getElement().removeEventListener('controlshidden', () => this._hideCustomMenu(menu));\n                    menu.remove();\n                }\n            }\n            if (item.click && typeof item.click === 'function') {\n                control.removeEventListener('click', item.click);\n            }\n            if (item.mouseenter && typeof item.mouseenter === 'function') {\n                control.removeEventListener('mouseenter', item.mouseenter);\n            }\n            if (item.mouseleave && typeof item.mouseleave === 'function') {\n                control.removeEventListener('mouseleave', item.mouseleave);\n            }\n            if (item.keydown && typeof item.keydown === 'function') {\n                control.removeEventListener('keydown', item.keydown);\n            }\n            if (item.blur && typeof item.blur === 'function') {\n                control.removeEventListener('blur', item.blur);\n            }\n            if (item.focus && typeof item.focus === 'function') {\n                control.removeEventListener('focus', item.focus);\n            }\n            control.remove();\n\n            // If there's an initial set of operations to dispatch as soon as the control\n            // is created, dispatch them\n            if (item.destroy && typeof item.destroy === 'function') {\n                item.destroy(this.#player);\n            }\n        }\n    }\n}\n\nexport default Controls;\n","import { Level, Source } from '../interfaces';\n\nabstract class Native {\n    element: HTMLMediaElement;\n\n    media: Source;\n\n    promise: Promise<unknown>;\n\n    #customPlayer: any;\n\n    constructor(element: HTMLMediaElement, media: Source) {\n        this.element = element;\n        this.media = media;\n        this.promise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    abstract canPlayType(mimeType: string): boolean;\n\n    abstract load(): void;\n\n    abstract destroy(): void;\n\n    abstract set src(media: Source);\n\n    abstract get src(): Source;\n\n    abstract set level(value: number | string | Record<string, unknown>);\n\n    abstract get level(): number | string;\n\n    abstract get levels(): Level[];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    set instance(customPlayer: any) {\n        this.#customPlayer = customPlayer;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get instance(): any {\n        return this.#customPlayer;\n    }\n\n    play(): Promise<void> {\n        return this.element.play();\n    }\n\n    pause(): void {\n        this.element.pause();\n    }\n\n    set volume(value: number) {\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    set muted(value: boolean) {\n        this.element.muted = value;\n    }\n\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set playbackRate(value: number) {\n        this.element.playbackRate = value;\n    }\n\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value: number) {\n        this.element.defaultPlaybackRate = value;\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        this.element.currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    get ended(): boolean {\n        return this.element.ended;\n    }\n}\n\nexport default Native;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isDashSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const dashjs: any;\n\nclass DashMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    #events: EventsList = {};\n\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n\n        this._assign = this._assign.bind(this);\n        this._preparePlayer = this._preparePlayer.bind(this);\n\n        this.promise =\n            typeof dashjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.dashjs.org/latest/dash.all.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(() => {\n            this.#player = dashjs.MediaPlayer().create();\n            this.instance = this.#player;\n        });\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && mimeType === 'application/dash+xml';\n    }\n\n    load(): void {\n        this._preparePlayer();\n        this.#player.attachSource(this.media.src);\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], this._assign);\n            });\n            this.#events = [];\n        }\n        this.#player.reset();\n    }\n\n    set src(media: Source) {\n        if (isDashSource(media)) {\n            this.destroy();\n            this.#player = dashjs.MediaPlayer().create();\n            this._preparePlayer();\n            this.#player.attachSource(media.src);\n\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player) {\n            const bitrates = this.#player.getBitrateInfoListFor('video');\n            if (bitrates.length) {\n                bitrates.forEach((item: number) => {\n                    if (bitrates[item]) {\n                        const { height, name } = bitrates[item];\n                        const level = {\n                            height,\n                            id: `${item}`,\n                            label: name || null,\n                        };\n                        levels.push(level);\n                    }\n                });\n            }\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        if (level === '0') {\n            this.#player.setAutoSwitchQuality(true);\n        } else {\n            this.#player.setAutoSwitchQuality(false);\n            this.#player.setQualityFor('video', level);\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.getQualityFor('video') : '-1';\n    }\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    private _assign(event: Event): void {\n        if (event.type === 'error') {\n            const details = {\n                detail: {\n                    message: event,\n                    type: 'M(PEG)-DASH',\n                },\n            };\n            const errorEvent = addEvent('playererror', details);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event.type, { detail: event });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _preparePlayer(): void {\n        this.#player.updateSettings({\n            debug: {\n                logLevel: dashjs.Debug.LOG_LEVEL_NONE,\n            },\n            streaming: {\n                fastSwitchEnabled: true,\n                scheduleWhilePaused: false,\n            },\n            ...((this.#options as Record<string, unknown>) || {}),\n        });\n        this.#player.initialize();\n        this.#player.attachView(this.element);\n        this.#player.setAutoPlay(false);\n    }\n}\n\nexport default DashMedia;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isFlvSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const flvjs: any;\n\nclass FlvMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n        this.element = element;\n        this.media = mediaSource;\n\n        this._create = this._create.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof flvjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/flv.js@latest/dist/flv.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && (mimeType === 'video/x-flv' || mimeType === 'video/flv');\n    }\n\n    load(): void {\n        this.#player.unload();\n        this.#player.detachMediaElement();\n        this.#player.attachMediaElement(this.element);\n        this.#player.load();\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        this.#player.destroy();\n        this.#player = null;\n    }\n\n    set src(media: Source) {\n        if (isFlvSource(media)) {\n            this.destroy();\n            this._create();\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const { configs, ...rest } = (this.#options as Record<string, unknown>) || {};\n\n        flvjs.LoggingControl.enableDebug = rest?.debug || false;\n        flvjs.LoggingControl.enableVerbose = rest?.debug || false;\n        const options = { ...rest, type: 'flv', url: this.media.src };\n        this.#player = flvjs.createPlayer(options, configs || {});\n        this.instance = this.#player;\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjsevents\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrortypes\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrordetails\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'error') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: `${data[0]}: ${data[1]} ${data[2].msg}`,\n                    type: 'FLV',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event, { detail: { data } });\n            this.element.dispatchEvent(e);\n        }\n    }\n}\n\nexport default FlvMedia;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventsList, Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS, SUPPORTS_HLS } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const Hls: any;\n\n// @see https://github.com/video-dev/hls.js/\nclass HlsMedia extends Native {\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    #recoverDecodingErrorDate = 0;\n\n    #recoverSwapAudioCodecDate = 0;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning\n    #options?: unknown;\n\n    #autoplay: boolean;\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, autoplay: boolean, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options || {};\n        this.element = element;\n        this.media = mediaSource;\n        this.#autoplay = autoplay;\n\n        this._create = this._create.bind(this);\n        this._play = this._play.bind(this);\n        this._pause = this._pause.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof Hls === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return SUPPORTS_HLS() && mimeType === 'application/x-mpegURL';\n    }\n\n    load(): void {\n        if (this.#player) {\n            this.#player.detachMedia();\n            this.#player.loadSource(this.media.src);\n            this.#player.attachMedia(this.element);\n        }\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n        this.element.removeEventListener('play', this._play);\n        this.element.removeEventListener('pause', this._pause);\n        if (this.#player) {\n            this.#player.destroy();\n            this.#player = null;\n        }\n    }\n\n    set src(media: Source) {\n        if (isHlsSource(media)) {\n            this.destroy();\n            this.#player = new Hls(this.#options);\n            this.#player.loadSource(media.src);\n            this.#player.attachMedia(this.element);\n\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        const formattedLevel = Number(level);\n        if (formattedLevel && formattedLevel > -1) {\n            this.#player.loadLevel = formattedLevel;\n        } else {\n            this.#player.currentLevel = formattedLevel;\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const autoplay = !!(this.element.preload === 'auto' || this.#autoplay);\n        (this.#options as Record<string, unknown>).autoStartLoad = autoplay;\n\n        this.#player = new Hls(this.#options);\n        this.instance = this.#player;\n        this.#events = Hls.Events;\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                this._assign(this.#events[event], args)\n            );\n        });\n\n        if (!autoplay) {\n            this.element.addEventListener('play', this._play, EVENT_OPTIONS);\n            this.element.addEventListener('pause', this._pause, EVENT_OPTIONS);\n        }\n    }\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    // @see https://github.com/video-dev/hls.js/blob/master/src/errors.js\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#runtime-events\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#errors\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'hlsError') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: data[1].details,\n                    type: 'HLS',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n\n            // borrowed from https://video-dev.github.io/hls.js/demo\n            const type = data[1].type as string;\n            const { fatal } = data[1];\n            const details = data[1];\n            if (fatal) {\n                switch (type) {\n                    case 'mediaError':\n                        const now = new Date().getTime();\n                        if (!this.#recoverDecodingErrorDate || now - this.#recoverDecodingErrorDate > 3000) {\n                            this.#recoverDecodingErrorDate = new Date().getTime();\n                            this.#player.recoverMediaError();\n                        } else if (!this.#recoverSwapAudioCodecDate || now - this.#recoverSwapAudioCodecDate > 3000) {\n                            this.#recoverSwapAudioCodecDate = new Date().getTime();\n                            console.warn('Attempting to swap Audio Codec and recover from media error');\n                            this.#player.swapAudioCodec();\n                            this.#player.recoverMediaError();\n                        } else {\n                            const msg = 'Cannot recover, last media error recovery failed';\n                            console.error(msg);\n                            const mediaEvent = addEvent(type, { detail: { data: details } });\n                            this.element.dispatchEvent(mediaEvent);\n                        }\n                        break;\n                    case 'networkError':\n                        const message = 'Network error';\n                        console.error(message);\n                        const networkEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(networkEvent);\n                        break;\n                    default:\n                        this.#player.destroy();\n                        const fatalEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(fatalEvent);\n                        break;\n                }\n            } else {\n                const err = addEvent(type, { detail: { data: details } });\n                this.element.dispatchEvent(err);\n            }\n        } else {\n            const details: Record<string, unknown> = data[1] as Record<string, unknown>;\n            if (event === 'hlsLevelLoaded' && details.live === true) {\n                this.element.setAttribute('op-live__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (\n                event === 'hlsLevelUpdated' &&\n                details.live === true &&\n                (details.totalduration as number) > DVR_THRESHOLD\n            ) {\n                this.element.setAttribute('op-dvr__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (event === 'hlsFragParsingMetadata') {\n                const metaEvent = addEvent('metadataready', { detail: { data: data[1] } });\n                this.element.dispatchEvent(metaEvent);\n            }\n            const e = addEvent(event, { detail: { data: data[1] } });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _play(): void {\n        if (this.#player) {\n            this.#player.startLoad();\n        }\n    }\n\n    private _pause(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n    }\n}\n\nexport default HlsMedia;\n","import { Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio, isVideo } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\nclass HTML5Media extends Native {\n    #currentLevel: Level;\n\n    #levelList: Level[] = [];\n\n    #isStreaming = false;\n\n    #retryCount = 0;\n\n    #started = false;\n\n    #timer: number;\n\n    constructor(element: HTMLMediaElement, mediaFile: Source) {\n        super(element, mediaFile);\n\n        if (!isAudio(element) && !isVideo(element)) {\n            throw new TypeError('Native method only supports video/audio tags');\n        }\n\n        this._clearTimeout = this._clearTimeout.bind(this);\n        this._setTimeout = this._setTimeout.bind(this);\n        this._dispatchError = this._dispatchError.bind(this);\n        this._isDvrEnabled = this._isDvrEnabled.bind(this);\n        this._readMediadataInfo = this._readMediadataInfo.bind(this);\n\n        this.#isStreaming = isHlsSource(mediaFile);\n        this.element.addEventListener('playing', this._clearTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('stalled', this._setTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('error', this._dispatchError, EVENT_OPTIONS);\n        this.element.addEventListener('loadeddata', this._isDvrEnabled, EVENT_OPTIONS);\n        this.element.textTracks.addEventListener('addtrack', this._readMediadataInfo, EVENT_OPTIONS);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return !!this.element.canPlayType(mimeType).replace('no', '');\n    }\n\n    load(): void {\n        this.element.load();\n    }\n\n    destroy(): void {\n        this.element.removeEventListener('playing', this._clearTimeout);\n        this.element.removeEventListener('stalled', this._setTimeout);\n        this.element.removeEventListener('error', this._dispatchError);\n        this.element.removeEventListener('loadeddata', this._isDvrEnabled);\n        this.element.textTracks.removeEventListener('addtrack', this._readMediadataInfo);\n    }\n\n    get levels(): Level[] {\n        if (!this.#levelList.length) {\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const level = {\n                    height: 0,\n                    id: `${i}`,\n                    label: levels[i].getAttribute('title') || '',\n                };\n                this.#levelList.push(level);\n            }\n        }\n        return this.#levelList;\n    }\n\n    set level(level: string) {\n        const idx = this.#levelList.findIndex((item) => item.id === level);\n        if (idx > -1) {\n            this.#currentLevel = this.levels[idx];\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const source = levels[i].getAttribute('src');\n                if (source && parseInt(this.#currentLevel.id, 10) === i) {\n                    this.element.src = source;\n                }\n            }\n        }\n    }\n\n    get level(): string {\n        return this.#currentLevel?.id || '-1';\n    }\n\n    set src(media: Source) {\n        this.element.src = media.src;\n    }\n\n    private _isDvrEnabled(): void {\n        const time = this.element.seekable.end(this.element.seekable.length - 1) - this.element.seekable.start(0);\n        if (this.#isStreaming && time > DVR_THRESHOLD && !this.element.getAttribute('op-dvr__enabled')) {\n            this.element.setAttribute('op-dvr__enabled', 'true');\n            const timeEvent = addEvent('timeupdate');\n            this.element.dispatchEvent(timeEvent);\n        }\n    }\n\n    private _readMediadataInfo(e: TrackEvent): void {\n        const target = e;\n        if (target?.track?.kind === 'metadata') {\n            target.track.mode = 'hidden';\n            target.track.addEventListener(\n                'cuechange',\n                (event) => {\n                    const track = event.target as TextTrack;\n                    const cue = track.activeCues ? track.activeCues[0] : null;\n                    if (cue) {\n                        const metaDataEvent = addEvent('metadataready', { detail: cue });\n                        this.element.dispatchEvent(metaDataEvent);\n                    }\n                },\n                EVENT_OPTIONS\n            );\n        }\n    }\n\n    private _setTimeout(): void {\n        if (!this.#started && window !== undefined) {\n            this.#started = true;\n            this.#timer = window.setInterval(() => {\n                if (this.#retryCount >= 30) {\n                    clearInterval(this.#timer);\n                    const message = 'Media download failed part-way due to a network error';\n                    const details = {\n                        detail: {\n                            data: { message, error: 2 },\n                            message,\n                            type: 'HTML5',\n                        },\n                    };\n                    const errorEvent = addEvent('playererror', details);\n                    this.element.dispatchEvent(errorEvent);\n                    this.#retryCount = 0;\n                    this.#started = false;\n                } else {\n                    this.#retryCount++;\n                }\n            }, 1000);\n        }\n    }\n\n    private _clearTimeout(): void {\n        if (this.#timer) {\n            clearInterval(this.#timer);\n            this.#retryCount = 0;\n            this.#started = false;\n        }\n    }\n\n    private _dispatchError(e: Event): void {\n        let defaultMessage;\n        const target = e.target as HTMLMediaElement;\n        const error = target?.error;\n        switch (error?.code) {\n            case error?.MEDIA_ERR_ABORTED:\n                defaultMessage = 'Media playback aborted';\n                break;\n            case error?.MEDIA_ERR_NETWORK:\n                defaultMessage = 'Media download failed part-way due to a network error';\n                break;\n            case error?.MEDIA_ERR_DECODE:\n                defaultMessage = `Media playback aborted due to a corruption problem or because the\n                    media used features your browser did not support.`;\n                break;\n            case error?.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                defaultMessage = `Media could not be loaded, either because the server or network failed\n                    or because the format is not supported.`;\n                break;\n            default:\n                defaultMessage = 'Unknown error occurred.';\n                break;\n        }\n        const details = {\n            detail: {\n                data: { ...e, message: defaultMessage, error: error?.code },\n                message: defaultMessage,\n                type: 'HTML5',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.element.dispatchEvent(errorEvent);\n    }\n}\n\nexport default HTML5Media;\n","import { CustomMedia, Level, PlayerLayers, PlayerOptions, Source } from './interfaces';\nimport DashMedia from './media/dash';\nimport FlvMedia from './media/flv';\nimport HlsMedia from './media/hls';\nimport HTML5Media from './media/html5';\nimport * as source from './utils/media';\n\nclass Media {\n    #element: HTMLMediaElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #media: HTML5Media | HlsMedia | DashMedia | any;\n\n    #files: Source[];\n\n    #promisePlay: Promise<void>;\n\n    #options: PlayerOptions;\n\n    #autoplay: boolean;\n\n    #mediaLoaded = false;\n\n    #customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    #currentSrc: Source;\n\n    constructor(element: HTMLMediaElement, options: PlayerOptions, autoplay: boolean, customMedia: CustomMedia) {\n        this.#element = element;\n        this.#options = options;\n        this.#files = this._getMediaFiles();\n        this.#customMedia = customMedia;\n        this.#autoplay = autoplay;\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return this.#media.canPlayType(mimeType);\n    }\n\n    async load(): Promise<void> {\n        if (this.#mediaLoaded) {\n            return;\n        }\n\n        this.#mediaLoaded = true;\n\n        if (!this.#files.length) {\n            throw new TypeError('Media not set');\n        }\n\n        // Remove previous media if any is detected and it's different from current one\n        if (this.#media && typeof this.#media.destroy === 'function') {\n            const sameMedia = this.#files.length === 1 && this.#files[0].src === this.#media.media.src;\n            if (!sameMedia) {\n                this.#media.destroy();\n            }\n        }\n\n        // Loop until first playable source is found\n        this.#files.some((media) => {\n            try {\n                this.#media = this._invoke(media);\n            } catch (e) {\n                this.#media = new HTML5Media(this.#element, media);\n            }\n\n            return this.#media.canPlayType(media.type);\n        });\n\n        try {\n            if (this.#media === null) {\n                throw new TypeError('Media cannot be played with any valid media type');\n            }\n\n            await this.#media.promise;\n            this.#media.load();\n        } catch (e) {\n            // destroy media\n            if (this.#media) {\n                this.#media.destroy();\n            }\n            throw e;\n        }\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async play(): Promise<void> {\n        if (!this.#mediaLoaded) {\n            await this.load();\n            this.#mediaLoaded = false;\n        } else {\n            await this.#media.promise;\n        }\n        this.#promisePlay = this.#media.play();\n        return this.#promisePlay;\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async pause(): Promise<void> {\n        if (this.#promisePlay !== undefined) {\n            await this.#promisePlay;\n        }\n        this.#media.pause();\n    }\n\n    destroy(): void {\n        if (this.#media) {\n            this.#media.destroy();\n        }\n    }\n\n    set src(media) {\n        if (typeof media === 'string') {\n            this.#files.push({\n                src: media,\n                type: source.predictMimeType(media, this.#element),\n            });\n        } else if (Array.isArray(media)) {\n            this.#files = media;\n        } else if (typeof media === 'object') {\n            this.#files.push(media);\n        }\n\n        // Remove files without source\n        this.#files = this.#files.filter((file) => file.src);\n\n        if (this.#files.length > 0) {\n            const [file] = this.#files;\n            // Save copy of original file to restore it when player is destroyed\n            if (this.#element.src) {\n                this.#element.setAttribute('data-op-file', this.#files[0].src);\n            }\n\n            this.#element.src = file.src;\n            this.#currentSrc = file;\n            if (this.#media) {\n                this.#media.src = file;\n            }\n        } else {\n            this.#element.src = '';\n        }\n    }\n\n    get src(): Source[] {\n        return this.#files;\n    }\n\n    get current(): Source {\n        return this.#currentSrc;\n    }\n\n    set mediaFiles(sources: Source[]) {\n        this.#files = sources;\n    }\n\n    get mediaFiles(): Source[] {\n        return this.#files;\n    }\n\n    set volume(value: number) {\n        if (this.#media) {\n            this.#media.volume = value;\n        }\n    }\n\n    get volume(): number {\n        return this.#media ? this.#media.volume : this.#element.volume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#media) {\n            this.#media.muted = value;\n        }\n    }\n\n    get muted(): boolean {\n        return this.#media ? this.#media.muted : this.#element.muted;\n    }\n\n    set playbackRate(value) {\n        if (this.#media) {\n            this.#media.playbackRate = value;\n        }\n    }\n\n    get playbackRate(): number {\n        return this.#media ? this.#media.playbackRate : this.#element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value) {\n        if (this.#media) {\n            this.#media.defaultPlaybackRate = value;\n        }\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.#media ? this.#media.defaultPlaybackRate : this.#element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        if (this.#media) {\n            this.#media.currentTime = value;\n        }\n    }\n\n    get currentTime(): number {\n        return this.#media ? this.#media.currentTime : this.#element.currentTime;\n    }\n\n    get duration(): number {\n        const duration = this.#media ? this.#media.duration : this.#element.duration;\n        // To seek backwards in a live streaming (mobile devices)\n        if (duration === Infinity && this.#element.seekable && this.#element.seekable.length) {\n            return this.#element.seekable.end(0);\n        }\n        return duration;\n    }\n\n    get paused(): boolean {\n        return this.#media ? this.#media.paused : this.#element.paused;\n    }\n\n    get ended(): boolean {\n        return this.#media ? this.#media.ended : this.#element.ended;\n    }\n\n    set loaded(loaded: boolean) {\n        this.#mediaLoaded = loaded;\n    }\n\n    get loaded(): boolean {\n        return this.#mediaLoaded;\n    }\n\n    set level(value: number | string | Level) {\n        if (this.#media) {\n            this.#media.level = value;\n        }\n    }\n\n    get level(): number | string | Level {\n        return this.#media ? this.#media.level : -1;\n    }\n\n    get levels(): Level[] {\n        return this.#media ? this.#media.levels : [];\n    }\n\n    get instance(): Media | null {\n        return this.#media ? this.#media.instance : null;\n    }\n\n    private _getMediaFiles(): Source[] {\n        const mediaFiles: Source[] = [];\n        const sourceTags = this.#element.querySelectorAll('source');\n        const nodeSource = this.#element.src;\n\n        // Consider if node contains the `src` and `type` attributes\n        if (nodeSource) {\n            mediaFiles.push({\n                src: nodeSource,\n                type: this.#element.getAttribute('type') || source.predictMimeType(nodeSource, this.#element),\n            });\n        }\n\n        // test <source> types to see if they are usable\n        for (let i = 0, total = sourceTags.length; i < total; i++) {\n            const item = sourceTags[i];\n            const { src } = item;\n            mediaFiles.push({\n                src,\n                type: item.getAttribute('type') || source.predictMimeType(src, this.#element),\n            });\n\n            // If tag has the attribute `preload` set as `none`, the current media will\n            // be the first one on the list of sources\n            if (i === 0) {\n                const [file] = mediaFiles;\n                this.#currentSrc = file;\n            }\n        }\n\n        if (!mediaFiles.length) {\n            mediaFiles.push({\n                src: '',\n                type: source.predictMimeType('', this.#element),\n            });\n        }\n\n        return mediaFiles;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _invoke(media: Source): HlsMedia | DashMedia | HTML5Media | any {\n        const playHLSNatively =\n            this.#element.canPlayType('application/vnd.apple.mpegurl') ||\n            this.#element.canPlayType('application/x-mpegURL');\n\n        this.#currentSrc = media;\n\n        const { layers } = this.#options.controls || {};\n\n        let activeLevels = false;\n        if (layers) {\n            Object.keys(layers).forEach((layer) => {\n                const current = layers ? layers[layer as keyof PlayerLayers] : null;\n                if (current && current.indexOf('levels') > -1) {\n                    activeLevels = true;\n                }\n            });\n        }\n\n        if (Object.keys(this.#customMedia.media).length) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let customRef: any;\n            this.#customMedia.rules.forEach((rule) => {\n                const type = rule(media.src);\n                if (type) {\n                    const customMedia = this.#customMedia.media[type];\n                    const customOptions = this.#options[this.#customMedia.optionsKey[type]] || undefined;\n                    customRef = customMedia(this.#element, media, this.#autoplay, customOptions);\n                }\n            });\n            if (customRef) {\n                customRef.create();\n                return customRef;\n            }\n            return new HTML5Media(this.#element, media);\n        }\n        if (source.isHlsSource(media)) {\n            if (playHLSNatively && this.#options.forceNative && !activeLevels) {\n                return new HTML5Media(this.#element, media);\n            }\n            const hlsOptions = this.#options?.hls || undefined;\n            return new HlsMedia(this.#element, media, this.#autoplay, hlsOptions);\n        }\n        if (source.isDashSource(media)) {\n            const dashOptions = this.#options?.dash || undefined;\n            return new DashMedia(this.#element, media, dashOptions);\n        }\n        if (source.isFlvSource(media)) {\n            const flvOptions = this.#options?.flv || {\n                debug: false,\n                type: 'flv',\n                url: media.src,\n            };\n            return new FlvMedia(this.#element, media, flvOptions);\n        }\n\n        return new HTML5Media(this.#element, media);\n    }\n}\n\nexport default Media;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AdsOptions, Source } from '../interfaces';\nimport Media from '../media';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from '../utils/constants';\nimport { addEvent, isAudio, isVideo, isXml, loadScript } from '../utils/general';\n\ndeclare const google: any;\n\n// @see https://developers.google.com/interactive-media-ads/\nclass Ads {\n    loadPromise: unknown;\n\n    loadedAd = false;\n\n    #ended = false;\n\n    #done = false;\n\n    #active = false;\n\n    #started = false;\n\n    #intervalTimer = 0;\n\n    #volume: number;\n\n    #muted = false;\n\n    #duration = 0;\n\n    #currentTime = 0;\n\n    // @see https://tinyurl.com/ybjas4ut\n    #manager: any = null;\n\n    #player: Player;\n\n    #media: Media;\n\n    #element: HTMLMediaElement;\n\n    #events: string[] = [];\n\n    #ads: string | string[];\n\n    #promise: Promise<void>;\n\n    // @see https://tinyurl.com/ycwp4ufd\n    #loader: any;\n\n    #container?: HTMLDivElement;\n\n    #customClickContainer?: HTMLDivElement;\n\n    #skipElement?: HTMLElement;\n\n    // @see https://tinyurl.com/ya3zksso\n    #displayContainer: any;\n\n    // @see https://tinyurl.com/ya8bxjf4\n    #request: any;\n\n    #autostart = false;\n\n    #autostartMuted = false;\n\n    #playTriggered = false;\n\n    #options: AdsOptions;\n\n    #currentIndex = 0;\n\n    #originalVolume: number;\n\n    #preloadContent: any;\n\n    #lastTimePaused = 0;\n\n    #mediaSources: Source[] = [];\n\n    #mediaStarted = false;\n\n    #adEvent: any = null;\n\n    constructor(\n        player: Player,\n        ads: string | string[],\n        autostart?: boolean,\n        autostartMuted?: boolean,\n        options?: AdsOptions\n    ) {\n        const defaultOpts: AdsOptions = {\n            autoPlayAdBreaks: true,\n            customClick: {\n                enabled: false,\n                label: 'Click here for more info',\n            },\n            audioSkip: {\n                enabled: true,\n                label: 'Skip Ad',\n                remainingLabel: 'Skip in [[secs]] seconds',\n            },\n            debug: false,\n            enablePreloading: false,\n            language: 'en',\n            loop: false,\n            numRedirects: 4,\n            publisherId: undefined,\n            sdkPath: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n            sessionId: undefined,\n            src: [],\n            vpaidMode: 'enabled',\n        };\n        this.#player = player;\n        this.#ads = ads;\n        this.#media = player.getMedia();\n        this.#element = player.getElement();\n        this.#autostart = autostart || false;\n        this.#muted = player.getElement().muted;\n        this.#autostartMuted = autostartMuted || false;\n        this.#options = { ...defaultOpts, ...options };\n        if (options?.customClick && Object.keys(options.customClick).length) {\n            this.#options.customClick = { ...defaultOpts.customClick, ...options.customClick };\n        }\n        this.#playTriggered = false;\n        this.#originalVolume = this.#element.volume;\n        this.#volume = this.#originalVolume;\n\n        const path = this.#options?.debug\n            ? this.#options?.sdkPath?.replace(/(\\.js$)/, '_debug.js')\n            : this.#options?.sdkPath;\n\n        this.load = this.load.bind(this);\n        this.resizeAds = this.resizeAds.bind(this);\n        this._handleClickInContainer = this._handleClickInContainer.bind(this);\n        this._handleSkipAds = this._handleSkipAds.bind(this);\n        this._loaded = this._loaded.bind(this);\n        this._error = this._error.bind(this);\n        this._assign = this._assign.bind(this);\n        this._contentLoadedAction = this._contentLoadedAction.bind(this);\n        this._loadedMetadataHandler = this._loadedMetadataHandler.bind(this);\n        this._contentEndedListener = this._contentEndedListener.bind(this);\n        this._handleResizeAds = this._handleResizeAds.bind(this);\n        this._onContentPauseRequested = this._onContentPauseRequested.bind(this);\n        this._onContentResumeRequested = this._onContentResumeRequested.bind(this);\n\n        this.#promise =\n            path && (typeof google === 'undefined' || typeof google.ima === 'undefined')\n                ? loadScript(path)\n                : new Promise((resolve) => {\n                      resolve();\n                  });\n\n        this.#promise\n            .then(() => {\n                this.load();\n            })\n            .catch((error) => {\n                let message = 'Ad script could not be loaded; please check if you have an AdBlock ';\n                message += 'turned on, or if you provided a valid URL is correct';\n                console.error(`Ad error: ${message}.`);\n\n                const details = {\n                    detail: {\n                        data: error,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            });\n    }\n\n    load(force = false): void {\n        if (\n            typeof google === 'undefined' ||\n            !google.ima ||\n            (!force && this.loadedAd && this.#options.autoPlayAdBreaks)\n        ) {\n            return;\n        }\n\n        // If we have set `autoPlayAdBreaks` to false and haven't set the force flag, don't load ads yet\n        if (!this.#options.autoPlayAdBreaks && !force) {\n            return;\n        }\n\n        this.loadedAd = true;\n\n        const existingContainer = this.#player.getContainer().querySelector('.op-ads');\n        if (existingContainer && existingContainer.parentNode) {\n            existingContainer.parentNode.removeChild(existingContainer);\n        }\n\n        this.#started = true;\n        this.#container = document.createElement('div');\n        this.#container.className = 'op-ads';\n        this.#container.tabIndex = -1;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.#container, this.#element.nextSibling);\n        }\n        this.#container.addEventListener('click', this._handleClickInContainer);\n\n        if (this.#options.customClick?.enabled) {\n            this.#customClickContainer = document.createElement('div');\n            this.#customClickContainer.className = 'op-ads__click-container';\n            this.#customClickContainer.innerHTML = `<div class=\"op-ads__click-label\">${\n                this.#options.customClick.label\n            }</div>`;\n            if (this.#element.parentElement) {\n                this.#element.parentElement.insertBefore(this.#customClickContainer, this.#element.nextSibling);\n            }\n        }\n\n        if (isAudio(this.#element) && this.#options.audioSkip?.enabled) {\n            if (this.#options.audioSkip?.element) {\n                const { element } = this.#options.audioSkip || {};\n                if (typeof element === 'string') {\n                    const target = document.getElementById(element);\n                    if (target) {\n                        this.#skipElement = target;\n                    }\n                } else if (element instanceof HTMLElement) {\n                    this.#skipElement = element;\n                }\n            } else {\n                this.#skipElement = document.createElement('button');\n                this.#skipElement.className = 'op-ads__skip hidden';\n                this.#player.getControls().getContainer().appendChild(this.#skipElement);\n            }\n            if (this.#skipElement) {\n                this.#skipElement.addEventListener('click', this._handleSkipAds, EVENT_OPTIONS);\n            }\n        }\n\n        this.#mediaSources = this.#media.src;\n        const vpaidModeMap: Record<string, unknown> = {\n            disabled: google.ima.ImaSdkSettings.VpaidMode.DISABLED,\n            enabled: google.ima.ImaSdkSettings.VpaidMode.ENABLED,\n            insecure: google.ima.ImaSdkSettings.VpaidMode.INSECURE,\n        };\n\n        google.ima.settings.setVpaidMode(vpaidModeMap[this.#options.vpaidMode || 'enabled']);\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(true);\n        google.ima.settings.setAutoPlayAdBreaks(this.#options.autoPlayAdBreaks);\n        google.ima.settings.setNumRedirects(this.#options.numRedirects);\n        google.ima.settings.setLocale(this.#options.language);\n        if (this.#options.sessionId) {\n            google.ima.settings.setSessionId(this.#options.sessionId);\n        }\n        if (this.#options.publisherId) {\n            google.ima.settings.setPpid(this.#options.publisherId);\n        }\n        google.ima.settings.setPlayerType('openplayerjs');\n        google.ima.settings.setPlayerVersion('3.0.0');\n\n        this.#displayContainer = new google.ima.AdDisplayContainer(\n            this.#container,\n            this.#element,\n            this.#customClickContainer\n        );\n\n        this.#loader = new google.ima.AdsLoader(this.#displayContainer);\n        this.#loader.addEventListener(\n            google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n            this._loaded,\n            EVENT_OPTIONS\n        );\n\n        this.#loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error, EVENT_OPTIONS);\n\n        // Create responsive ad\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this._handleResizeAds, EVENT_OPTIONS);\n        }\n        this.#element.addEventListener('loadedmetadata', this._handleResizeAds, EVENT_OPTIONS);\n\n        // Request Ads automatically if `autoplay` was set\n        if (\n            this.#autostart === true ||\n            this.#autostartMuted === true ||\n            force === true ||\n            this.#options.enablePreloading === true ||\n            this.#playTriggered === true\n        ) {\n            if (!this.#done) {\n                this.#done = true;\n                this.#displayContainer.initialize();\n            }\n            this._requestAds();\n        }\n    }\n\n    async play(): Promise<void> {\n        if (!this.#done) {\n            this.#playTriggered = true;\n            this._initNotDoneAds();\n            return;\n        }\n\n        if (this.#manager) {\n            try {\n                // No timer interval and no Ad active means it's a potential initial ad play\n                if (!this.#intervalTimer && this.#active === false) {\n                    this.#manager.start();\n                } else {\n                    this.#manager.resume();\n                }\n                this.#active = true;\n                const e = addEvent('play');\n                this.#element.dispatchEvent(e);\n            } catch (err) {\n                this._resumeMedia();\n            }\n        }\n    }\n\n    pause(): void {\n        if (this.#manager) {\n            this.#active = false;\n            this.#manager.pause();\n            const e = addEvent('pause');\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    destroy(): void {\n        if (this.#manager) {\n            this.#manager.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n\n            if (this.#events) {\n                this.#events.forEach((event) => {\n                    this.#manager.removeEventListener(event, this._assign);\n                });\n            }\n        }\n\n        this.#events = [];\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.removeEventListener(event, mouseEvents[event]);\n            }\n        });\n\n        if (this.#loader) {\n            this.#loader.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n            this.#loader.removeEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this._loaded);\n        }\n\n        const destroy = !Array.isArray(this.#ads) || this.#currentIndex > this.#ads.length;\n        if (this.#manager && destroy) {\n            this.#manager.destroy();\n        }\n\n        if (this.#options.customClick?.enabled && this.#customClickContainer) {\n            this.#customClickContainer.remove();\n        }\n\n        if (this.#options.audioSkip?.enabled && this.#skipElement) {\n            this.#skipElement.removeEventListener('click', this._handleSkipAds);\n            this.#skipElement.remove();\n        }\n\n        if (IS_IOS || IS_ANDROID) {\n            this.#element.removeEventListener('loadedmetadata', this._contentLoadedAction);\n        }\n        this.#element.removeEventListener('loadedmetadata', this._handleResizeAds);\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this._handleResizeAds);\n        }\n\n        if (this.#container) {\n            this.#container.removeEventListener('click', this._handleClickInContainer);\n            this.#container.remove();\n        }\n        this.loadPromise = null;\n        this.loadedAd = false;\n        this.#done = false;\n        this.#playTriggered = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        this.#adEvent = null;\n    }\n\n    resizeAds(width?: number, height?: number): void {\n        if (this.#manager) {\n            const target = this.#element;\n            const mode =\n                target.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL;\n\n            let formattedWidth = width;\n            const percentageWidth = width ? width.toString() : '';\n            if (width && percentageWidth.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedWidth = this.#element.parentElement.offsetWidth * (parseInt(percentageWidth, 10) / 100);\n                }\n            }\n\n            let formattedHeight = height;\n            const percentageHeight = height ? height.toString() : '';\n            if (height && percentageHeight.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedHeight = this.#element.parentElement.offsetHeight * (parseInt(percentageHeight, 10) / 100);\n                }\n            }\n\n            let timeout;\n\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame(() => {\n                    this.#manager.resize(\n                        formattedWidth || target.offsetWidth,\n                        formattedHeight || target.offsetHeight,\n                        mode\n                    );\n                });\n            }\n        }\n    }\n\n    getAdsManager(): unknown {\n        return this.#manager;\n    }\n\n    getAdsLoader(): any {\n        return this.#loader;\n    }\n\n    started(): boolean {\n        return this.#started;\n    }\n\n    set src(source: string | string[]) {\n        this.#ads = source;\n    }\n\n    set isDone(value: boolean) {\n        this.#done = value;\n    }\n\n    set playRequested(value: boolean) {\n        this.#playTriggered = value;\n    }\n\n    set volume(value: number) {\n        if (this.#manager) {\n            this.#volume = value;\n            this.#manager.setVolume(value);\n            this._setMediaVolume(value);\n            this.#muted = value === 0;\n        }\n    }\n\n    get volume(): number {\n        return this.#manager ? this.#manager.getVolume() : this.#originalVolume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#manager) {\n            if (value) {\n                this.#manager.setVolume(0);\n                this.#muted = true;\n                this._setMediaVolume(0);\n            } else {\n                this.#manager.setVolume(this.#volume);\n                this.#muted = false;\n                this._setMediaVolume(this.#volume);\n            }\n        }\n    }\n\n    get muted(): boolean {\n        return this.#muted;\n    }\n\n    set currentTime(value: number) {\n        this.#currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.#currentTime;\n    }\n\n    get duration(): number {\n        return this.#duration;\n    }\n\n    get paused(): boolean {\n        return !this.#active;\n    }\n\n    get ended(): boolean {\n        return this.#ended;\n    }\n\n    private _assign(event: any): void {\n        const ad = event.getAd();\n        if (ad) {\n            this.#adEvent = ad;\n        }\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                if (!ad.isLinear()) {\n                    this._onContentResumeRequested();\n                } else {\n                    if (IS_IPHONE && isVideo(this.#element)) {\n                        this.#element.controls = false;\n                    }\n                    this.#duration = ad.getDuration();\n                    this.#currentTime = ad.getDuration();\n                    if (!this.#mediaStarted && !IS_IOS && !IS_ANDROID) {\n                        const waitingEvent = addEvent('waiting');\n                        this.#element.dispatchEvent(waitingEvent);\n\n                        const loadedEvent = addEvent('loadedmetadata');\n                        this.#element.dispatchEvent(loadedEvent);\n\n                        this.resizeAds();\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.STARTED:\n                if (ad.isLinear()) {\n                    if (\n                        this.#element.parentElement &&\n                        !this.#element.parentElement.classList.contains('op-ads--active')\n                    ) {\n                        this.#element.parentElement.classList.add('op-ads--active');\n                    }\n\n                    if (!this.#media.paused) {\n                        this.#media.pause();\n                    }\n                    this.#active = true;\n                    const playEvent = addEvent('play');\n                    this.#element.dispatchEvent(playEvent);\n                    let resized;\n\n                    if (!resized) {\n                        this.resizeAds();\n                        resized = true;\n                    }\n\n                    if (this.#media.ended) {\n                        this.#ended = false;\n                        const endEvent = addEvent('adsmediaended');\n                        this.#element.dispatchEvent(endEvent);\n                    }\n\n                    if (typeof window !== 'undefined') {\n                        this.#intervalTimer = window.setInterval(() => {\n                            if (this.#active === true) {\n                                this.#currentTime = Math.round(this.#manager.getRemainingTime());\n                                const timeEvent = addEvent('timeupdate');\n                                this.#element.dispatchEvent(timeEvent);\n                            }\n                        }, 350);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.SKIPPED:\n                if (ad.isLinear()) {\n                    if (event.type === google.ima.AdEvent.Type.SKIPPED) {\n                        const skipEvent = addEvent('adsskipped');\n                        this.#element.dispatchEvent(skipEvent);\n                    }\n\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.#active = false;\n                    clearInterval(this.#intervalTimer);\n                }\n                break;\n            case google.ima.AdEvent.Type.VOLUME_CHANGED:\n                this._setMediaVolume(this.volume);\n                break;\n            case google.ima.AdEvent.Type.VOLUME_MUTED:\n                if (ad.isLinear()) {\n                    const volumeEvent = addEvent('volumechange');\n                    this.#element.dispatchEvent(volumeEvent);\n                }\n                break;\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                if (ad.isLinear()) {\n                    this.#active = false;\n                    this.#ended = true;\n                    this.#intervalTimer = 0;\n                    this.#muted = false;\n                    this.#started = false;\n                    this.#adEvent = null;\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.destroy();\n                    if (this.#element.currentTime >= this.#element.duration) {\n                        const endedEvent = addEvent('ended');\n                        this.#element.dispatchEvent(endedEvent);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.CLICK:\n                const pauseEvent = addEvent('pause');\n                this.#element.dispatchEvent(pauseEvent);\n                break;\n            case google.ima.AdEvent.Type.AD_BREAK_READY:\n                if (!this.#options.autoPlayAdBreaks) {\n                    this.play();\n                }\n                break;\n            case google.ima.AdEvent.Type.AD_PROGRESS:\n                const progressData = event.getAdData();\n                const offset = this.#adEvent ? this.#adEvent.getSkipTimeOffset() : -1;\n                if (this.#skipElement) {\n                    if (offset !== -1) {\n                        const canSkip = this.#manager.getAdSkippableState();\n                        const remainingTime = Math.ceil(offset - progressData.currentTime);\n                        this.#skipElement.classList.remove('hidden');\n                        if (canSkip) {\n                            this.#skipElement.textContent = this.#options.audioSkip?.label || '';\n                            this.#skipElement.classList.remove('disabled');\n                        } else {\n                            this.#skipElement.textContent =\n                                this.#options.audioSkip?.remainingLabel.replace('[[secs]]', remainingTime.toString()) ||\n                                '';\n                            this.#skipElement.classList.add('disabled');\n                        }\n                    } else {\n                        this.#skipElement.classList.add('hidden');\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        // Assign events prefixed with `ads` to main element so user\n        // can listen to these events, except if the system detects a non-fatal error\n        if (event.type === google.ima.AdEvent.Type.LOG) {\n            const adData = event.getAdData();\n            if (adData.adError) {\n                const message = adData.adError.getMessage();\n                console.warn(`Ad warning: Non-fatal error occurred: ${message}`);\n                const details = {\n                    detail: {\n                        data: adData.adError,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            }\n        } else {\n            const e = addEvent(`ads${event.type}`);\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.ErrorCode\n    private _error(event: any): void {\n        const error = event.getError();\n        const details = {\n            detail: {\n                data: error,\n                message: error.toString(),\n                type: 'Ads',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.#element.dispatchEvent(errorEvent);\n\n        // @see https://support.google.com/admanager/answer/4442429?hl=en\n        const fatalErrorCodes = [\n            100, 101, 102, 300, 301, 302, 303, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 500, 501, 502, 503,\n            900, 901, 1005,\n        ];\n\n        if (Array.isArray(this.#ads) && this.#ads.length > 1 && this.#currentIndex < this.#ads.length - 1) {\n            this.#currentIndex++;\n            this.destroy();\n            this.#started = true;\n            this.#playTriggered = true;\n            this.load(true);\n            console.warn(`Ad warning: ${error.toString()}`);\n        } else {\n            // Unless there's a fatal error, do not destroy the Ads manager\n            if (fatalErrorCodes.indexOf(error.getErrorCode()) > -1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                console.error(`Ad error: ${error.toString()}`);\n            } else {\n                console.warn(`Ad warning: ${error.toString()}`);\n            }\n            this.#adEvent = null;\n            if (this.#autostart === true || this.#autostartMuted === true || this.#started === true) {\n                this.#active = false;\n                // Sometimes, due to pre-fetch issues, Ads could report an error, but the SDK is able to\n                // play Ads, so check if src was set to determine what action to take\n                this._resumeMedia();\n            }\n        }\n    }\n\n    private _loaded(managerLoadedEvent: any): void {\n        const adsRenderingSettings = new google.ima.AdsRenderingSettings();\n        adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = false;\n        adsRenderingSettings.enablePreloading = this.#options.enablePreloading;\n        // Get the ads manager.\n        this.#manager = managerLoadedEvent.getAdsManager(this.#element, adsRenderingSettings);\n        this._start(this.#manager);\n        this.loadPromise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    private _start(manager: any): void {\n        if (this.#customClickContainer && manager.isCustomClickTrackingUsed()) {\n            this.#customClickContainer.classList.add('op-ads__click-container--visible');\n        }\n        // Add listeners to the required events.\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n            this._onContentPauseRequested,\n            EVENT_OPTIONS\n        );\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n            this._onContentResumeRequested,\n            EVENT_OPTIONS\n        );\n\n        this.#events = [\n            google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n            google.ima.AdEvent.Type.CLICK,\n            google.ima.AdEvent.Type.VIDEO_CLICKED,\n            google.ima.AdEvent.Type.VIDEO_ICON_CLICKED,\n            google.ima.AdEvent.Type.AD_PROGRESS,\n            google.ima.AdEvent.Type.AD_BUFFERING,\n            google.ima.AdEvent.Type.IMPRESSION,\n            google.ima.AdEvent.Type.DURATION_CHANGE,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.LINEAR_CHANGED,\n            google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n            google.ima.AdEvent.Type.AD_METADATA,\n            google.ima.AdEvent.Type.INTERACTION,\n            google.ima.AdEvent.Type.COMPLETE,\n            google.ima.AdEvent.Type.FIRST_QUARTILE,\n            google.ima.AdEvent.Type.LOADED,\n            google.ima.AdEvent.Type.MIDPOINT,\n            google.ima.AdEvent.Type.PAUSED,\n            google.ima.AdEvent.Type.RESUMED,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.STARTED,\n            google.ima.AdEvent.Type.THIRD_QUARTILE,\n            google.ima.AdEvent.Type.SKIPPED,\n            google.ima.AdEvent.Type.VOLUME_CHANGED,\n            google.ima.AdEvent.Type.VOLUME_MUTED,\n            google.ima.AdEvent.Type.LOG,\n        ];\n\n        if (!this.#options.autoPlayAdBreaks) {\n            // Add it to the events array so it gets removed onDestroy\n            this.#events.push(google.ima.AdEvent.Type.AD_BREAK_READY);\n        }\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.addEventListener(event, mouseEvents[event], EVENT_OPTIONS);\n            }\n        });\n        this.#events.forEach((event) => {\n            manager.addEventListener(event, this._assign, EVENT_OPTIONS);\n        });\n\n        if (this.#autostart === true || this.#autostartMuted === true || this.#playTriggered === true) {\n            this.#playTriggered = false;\n            if (!this.#done) {\n                this._initNotDoneAds();\n                return;\n            }\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n            manager.start();\n            const e = addEvent('play');\n            this.#element.dispatchEvent(e);\n        } else if (this.#options.enablePreloading === true) {\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n        }\n    }\n\n    private _initNotDoneAds(): void {\n        if (this.#displayContainer) {\n            this.#done = true;\n            this.#displayContainer.initialize();\n\n            if (IS_IOS || IS_ANDROID) {\n                this.#preloadContent = this._contentLoadedAction;\n                this.#element.addEventListener('loadedmetadata', this._contentLoadedAction, EVENT_OPTIONS);\n                this.#element.load();\n            } else {\n                this._contentLoadedAction();\n            }\n        } else {\n            this.load();\n            this.loadedAd = false;\n        }\n    }\n\n    private _contentEndedListener(): void {\n        this.#ended = true;\n        this.#active = false;\n        this.#started = false;\n        this.#loader.contentComplete();\n    }\n\n    private _onContentPauseRequested(): void {\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        this.#lastTimePaused = this.#media.currentTime;\n\n        if (this.#started) {\n            this.#media.pause();\n        } else {\n            this.#started = true;\n        }\n        const e = addEvent('play');\n        this.#element.dispatchEvent(e);\n    }\n\n    private _onContentResumeRequested(): void {\n        this.#element.addEventListener('ended', this._contentEndedListener, EVENT_OPTIONS);\n        this.#element.addEventListener('loadedmetadata', this._loadedMetadataHandler, EVENT_OPTIONS);\n        if (IS_IOS || IS_ANDROID) {\n            this.#media.src = this.#mediaSources;\n            this.#media.load();\n            this._prepareMedia();\n            if (this.#element.parentElement) {\n                this.#element.parentElement.classList.add('op-ads--active');\n            }\n        } else {\n            const event = addEvent('loadedmetadata');\n            this.#element.dispatchEvent(event);\n        }\n    }\n\n    private _loadedMetadataHandler(): void {\n        if (Array.isArray(this.#ads)) {\n            this.#currentIndex++;\n            if (this.#currentIndex <= this.#ads.length - 1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                this.#loader.contentComplete();\n                this.#playTriggered = true;\n                this.#started = true;\n                this.#done = false;\n                this.load(true);\n            } else {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else if (this.#element.seekable.length) {\n            if (this.#element.seekable.end(0) > this.#lastTimePaused) {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else {\n            setTimeout(this._loadedMetadataHandler, 100);\n        }\n    }\n\n    private _resumeMedia(): void {\n        this.#intervalTimer = 0;\n        this.#muted = false;\n        this.#started = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.classList.remove('op-ads--active');\n        }\n\n        if (this.#media.ended) {\n            const e = addEvent('ended');\n            this.#element.dispatchEvent(e);\n        } else {\n            try {\n                this.#media.play();\n                setTimeout(() => {\n                    const e = addEvent('play');\n                    this.#element.dispatchEvent(e);\n                }, 50);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    }\n\n    private _requestAds(): void {\n        this.#request = new google.ima.AdsRequest();\n        const ads = Array.isArray(this.#ads) ? this.#ads[this.#currentIndex] : this.#ads;\n\n        if (isXml(ads)) {\n            this.#request.adsResponse = ads;\n        } else {\n            this.#request.adTagUrl = ads;\n        }\n\n        const width = this.#element.parentElement ? this.#element.parentElement.offsetWidth : 0;\n        const height = this.#element.parentElement ? this.#element.parentElement.offsetHeight : 0;\n        this.#request.linearAdSlotWidth = width;\n        this.#request.linearAdSlotHeight = height;\n        this.#request.nonLinearAdSlotWidth = width;\n        this.#request.nonLinearAdSlotHeight = height / 3;\n        this.#request.setAdWillAutoPlay(this.#autostart);\n        this.#request.setAdWillPlayMuted(this.#autostartMuted);\n        this.#loader.requestAds(this.#request);\n    }\n\n    /**\n     * Internal callback to request Ads.\n     *\n     * @memberof Ads\n     */\n    private _contentLoadedAction(): void {\n        if (this.#preloadContent) {\n            this.#element.removeEventListener('loadedmetadata', this.#preloadContent);\n            this.#preloadContent = null;\n        }\n        this._requestAds();\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/faq#8\n    private _resetAdsAfterManualBreak(): void {\n        if (this.#manager) {\n            this.#manager.destroy();\n        }\n        this.#loader.contentComplete();\n        this.#done = false;\n        this.#playTriggered = true;\n    }\n\n    private _prepareMedia(): void {\n        this.#media.currentTime = this.#lastTimePaused;\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this._resumeMedia();\n    }\n\n    private _setMediaVolume(volume: number): void {\n        this.#media.volume = volume;\n        this.#media.muted = volume === 0;\n    }\n\n    private _handleClickInContainer(): void {\n        if (this.#media.paused) {\n            const e = addEvent('paused');\n            this.#element.dispatchEvent(e);\n            this.pause();\n        }\n    }\n\n    private _handleResizeAds(): void {\n        this.resizeAds();\n    }\n\n    private _handleSkipAds(): void {\n        this.#manager.skip();\n    }\n}\n\nexport default Ads;\n","import Controls from './controls';\nimport Fullscreen from './controls/fullscreen';\nimport {\n    CustomMedia,\n    ElementItem,\n    EventsList,\n    Languages,\n    PlayerLabels,\n    PlayerOptions,\n    Source,\n    Track,\n} from './interfaces';\nimport Media from './media';\nimport Ads from './media/ads';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\nimport { isAutoplaySupported, predictMimeType } from './utils/media';\n\ninterface P {\n    loader: HTMLSpanElement;\n    playBtn: HTMLButtonElement;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any;\n    init(): Promise<void>;\n    load(): Promise<void> | void;\n    play(): Promise<void>;\n    pause(): void;\n    destroy(): void;\n    getContainer(): HTMLElement;\n    getControls(): Controls;\n    getCustomControls(): ElementItem[];\n    getElement(): HTMLMediaElement;\n    getEvents(): EventsList;\n    getOptions(): PlayerOptions;\n    activeElement(): Ads | Media;\n    isMedia(): boolean;\n    isAd(): boolean;\n    getMedia(): Media;\n    getAd(): Ads;\n    addCaptions(args: Track): void;\n    addControl(args: ElementItem): void;\n    removeControl(controlName: string): void;\n    _prepareMedia(): Promise<void>;\n    enableDefaultPlayer(): void;\n    loadAd(src: string | string[]): Promise<void>;\n}\n\nclass Player {\n    static instances: { [id: string]: P } = {};\n\n    static customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    static init(): void {\n        Player.instances = {};\n        const targets = document.querySelectorAll('video.op-player, audio.op-player');\n        for (let i = 0, total = targets.length; i < total; i++) {\n            const target = targets[i] as HTMLMediaElement;\n            const settings = target.getAttribute('data-op-settings');\n            const options = settings ? JSON.parse(settings) : {};\n            const player = new Player(target, options);\n            player.init();\n        }\n    }\n\n    static addMedia(name: string, mimeType: string, valid: (url: string) => string, media: Source): void {\n        Player.customMedia.media[mimeType] = media;\n        Player.customMedia.optionsKey[mimeType] = name;\n        Player.customMedia.rules.push(valid);\n    }\n\n    loader: HTMLSpanElement;\n\n    playBtn: HTMLButtonElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any = null;\n\n    #controls: Controls;\n\n    #adsInstance: Ads;\n\n    #uid = '';\n\n    #element: HTMLMediaElement;\n\n    #ads?: string | string[];\n\n    #media: Media;\n\n    #events: EventsList = {};\n\n    #autoplay = false;\n\n    #volume: number;\n\n    #canAutoplay = false;\n\n    #canAutoplayMuted = false;\n\n    #processedAutoplay = false;\n\n    #options: PlayerOptions;\n\n    #customElements: ElementItem[] = [];\n\n    #fullscreen: Fullscreen;\n\n    #defaultOptions: PlayerOptions = {\n        controls: {\n            alwaysVisible: false,\n            layers: {\n                left: ['play', 'time', 'volume'],\n                middle: ['progress'],\n                right: ['captions', 'settings', 'fullscreen'],\n            },\n        },\n        defaultLevel: undefined,\n        detachMenus: false,\n        forceNative: false,\n        height: 0,\n        hidePlayBtnTimer: 350,\n        labels: {\n            auto: 'Auto',\n            captions: 'CC/Subtitles',\n            click: 'Click to unmute',\n            fullscreen: 'Fullscreen',\n            lang: {\n                en: 'English',\n            },\n            levels: 'Quality Levels',\n            live: 'Live Broadcast',\n            mediaLevels: 'Change Quality',\n            mute: 'Mute',\n            off: 'Off',\n            pause: 'Pause',\n            play: 'Play',\n            progressRail: 'Time Rail',\n            progressSlider: 'Time Slider',\n            settings: 'Player Settings',\n            speed: 'Speed',\n            speedNormal: 'Normal',\n            tap: 'Tap to unmute',\n            toggleCaptions: 'Toggle Captions',\n            unmute: 'Unmute',\n            volume: 'Volume',\n            volumeControl: 'Volume Control',\n            volumeSlider: 'Volume Slider',\n        },\n        live: {\n            showLabel: true,\n            showProgress: false,\n        },\n        media: {\n            pauseOnClick: false,\n        },\n        mode: 'responsive', // or `fill` or `fit`\n        onError: (e: unknown) => console.error(e),\n        pauseOthers: true,\n        progress: {\n            allowRewind: true,\n            allowSkip: true,\n            duration: 0,\n            showCurrentTimeOnly: false,\n        },\n        showLoaderOnInit: false,\n        startTime: 0,\n        startVolume: 1,\n        step: 0,\n        useDeviceVolume: true,\n        width: 0,\n    };\n\n    constructor(element: HTMLMediaElement | string, options?: PlayerOptions) {\n        this.#element =\n            element instanceof HTMLMediaElement ? element : (document.getElementById(element) as HTMLMediaElement);\n        if (this.#element) {\n            this.#autoplay = this.#element.autoplay || false;\n            if (typeof options !== 'string' && !Array.isArray(options)) {\n                this._mergeOptions(options);\n            }\n            this.#element.volume = this.#options.startVolume || 1;\n\n            if (this.#options.ads && this.#options.ads.src) {\n                this.#ads = this.#options.ads.src;\n            }\n            if ((this.#options?.startTime || 0) > 0) {\n                this.#element.currentTime = this.#options.startTime || 0;\n            }\n            this.#volume = this.#element.volume;\n        }\n        this._autoplay = this._autoplay.bind(this);\n        this._enableKeyBindings = this._enableKeyBindings.bind(this);\n    }\n\n    async init(): Promise<void> {\n        if (this._isValid()) {\n            this._wrapInstance();\n            await this._prepareMedia();\n            this._createPlayButton();\n            this._createUID();\n            this._createControls();\n            this._setEvents();\n            Player.instances[this.id] = this;\n        }\n    }\n\n    async load(): Promise<void> {\n        if (!this.#media) {\n            await this._prepareMedia();\n            return (this.#media as Media).load();\n        }\n        this.#media.loaded = false;\n        return this.isMedia() ? this.#media.load() : undefined;\n    }\n\n    async play(): Promise<void> {\n        if (!this.#media.loaded) {\n            await this.#media.load();\n            this.#media.loaded = true;\n        }\n        if (this.#adsInstance) {\n            this.#adsInstance.playRequested = true;\n            await this.#adsInstance.loadPromise;\n            return this.#adsInstance.play();\n        }\n        return this.#media.play();\n    }\n\n    pause(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n        } else {\n            this.#media.pause();\n        }\n    }\n\n    stop(): void {\n        this.pause();\n\n        if (this.#media) {\n            this.#media.currentTime = 0;\n            this.src = [{ src: '', type: 'video/mp4' }];\n        }\n    }\n\n    destroy(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n            this.#adsInstance.destroy();\n        }\n\n        if (this.#fullscreen) {\n            this.#fullscreen.destroy();\n        }\n\n        const el = this.#element as HTMLMediaElement;\n        if (this.#media) {\n            this.#media.destroy();\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            el.removeEventListener(event, this.#events[event]);\n        });\n\n        this.getContainer().removeEventListener('keydown', this._enableKeyBindings);\n\n        if (this.#autoplay && !this.#processedAutoplay && isVideo(this.#element)) {\n            el.removeEventListener('canplay', this._autoplay);\n        }\n        if (this.#controls) {\n            this.#controls.destroy();\n        }\n\n        if (isVideo(this.#element)) {\n            if (this.playBtn) {\n                this.playBtn.remove();\n            }\n            if (this.loader) {\n                this.loader.remove();\n            }\n        }\n\n        if (this.#options?.onError) {\n            this.#element.removeEventListener('playererror', this.#options.onError);\n        }\n\n        el.controls = true;\n        el.setAttribute('id', this.#uid);\n        el.removeAttribute('op-live__enabled');\n        el.removeAttribute('op-dvr__enabled');\n        const parent =\n            this.#options.mode === 'fit' && !isAudio(el) ? el.closest('.op-player__fit--wrapper') : el.parentElement;\n        if (parent && parent.parentNode) {\n            parent.parentNode.replaceChild(el, parent);\n        }\n\n        delete Player.instances[this.#uid];\n\n        const e = addEvent('playerdestroyed');\n        el.dispatchEvent(e);\n    }\n\n    getContainer(): HTMLElement {\n        return this.#element.parentElement || this.#element;\n    }\n\n    getControls(): Controls {\n        return this.#controls;\n    }\n\n    getCustomControls(): ElementItem[] {\n        return this.#customElements;\n    }\n\n    getElement(): HTMLMediaElement {\n        return this.#element;\n    }\n\n    getEvents(): EventsList {\n        return this.#events;\n    }\n\n    getOptions(): PlayerOptions {\n        return this.#options;\n    }\n\n    activeElement(): Ads | Media {\n        return this.#adsInstance && this.#adsInstance.started() ? this.#adsInstance : this.#media;\n    }\n\n    isMedia(): boolean {\n        return this.activeElement() instanceof Media;\n    }\n\n    isAd(): boolean {\n        return this.activeElement() instanceof Ads;\n    }\n\n    getMedia(): Media {\n        return this.#media;\n    }\n\n    getAd(): Ads {\n        return this.#adsInstance;\n    }\n\n    addCaptions(args: Track): void {\n        if (args.default) {\n            const tracks = this.#element.querySelectorAll('track');\n            for (let i = 0, total = tracks.length; i < total; i++) {\n                (tracks[i] as HTMLTrackElement).default = false;\n            }\n        }\n\n        const el = this.#element;\n\n        // If captions have been added previously, just update URL and default status\n        let track = el.querySelector(`track[srclang=\"${args.srclang}\"][kind=\"${args.kind}\"]`) as HTMLTrackElement;\n        if (track) {\n            track.src = args.src;\n            track.label = args.label;\n            track.default = args.default || false;\n        } else {\n            track = document.createElement('track');\n            track.srclang = args.srclang;\n            track.src = args.src;\n            track.kind = args.kind;\n            track.label = args.label;\n            track.default = args.default || false;\n            el.appendChild(track);\n        }\n\n        const e = addEvent('controlschanged');\n        el.dispatchEvent(e);\n    }\n\n    addControl(args: ElementItem): void {\n        args.custom = true;\n        args.type = 'button';\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    addElement(args: ElementItem): void {\n        args.custom = true;\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    removeControl(controlName: string): void {\n        // Check custom controls and remove reference there as well\n        this.#customElements.forEach((item: ElementItem, idx: number) => {\n            if (item.id === controlName) {\n                this.#customElements.splice(idx, 1);\n            }\n        });\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    async _prepareMedia(): Promise<void> {\n        try {\n            if (this.#options?.onError) {\n                this.#element.addEventListener('playererror', this.#options.onError, EVENT_OPTIONS);\n            }\n            if (this.#autoplay && isVideo(this.#element)) {\n                this.#element.addEventListener('canplay', this._autoplay, EVENT_OPTIONS);\n            }\n            this.#media = new Media(this.#element, this.#options, this.#autoplay, Player.customMedia);\n            const preload = this.#element.getAttribute('preload');\n            if (this.#ads || !preload || preload !== 'none') {\n                await this.#media.load();\n                this.#media.loaded = true;\n            }\n\n            if (!this.#autoplay && this.#ads) {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                this.#adsInstance = new Ads(this, this.#ads, false, false, adsOptions);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    enableDefaultPlayer(): void {\n        let paused = true;\n        let currentTime = 0;\n\n        if (this.proxy && !this.proxy.paused) {\n            paused = false;\n            currentTime = this.proxy.currentTime;\n            this.proxy.pause();\n        }\n\n        this.proxy = this;\n        this.getElement().addEventListener('loadedmetadata', (): void => {\n            this.getMedia().currentTime = currentTime;\n            if (!paused) {\n                this.play();\n            }\n        });\n    }\n\n    async loadAd(src: string | string[]): Promise<void> {\n        try {\n            if (this.isAd()) {\n                this.getAd().destroy();\n                this.getAd().src = src;\n                this.getAd().loadedAd = false;\n                this.getAd().load();\n            } else {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                const autoplay = !this.activeElement().paused || this.#canAutoplay;\n                this.#adsInstance = new Ads(this, src, autoplay, this.#canAutoplayMuted, adsOptions);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    set src(media) {\n        if (this.#media instanceof Media) {\n            this.#media.mediaFiles = [];\n            this.#media.src = media;\n        } else if (typeof media === 'string') {\n            this.#element.src = media;\n        } else if (Array.isArray(media)) {\n            media.forEach((m) => {\n                const source = document.createElement('source');\n                source.src = m.src;\n                source.type = m.type || predictMimeType(m.src, this.#element);\n                this.#element.appendChild(source);\n            });\n        } else if (typeof media === 'object') {\n            this.#element.src = (media as Source).src;\n        }\n    }\n\n    get src(): Source[] {\n        return this.#media.src;\n    }\n\n    get id(): string {\n        return this.#uid;\n    }\n\n    private _isValid(): boolean {\n        const el = this.#element;\n\n        if (el instanceof HTMLElement === false) {\n            return false;\n        }\n\n        if (!isAudio(el) && !isVideo(el)) {\n            return false;\n        }\n\n        if (!el.classList.contains('op-player__media')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private _wrapInstance(): void {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'op-player op-player__keyboard--inactive';\n        wrapper.className += isAudio(this.#element) ? ' op-player__audio' : ' op-player__video';\n        wrapper.tabIndex = 0;\n\n        this.#element.classList.remove('op-player');\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(wrapper, this.#element);\n        }\n        wrapper.appendChild(this.#element);\n\n        const messageContainer = document.createElement('div');\n        messageContainer.className = 'op-status';\n        messageContainer.innerHTML = '<span></span>';\n        messageContainer.tabIndex = -1;\n        messageContainer.setAttribute('aria-hidden', 'true');\n\n        if (isVideo(this.#element) && this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(messageContainer, this.#element);\n        }\n\n        wrapper.addEventListener(\n            'keydown',\n            (): void => {\n                if (wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.remove('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        wrapper.addEventListener(\n            'click',\n            (): void => {\n                if (!wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.add('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        if (this.#options.mode === 'fill' && !isAudio(this.#element) && !IS_IPHONE) {\n            // Create fill effect on video, scaling and cropping dimensions relative to its parent, setting just a class.\n            // This method centers the video view using pure CSS in both Ads and Media.\n            // @see https://slicejack.com/fullscreen-html5-video-background-css/\n            this.getContainer().classList.add('op-player__full');\n        } else if (this.#options.mode === 'fit' && !isAudio(this.#element)) {\n            const container = this.getContainer();\n            if (container.parentElement) {\n                const fitWrapper = document.createElement('div');\n                fitWrapper.className = 'op-player__fit--wrapper';\n                fitWrapper.tabIndex = 0;\n                container.parentElement.insertBefore(fitWrapper, container);\n                fitWrapper.appendChild(container);\n                container.classList.add('op-player__fit');\n            }\n        } else {\n            let style = '';\n            if (this.#options.width) {\n                const width =\n                    typeof this.#options.width === 'number' ? `${this.#options.width}px` : this.#options.width;\n                style += `width: ${width} !important;`;\n            }\n            if (this.#options.height) {\n                const height =\n                    typeof this.#options.height === 'number' ? `${this.#options.height}px` : this.#options.height;\n                style += `height: ${height} !important;`;\n            }\n\n            if (style) {\n                wrapper.setAttribute('style', style);\n            }\n        }\n    }\n\n    private _createControls(): void {\n        if (IS_IPHONE && isVideo(this.#element)) {\n            this.getContainer().classList.add('op-player__ios--iphone');\n        }\n        this.#controls = new Controls(this);\n        this.#controls.create();\n    }\n\n    private _createUID(): void {\n        if (this.#element.id) {\n            this.#uid = this.#element.id;\n            this.#element.removeAttribute('id');\n        } else {\n            this.#uid = `op_${crypto.getRandomValues(new Uint32Array(1))[0].toString(36).substring(2, 9)}`;\n        }\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.id = this.#uid;\n        }\n    }\n\n    private _createPlayButton(): void {\n        if (isAudio(this.#element)) {\n            return;\n        }\n\n        this.playBtn = document.createElement('button');\n        this.playBtn.className = 'op-player__play';\n        this.playBtn.tabIndex = 0;\n        this.playBtn.title = this.#options.labels?.play || '';\n        this.playBtn.innerHTML = `<span>${this.#options.labels?.play || ''}</span>`;\n        this.playBtn.setAttribute('aria-pressed', 'false');\n        this.playBtn.setAttribute('aria-hidden', 'false');\n\n        this.loader = document.createElement('span');\n        this.loader.className = 'op-player__loader';\n        this.loader.tabIndex = -1;\n        this.loader.setAttribute('aria-hidden', 'true');\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.loader, this.#element);\n            this.#element.parentElement.insertBefore(this.playBtn, this.#element);\n        }\n\n        this.playBtn.addEventListener(\n            'click',\n            (): void => {\n                if (this.#adsInstance) {\n                    this.#adsInstance.playRequested = this.activeElement().paused;\n                }\n                if (this.activeElement().paused) {\n                    this.activeElement().play();\n                } else {\n                    this.activeElement().pause();\n                }\n            },\n            EVENT_OPTIONS\n        );\n    }\n\n    private _setEvents(): void {\n        if (isVideo(this.#element)) {\n            this.#events.loadedmetadata = (): void => {\n                const el = this.activeElement();\n                if (this.#options.showLoaderOnInit && !IS_IOS && !IS_ANDROID) {\n                    this.loader.setAttribute('aria-hidden', 'false');\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    this.loader.setAttribute('aria-hidden', 'true');\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                }\n                if (el.paused) {\n                    this.playBtn.classList.remove('op-player__play--paused');\n                    this.playBtn.setAttribute('aria-pressed', 'false');\n                }\n            };\n            this.#events.waiting = (): void => {\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', 'false');\n            };\n            this.#events.seeking = (): void => {\n                const el = this.activeElement();\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n            };\n            this.#events.seeked = (): void => {\n                const el = this.activeElement();\n                if (Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.play = (): void => {\n                this.playBtn.classList.add('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.pause || '';\n                this.loader.setAttribute('aria-hidden', 'true');\n                if (this.#options.showLoaderOnInit) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    setTimeout((): void => {\n                        this.playBtn.setAttribute('aria-hidden', 'true');\n                    }, this.#options.hidePlayBtnTimer);\n                }\n            };\n            this.#events.playing = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            this.#events.pause = (): void => {\n                const el = this.activeElement();\n                this.playBtn.classList.remove('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.play || '';\n\n                if (this.#options.showLoaderOnInit && Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.ended = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            // This workflow is needed when media is on a loop and post roll needs to be played.\n            // This happens because, when in loop, media never sends the `ended` event back;\n            // so, when media reaches a quarter of a second left before the end, Ads would be dispatched\n            // @see https://github.com/googleads/videojs-ima/issues/890\n            let postRollCalled = false;\n            this.#events.timeupdate = (): void => {\n                if (this.#element.loop && this.isMedia() && this.#adsInstance) {\n                    const el = this.getMedia();\n                    const remainingTime = el.duration - el.currentTime;\n                    if (remainingTime > 0 && remainingTime <= 0.25 && !postRollCalled) {\n                        postRollCalled = true;\n                        const e = addEvent('ended');\n                        this.#element.dispatchEvent(e);\n                    } else if (remainingTime === 0) {\n                        postRollCalled = false;\n                    }\n                }\n            };\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            this.#element.addEventListener(event, this.#events[event], EVENT_OPTIONS);\n        });\n\n        this.getContainer().addEventListener('keydown', this._enableKeyBindings, EVENT_OPTIONS);\n    }\n\n    private _autoplay(): void {\n        if (!this.#processedAutoplay) {\n            this.#processedAutoplay = true;\n            this.#element.removeEventListener('canplay', this._autoplay);\n\n            isAutoplaySupported(\n                this.#element,\n                this.#volume,\n                (autoplay) => {\n                    this.#canAutoplay = autoplay;\n                },\n                (muted) => {\n                    this.#canAutoplayMuted = muted;\n                },\n                (): void => {\n                    if (this.#canAutoplayMuted) {\n                        this.activeElement().muted = true;\n                        this.activeElement().volume = 0;\n\n                        const e = addEvent('volumechange');\n                        this.#element.dispatchEvent(e);\n\n                        // Insert element to unmute if browser allows autoplay with muted media\n                        const volumeEl = document.createElement('div');\n                        const action = IS_IOS || IS_ANDROID ? this.#options.labels?.tap : this.#options.labels?.click;\n                        volumeEl.className = 'op-player__unmute';\n                        volumeEl.innerHTML = `<span>${action}</span>`;\n                        volumeEl.tabIndex = 0;\n\n                        volumeEl.addEventListener(\n                            'click',\n                            (): void => {\n                                this.activeElement().muted = false;\n                                this.activeElement().volume = this.#volume;\n\n                                const event = addEvent('volumechange');\n                                this.#element.dispatchEvent(event);\n\n                                volumeEl.remove();\n                            },\n                            EVENT_OPTIONS\n                        );\n\n                        const target = this.getContainer();\n                        target.insertBefore(volumeEl, target.firstChild);\n                    } else {\n                        this.activeElement().muted = this.#element.muted;\n                        this.activeElement().volume = this.#volume;\n                    }\n\n                    if (this.#ads) {\n                        const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                        this.#adsInstance = new Ads(\n                            this,\n                            this.#ads,\n                            this.#canAutoplay,\n                            this.#canAutoplayMuted,\n                            adsOptions\n                        );\n                    } else if (this.#canAutoplay || this.#canAutoplayMuted) {\n                        this.play();\n                    }\n                }\n            );\n        }\n    }\n\n    private _mergeOptions(playerOptions?: PlayerOptions): void {\n        const opts = { ...(playerOptions || {}) };\n        this.#options = { ...this.#defaultOptions, ...opts };\n        const complexOptions = Object.keys(this.#defaultOptions).filter(\n            (key) => key !== 'labels' && typeof this.#defaultOptions[key] === 'object'\n        );\n        complexOptions.forEach((key) => {\n            const currOption = (opts[key] as Record<string, unknown>) || {};\n            if (currOption && Object.keys(currOption).length) {\n                this.#options[key] = { ...(this.#defaultOptions[key] as Record<string, unknown>), ...currOption };\n            }\n        });\n        if (opts.labels) {\n            const keys = opts.labels ? Object.keys(opts.labels) : [];\n            let sanitizedLabels: PlayerLabels = {};\n\n            keys.forEach((key) => {\n                const current = opts.labels ? opts.labels[key as keyof PlayerLabels] : null;\n                if (current && typeof current === 'object' && key === 'lang') {\n                    Object.keys(current).forEach((k) => {\n                        const lang = current ? (current as Languages)[k] : null;\n                        if (lang) {\n                            sanitizedLabels = {\n                                ...sanitizedLabels,\n                                lang: { ...sanitizedLabels.lang, [k]: sanitize(lang as string) },\n                            };\n                        }\n                    });\n                } else if (current) {\n                    sanitizedLabels = { ...sanitizedLabels, [key]: sanitize(current as string) };\n                }\n            });\n\n            this.#options.labels = { ...this.#defaultOptions.labels, ...sanitizedLabels };\n        }\n    }\n\n    private _enableKeyBindings(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.activeElement();\n        const isAd = this.isAd();\n        const playerFocused = document?.activeElement?.classList.contains('op-player');\n\n        switch (key) {\n            // Toggle play/pause using letter K, Tab or Enter\n            case 13:\n            case 32:\n            case 75:\n                // Avoid interference of Enter/Space keys when focused in the player container\n                if (playerFocused && (key === 13 || key === 32)) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                } else if (key === 75) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // End key ends video\n            case 35:\n                if (!isAd && el.duration !== Infinity) {\n                    el.currentTime = el.duration;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Home key resets progress\n            case 36:\n                if (!isAd) {\n                    el.currentTime = 0;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the left and right arrow keys to manipulate current media time.\n            // Letter J/L will set double of step forward/backward\n            case 37:\n            case 39:\n            case 74:\n            case 76:\n                if (!isAd && el.duration !== Infinity) {\n                    let newStep = 5;\n                    const configStep = this.getOptions().step;\n                    if (configStep) {\n                        newStep = key === 74 || key === 76 ? configStep * 2 : configStep;\n                    } else if (key === 74 || key === 76) {\n                        newStep = 10;\n                    }\n                    const step = el.duration !== Infinity ? newStep : this.getOptions().progress?.duration || 0;\n                    el.currentTime += key === 37 || key === 74 ? step * -1 : step;\n                    if (el.currentTime < 0) {\n                        el.currentTime = 0;\n                    } else if (el.currentTime >= el.duration) {\n                        el.currentTime = el.duration;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the up/down arrow keys to manipulate volume.\n            case 38:\n            case 40:\n                const newVol = key === 38 ? Math.min(el.volume + 0.1, 1) : Math.max(el.volume - 0.1, 0);\n                el.volume = newVol;\n                el.muted = !(newVol > 0);\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // Letter F sets fullscreen (only video)\n            case 70:\n                if (isVideo(this.#element) && !e.ctrlKey) {\n                    this.#fullscreen = new Fullscreen(this, '', '');\n                    if (typeof this.#fullscreen.fullScreenEnabled !== 'undefined') {\n                        this.#fullscreen.toggleFullscreen();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n                break;\n            // Letter M toggles mute\n            case 77:\n                el.muted = !el.muted;\n                if (el.muted) {\n                    el.volume = 0;\n                } else {\n                    el.volume = this.#volume;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // < and > will decrease/increase the speed of playback by 0.25\n            // , and . will go to the prev/next frame of the media\n            case 188:\n            case 190:\n                if (!isAd && e.shiftKey) {\n                    const elem = el as Media;\n                    elem.playbackRate =\n                        key === 188 ? Math.max(elem.playbackRate - 0.25, 0.25) : Math.min(elem.playbackRate + 0.25, 2);\n                    // Show playbackRate and update controls to reflect change in settings\n                    const target = this.getContainer().querySelector('.op-status>span');\n                    if (target) {\n                        target.textContent = `${elem.playbackRate}x`;\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-hidden', 'false');\n                        }\n                        setTimeout((): void => {\n                            if (target.parentElement) {\n                                target.parentElement.setAttribute('aria-hidden', 'true');\n                            }\n                        }, 500);\n                    }\n                    const ev = addEvent('controlschanged');\n                    dispatchEvent(ev);\n                    e.preventDefault();\n                    e.stopPropagation();\n                } else if (!isAd && el.paused) {\n                    el.currentTime += (1 / 25) * (key === 188 ? -1 : 1);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default Player;\n\n// Expose element globally.\nif (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayer = Player;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayerJS = Player;\n    Player.init();\n}\n"],"names":["NAV","UA","IS_IPHONE","IS_IOS","IS_ANDROID","IS_CHROME","IS_SAFARI","HAS_MSE","SUPPORTS_HLS","mediaSource","sourceBuffer","isTypeSupported","sourceBufferValidAPI","DVR_THRESHOLD","EVENT_OPTIONS","isVideo","element","isAudio","loadScript","url","resolve","reject","script","offset","el","rect","sanitize","html","plainText","formattedContent","scripts","i","total","clean","nodes","node","attributes","j","t","name","value","val","isXml","input","parsedXml","text","addEvent","event","details","detail","Captions","player","position","layer","__privateAdd","_player","_button","_captions","_menu","_events","_hasTracks","_currentTrack","_default","_controlPosition","_controlLayer","__privateSet","labels","detachMenus","__privateGet","target","itemContainer","track","item","label","_a","e","button","menus","menuItem","option","language","captions","caption","targetTrack","matchTrack","subitems","items","options","_b","cue","content","Fullscreen","_isFullscreen","_fullscreenEvents","_fullscreenWidth","_fullscreenHeight","_clickEvent","video","screen","width","height","isFullscreen","wrapper","styles","defaultWidth","defaultHeight","key","getExtension","baseName","isHlsSource","media","isDashSource","isFlvSource","predictMimeType","extension","isAutoplaySupported","defaultVol","autoplay","muted","callback","playPromise","Levels","_levels","_defaultLevel","startLevel","initialLevel","menuItems","defaultLevel","defaultLabel","levelSet","loadLevelsEvent","currentTime","isPaused","levelVal","level","levels","connection","type","acc","current","a","b","className","menu","Play","isAudioEl","Player","formatTime","seconds","frameRate","f","s","m","h","wrap","formattedVal","Progress","_progress","_slider","_buffer","_played","_tooltip","_forcePause","progress","setInitialProgress","lastCurrentTime","defaultDuration","duration","min","max","updateSlider","forcePause","releasePause","mobileForcePause","changedTouches","time","x","pos","half","percentage","mediaContainer","limit","isAd","step","Settings","_submenu","_originalOutput","timeout","id","rate","defaultValue","submenu","dataValue","submenuMatch","mainMenu","subItems","labelEl","fragments","menuTarget","prev","minItems","settingsBtnFocused","menuFocused","_c","_d","Time","_currentTime","_delimiter","_duration","_container","showOnlyCurrent","controls","setInitialTime","showLiveLabel","showCurrentTimeOnly","Volume","_display","_volume","mediaVolume","vol","updateButton","updateVolume","unmuteEl","Controls","_settings","_timer","_controls","_items","_controlEls","isMediaVideo","alwaysVisible","showControls","messageContainer","isVideoEl","controlPositions","layersExist","controlLayer","layers","v","currentLayer","allowDefault","itemIcon","subitem","control","Native","_customPlayer","customPlayer","DashMedia","_options","mimeType","bitrates","errorEvent","FlvMedia","args","configs","rest","data","errorDetails","HlsMedia","_recoverDecodingErrorDate","_recoverSwapAudioCodecDate","_autoplay","formattedLevel","fatal","now","mediaEvent","networkEvent","fatalEvent","err","timeEvent","metaEvent","HTML5Media","mediaFile","_currentLevel","_levelList","_isStreaming","_retryCount","_started","idx","source","metaDataEvent","message","__privateWrapper","defaultMessage","error","Media","customMedia","_element","_media","_files","_promisePlay","_mediaLoaded","_customMedia","_currentSrc","source.predictMimeType","file","sources","loaded","mediaFiles","sourceTags","nodeSource","src","playHLSNatively","activeLevels","customRef","rule","customOptions","source.isHlsSource","hlsOptions","source.isDashSource","dashOptions","source.isFlvSource","flvOptions","Ads","ads","autostart","autostartMuted","_ended","_done","_active","_intervalTimer","_muted","_manager","_ads","_promise","_loader","_customClickContainer","_skipElement","_displayContainer","_request","_autostart","_autostartMuted","_playTriggered","_currentIndex","_originalVolume","_preloadContent","_lastTimePaused","_mediaSources","_mediaStarted","_adEvent","defaultOpts","path","force","existingContainer","vpaidModeMap","mouseEvents","destroy","mode","formattedWidth","percentageWidth","formattedHeight","percentageHeight","ad","waitingEvent","loadedEvent","playEvent","resized","endEvent","skipEvent","volumeEvent","endedEvent","pauseEvent","progressData","canSkip","remainingTime","adData","fatalErrorCodes","managerLoadedEvent","adsRenderingSettings","manager","volume","_Player","_adsInstance","_uid","_canAutoplay","_canAutoplayMuted","_processedAutoplay","_customElements","_fullscreen","_defaultOptions","targets","settings","valid","parent","tracks","controlName","preload","adsOptions","paused","container","fitWrapper","style","postRollCalled","volumeEl","action","playerOptions","opts","currOption","keys","sanitizedLabels","k","lang","playerFocused","newStep","configStep","newVol","elem","ev","Player$1"],"mappings":"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"}