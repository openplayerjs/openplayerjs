{"version":3,"file":"openplayer.es.js","sources":["../src/utils/constants.ts","../src/utils/general.ts","../src/controls/captions.ts","../src/controls/fullscreen.ts","../src/utils/media.ts","../src/controls/levels.ts","../src/controls/play.ts","../src/utils/time.ts","../src/controls/progress.ts","../src/controls/settings.ts","../src/controls/time.ts","../src/controls/volume.ts","../src/controls.ts","../src/media/native.ts","../src/media/dash.ts","../src/media/flv.ts","../src/media/hls.ts","../src/media/html5.ts","../src/media.ts","../src/media/ads.ts","../src/player.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\ndeclare global {\n    interface Window {\n        MSStream: any;\n        WebKitMediaSource: any;\n        WebKitSourceBuffer: any;\n    }\n}\n\nexport const NAV: Navigator | null = typeof window !== 'undefined' ? window.navigator : null;\n\nexport const UA: string | null = NAV ? NAV.userAgent.toLowerCase() : null;\n\nexport const IS_IPAD = UA ? /ipad/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPHONE = UA ? /iphone/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IPOD = UA ? /ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_IOS = UA ? /ipad|iphone|ipod/i.test(UA) && !window.MSStream : false;\n\nexport const IS_ANDROID = UA ? /android/i.test(UA) : false;\n\nexport const IS_EDGE = NAV ? 'msLaunchUri' in NAV && !('documentMode' in document) : false;\n\nexport const IS_CHROME = UA ? /chrome/i.test(UA) : false;\n\nexport const IS_FIREFOX = UA ? /firefox/i.test(UA) : false;\n\nexport const IS_SAFARI = UA ? /safari/i.test(UA) && !IS_CHROME : false;\n\nexport const IS_STOCK_ANDROID = UA ? /^mozilla\\/\\d+\\.\\d+\\s\\(linux;\\su;/i.test(UA) : false;\n\nexport const HAS_MSE = typeof window !== 'undefined' ? 'MediaSource' in window : false;\n\n// @see https://github.com/video-dev/hls.js/blob/master/src/is-supported.js\nexport const SUPPORTS_HLS = (): boolean => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    const mediaSource = window.MediaSource || window.WebKitMediaSource;\n    const sourceBuffer = window.SourceBuffer || window.WebKitSourceBuffer;\n    const isTypeSupported =\n        mediaSource &&\n        typeof mediaSource.isTypeSupported === 'function' &&\n        mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n    const sourceBufferValidAPI =\n        !sourceBuffer ||\n        (sourceBuffer.prototype &&\n            typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n            typeof sourceBuffer.prototype.remove === 'function');\n\n    // Safari is still an exception since it has built-in HLS support; currently HLS.js\n    // is still in beta to support Safari\n    return !!isTypeSupported && !!sourceBufferValidAPI && !IS_SAFARI;\n};\n\nexport const DVR_THRESHOLD = 120;\n\nexport const EVENT_OPTIONS = { passive: false };\n","export function getAbsoluteUrl(url: string): string {\n    const a: HTMLAnchorElement = document.createElement('a');\n    a.href = url;\n    return a.href;\n}\n\nexport function isVideo(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'video';\n}\n\nexport function isAudio(element: Element): boolean {\n    return element.tagName.toLowerCase() === 'audio';\n}\n\nexport function loadScript(url: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.onload = (): void => {\n            script.remove();\n            resolve();\n        };\n        script.onerror = (): void => {\n            script.remove();\n            reject(new Error(`${url} could not be loaded`));\n        };\n        if (document.head) {\n            document.head.appendChild(script);\n        }\n    });\n}\n\nexport function offset(el: HTMLElement): { left: number; top: number } {\n    const rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft),\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop),\n    };\n}\n\nexport function sanitize(html: string, plainText = true): string {\n    const parser = new DOMParser();\n    const content = parser.parseFromString(html, 'text/html');\n    const formattedContent = content.body || document.createElement('body');\n\n    const scripts = formattedContent.querySelectorAll('script');\n    for (let i = 0, total = scripts.length; i < total; i++) {\n        scripts[i].remove();\n    }\n\n    const clean = (element: Element): void => {\n        const nodes = element.children;\n        for (let i = 0, total = nodes.length; i < total; i++) {\n            const node = nodes[i];\n            const { attributes } = node;\n            for (let j = 0, t = attributes.length; j < t; j++) {\n                const { name, value } = attributes[j];\n                const val = value.replace(/\\s+/g, '').toLowerCase();\n                if (['src', 'href', 'xlink:href'].includes(name)) {\n                    // eslint-disable-next-line no-script-url\n                    if (val.includes('javascript:') || val.includes('data:')) {\n                        node.removeAttribute(name);\n                    }\n                }\n                if (name.startsWith('on')) {\n                    node.removeAttribute(name);\n                }\n            }\n            clean(node);\n        }\n    };\n\n    clean(formattedContent);\n    return plainText ? (formattedContent.textContent || '').replace(/\\s{2,}/g, '') : formattedContent.innerHTML;\n}\n\nexport function isXml(input: string): boolean {\n    let parsedXml;\n\n    if (typeof DOMParser !== 'undefined') {\n        parsedXml = (text: string): Document => new DOMParser().parseFromString(text, 'text/xml');\n    } else {\n        return false;\n    }\n\n    try {\n        const response = parsedXml(input);\n        if (response.getElementsByTagName('parsererror').length > 0) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport function isJson(item: unknown): boolean {\n    item = typeof item !== 'string' ? JSON.stringify(item) : item;\n    try {\n        item = JSON.parse(item as string);\n    } catch (e) {\n        return false;\n    }\n\n    if (typeof item === 'object' && item !== null) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function addEvent(event: string, details?: CustomEventInit): CustomEvent {\n    let detail = {};\n    if (details && details.detail) {\n        detail = { detail: details.detail };\n    }\n    return new CustomEvent(event, detail);\n}\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Captions implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #captions: HTMLDivElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #hasTracks: boolean;\n\n    #currentTrack?: TextTrack;\n\n    #default = 'off';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._formatMenuItems = this._formatMenuItems.bind(this);\n        this._setDefaultTrack = this._setDefaultTrack.bind(this);\n        this._showCaptions = this._showCaptions.bind(this);\n        this._hideCaptions = this._hideCaptions.bind(this);\n    }\n\n    custom?: boolean | undefined;\n\n    create(): void {\n        const { labels, detachMenus } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__captions op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.toggleCaptions || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.toggleCaptions || '');\n        this.#button.setAttribute('data-active-captions', 'off');\n\n        // Build container to display captions to mitigate cross browser inconsistencies\n        this.#captions = document.createElement('div');\n        this.#captions.className = 'op-captions';\n        const target = this.#player.getContainer();\n        target.insertBefore(this.#captions, target.firstChild);\n\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-captions__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            this.#menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-captions\">\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\" aria-checked=\"${\n                    this.#default === 'off' ? 'true' : 'false'\n                }\">\n                    <div class=\"op-settings__submenu-label op-subtitles__option\" data-value=\"captions-off\">${\n                        labels?.off\n                    }</div>\n                </div>\n            </div>`;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.append(this.#button, this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).append(itemContainer);\n\n            for (const track of this.#player.getElement().textTracks) {\n                const item = document.createElement('div');\n                const label = labels?.lang?.[track.language] || null;\n                item.className = 'op-settings__submenu-item';\n                item.tabIndex = 0;\n                item.setAttribute('role', 'menuitemradio');\n                item.setAttribute('aria-checked', this.#default === track.language ? 'true' : 'false');\n                item.innerHTML = `<div class=\"op-settings__submenu-label op-subtitles__option\"\n                    data-value=\"captions-${track.language}\">\n                    ${label || track.label}\n                </div>`;\n                this.#menu.append(item);\n            }\n        } else {\n            this.#player.getControls().getLayer(this.#controlLayer).append(this.#button);\n        }\n\n        ['play', 'loadeddata'].forEach((event: string) => {\n        // Show/hide captions\n        this.#events.button.click = (e: Event): void => {\n            const button = e.target as HTMLDivElement;\n            if (detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (const menuItem of Array.from(menus)) {\n                    if (menuItem !== this.#menu) {\n                        menuItem.setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            } else {\n                button.setAttribute('aria-pressed', 'true');\n                if (button.classList.contains('op-controls__captions--on')) {\n                    button.classList.remove('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', 'off');\n                    this._hideCaptions();\n                } else {\n                    button.classList.add('op-controls__captions--on');\n                    button.setAttribute('data-active-captions', this.#currentTrack?.language || 'off');\n                    this._showCaptions();\n                }\n\n                for (const track of this.#player.getElement().textTracks) {\n                    track.mode = button.getAttribute('data-active-captions') === track.language ? 'showing' : 'hidden';\n                }\n            }\n        };\n\n        this.#events.button.mouseover = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    if (menus[i] !== this.#menu) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n            }\n        };\n        this.#events.button.mouseout = (): void => {\n            if (!IS_IOS && !IS_ANDROID && detachMenus) {\n                const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                for (let i = 0, total = menus.length; i < total; ++i) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n                if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                }\n            }\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-subtitles__option')) {\n                const language = option.getAttribute('data-value')!.replace('captions-', '');\n\n                this._hideCaptions();\n\n                if (language === 'off') {\n                    this.#currentTrack = undefined;\n                }\n\n                for (const track of this.#player.getElement().textTracks) {\n                    console.log({ language, track})\n                    track.mode = track.language === language ? 'showing' : 'hidden';\n                    if (track.language === language) {\n                        this.#currentTrack = track;\n                        this._showCaptions();\n                    }\n                }\n\n                if (detachMenus) {\n                    if (this.#button.classList.contains('op-controls__captions--on')) {\n                        this.#button.classList.remove('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', 'off');\n                    } else {\n                        this.#button.classList.add('op-controls__captions--on');\n                        this.#button.setAttribute('data-active-captions', language);\n                    }\n\n                    const captions = this.#menu.querySelectorAll('.op-settings__submenu-item');\n                    for (const caption of Array.from(captions)) {\n                        caption.setAttribute('aria-checked', 'false');\n                    }\n                    option.parentElement!.setAttribute('aria-checked', 'true');\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.#button.setAttribute('data-active-captions', language);\n                }\n                const event = addEvent('captionschanged');\n                this.#player.getElement().dispatchEvent(event);\n            }\n        };\n\n        this.#events.global.cuechange = (e: Event): void => {\n            this._hideCaptions();\n            const t = e.target as TextTrack;\n            if (t.mode !== 'showing' || this.#button.getAttribute('data-active-captions') === 'off') {\n                return;\n            }\n\n            if (t.activeCues && t.activeCues?.length > 0) {\n                this._showCaptions();\n            }\n        };\n\n        if (detachMenus) {\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n    \n        \n            this.#player.getElement().addEventListener(event, () => {\n                for (const track of this.#player.getElement().textTracks) {\n                    track.mode = track.mode !== 'showing' ? 'hidden' : track.mode;\n                    track.addEventListener('cuechange', this.#events.global.cuechange, EVENT_OPTIONS);\n                }\n            });\n        \n\n        const targetTrack = this.#player\n            .getElement()\n            .querySelector('track:is([kind=\"subtitles\"],[kind=\"captions\"])[default]') as HTMLTrackElement;\n        if (targetTrack) {\n            const matchTrack = Array.from(this.#player.getElement().textTracks).find((el) => el.language === targetTrack.srclang);\n            if (matchTrack) {\n                this._setDefaultTrack(matchTrack);\n            }\n        }\n    })\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n\n        if (!this.#hasTracks) {\n            return;\n        }\n\n        for (const track of this.#player.getElement().textTracks) {\n            track.removeEventListener('cuechange', this.#events.global.cuechange);\n        }\n\n        document.removeEventListener('click', this.#events.global.click);\n        this.#button.removeEventListener('click', this.#events.button.click);\n        if (detachMenus) {\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { detachMenus, labels } = this.#player.getOptions();\n        if (detachMenus || this.#player.getElement().textTracks.length <= 1) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n\n        // Avoid implementing submenu for captions if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-subtitles__option',\n                  default: this.#default || 'off',\n                  key: 'captions',\n                  name: labels?.captions || '',\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (this.#player.getElement().textTracks.length <= 1 && !detachMenus) {\n            return [];\n        }\n\n        let items = [{ key: 'off', label: labels?.off || '' }];\n        for (const track of this.#player.getElement().textTracks) {\n            const label = labels?.lang ? labels.lang[track.language] : null;\n            // Override language item if duplicated when passing list of items\n            items = items.filter((el) => el.key !== track.language);\n            items.push({ key: track.language, label: label || track.label });\n        }\n\n        return items;\n    }\n\n    private _setDefaultTrack(track: TextTrack): void {\n        track.mode = 'showing';\n        this.#default = track.language;\n        this.#button.setAttribute('data-active-captions', this.#default);\n        this.#button.classList.add('op-controls__captions--on');\n        this.#captions.classList.add('op-captions--on');\n        this.#currentTrack = track;\n\n        const options = document.querySelectorAll('.op-settings__submenu-item') || [];\n        for (const option of Array.from(options)) {\n            option.setAttribute('aria-checked', 'false');\n        }\n\n        document\n            .querySelector(`.op-subtitles__option[data-value=\"captions-${track.language}\"]`)\n            ?.parentElement?.setAttribute('aria-checked', 'true');\n    }\n\n    private _showCaptions() {\n        for (const cue of Array.from(this.#currentTrack?.activeCues || [])) {\n            const content = (cue as VTTCue)?.text || '';\n            if (content && this.#captions) {\n                const caption = document.createElement('span');\n                caption.innerHTML = content;\n                this.#captions.prepend(caption);\n                this.#captions.classList.add('op-captions--on');\n            } else {\n                this._hideCaptions();\n            }\n        }\n    }\n\n    private _hideCaptions() {\n        while (this.#captions?.lastChild) {\n            this.#captions.removeChild(this.#captions.lastChild);\n        }\n    }\n}\n\nexport default Captions;\n","import { FullscreenDocument, FullscreenElement, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IPHONE } from '../utils/constants';\n\nclass Fullscreen implements PlayerComponent {\n    fullScreenEnabled: boolean;\n\n    #player: Player;\n\n    #isFullscreen: boolean;\n\n    #button: HTMLButtonElement;\n\n    #fullscreenEvents: string[] = [];\n\n    #fullscreenWidth = 0;\n\n    #fullscreenHeight = 0;\n\n    #clickEvent: () => void;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this.#isFullscreen = document.body.classList.contains('op-fullscreen__on');\n\n        const target = document as FullscreenDocument;\n\n        // Check if fullscreen is supported\n        this.fullScreenEnabled = !!(\n            target.fullscreenEnabled ||\n            target.mozFullScreenEnabled ||\n            target.msFullscreenEnabled ||\n            target.webkitSupportsFullscreen ||\n            target.webkitFullscreenEnabled ||\n            (document.createElement('video') as FullscreenElement).webkitRequestFullScreen\n        );\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n        this._resize = this._resize.bind(this);\n        this._fullscreenChange = this._fullscreenChange.bind(this);\n        this._setFullscreen = this._setFullscreen.bind(this);\n        this._unsetFullscreen = this._unsetFullscreen.bind(this);\n\n        this.#fullscreenEvents = [\n            'fullscreenchange',\n            'mozfullscreenchange',\n            'webkitfullscreenchange',\n            'msfullscreenchange',\n        ];\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.addEventListener(event, this._fullscreenChange, EVENT_OPTIONS);\n        });\n        this._setFullscreenData(false);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        // Since iPhone still doesn't accept the regular Fullscreen API, use the following events\n        if (IS_IPHONE) {\n            this.#player.getElement().addEventListener('webkitbeginfullscreen', this._setFullscreen, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('webkitendfullscreen', this._unsetFullscreen, EVENT_OPTIONS);\n        }\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__fullscreen op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.fullscreen || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.fullscreen || '');\n\n        this.#clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            this.toggleFullscreen();\n        };\n\n        this.#clickEvent = this.#clickEvent.bind(this);\n\n        this.#button.addEventListener('click', this.#clickEvent, EVENT_OPTIONS);\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n    }\n\n    destroy(): void {\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#fullscreenEvents.forEach((event) => {\n            document.removeEventListener(event, this._fullscreenChange);\n        });\n        if (IS_IPHONE) {\n            this.#player.getElement().removeEventListener('webkitbeginfullscreen', this._setFullscreen);\n            this.#player.getElement().removeEventListener('webkitendfullscreen', this._unsetFullscreen);\n        }\n        this.#button.removeEventListener('click', this.#clickEvent);\n        this.#button.remove();\n    }\n\n    toggleFullscreen(): void {\n        // If browser does not support native Fullscreen API, player will adjust the video\n        // and its parent container's dimensions via width and height styles.\n        if (this.#isFullscreen) {\n            const target = document as FullscreenDocument;\n            if (target.exitFullscreen) {\n                target.exitFullscreen();\n            } else if (target.mozCancelFullScreen) {\n                target.mozCancelFullScreen();\n            } else if (target.webkitCancelFullScreen) {\n                target.webkitCancelFullScreen();\n            } else if (target.msExitFullscreen) {\n                target.msExitFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n            document.body.classList.remove('op-fullscreen__on');\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const video = this.#player.getElement() as any;\n            this.#fullscreenWidth = window.screen.width;\n            this.#fullscreenHeight = window.screen.height;\n\n            if (video.requestFullscreen) {\n                video.parentElement.requestFullscreen();\n            } else if (video.mozRequestFullScreen) {\n                video.parentElement.mozRequestFullScreen();\n            } else if (video.webkitRequestFullScreen) {\n                video.parentElement.webkitRequestFullScreen();\n            } else if (video.msRequestFullscreen) {\n                video.parentElement.msRequestFullscreen();\n            } else if (video.webkitEnterFullscreen) {\n                video.webkitEnterFullscreen();\n            } else {\n                this._fullscreenChange();\n            }\n\n            document.body.classList.add('op-fullscreen__on');\n        }\n\n        if (typeof window !== 'undefined' && (IS_ANDROID || IS_IPHONE)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const { screen } = window as any;\n            if (screen.orientation && !this.#isFullscreen) {\n                screen.orientation.lock('landscape');\n            }\n        }\n    }\n\n    private _fullscreenChange(): void {\n        const width = this.#isFullscreen ? undefined : this.#fullscreenWidth;\n        const height = this.#isFullscreen ? undefined : this.#fullscreenHeight;\n        this._setFullscreenData(!this.#isFullscreen);\n\n        if (this.#player.isAd()) {\n            this.#player.getAd().resizeAds(width, height);\n        }\n        this.#isFullscreen = !this.#isFullscreen;\n\n        if (this.#isFullscreen) {\n            document.body.classList.add('op-fullscreen__on');\n        } else {\n            document.body.classList.remove('op-fullscreen__on');\n        }\n        this._resize(width, height);\n    }\n\n    private _setFullscreenData(isFullscreen: boolean): void {\n        this.#player.getContainer().setAttribute('data-fullscreen', (!!isFullscreen).toString());\n        if (this.#button) {\n            if (isFullscreen) {\n                this.#button.classList.add('op-controls__fullscreen--out');\n            } else {\n                this.#button.classList.remove('op-controls__fullscreen--out');\n            }\n        }\n    }\n\n    private _resize(width?: number, height?: number): void {\n        const wrapper = this.#player.getContainer();\n        const video = this.#player.getElement();\n        const options = this.#player.getOptions();\n        let styles = '';\n        if (width) {\n            wrapper.style.width = '100%';\n            video.style.width = '100%';\n        } else if (options.width) {\n            const defaultWidth = typeof options.width === 'number' ? `${options.width}px` : options.width;\n            styles += `width: ${defaultWidth} !important;`;\n            video.style.removeProperty('width');\n        } else {\n            video.style.removeProperty('width');\n            wrapper.style.removeProperty('width');\n        }\n        if (height) {\n            video.style.height = '100%';\n            wrapper.style.height = '100%';\n        } else if (options.height) {\n            const defaultHeight = typeof options.height === 'number' ? `${options.height}px` : options.height;\n            styles += `height: ${defaultHeight} !important;`;\n            video.style.removeProperty('height');\n        } else {\n            video.style.removeProperty('height');\n            wrapper.style.removeProperty('height');\n        }\n\n        if (styles) {\n            wrapper.setAttribute('style', styles);\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const fullscreenBtnFocused = document?.activeElement?.classList.contains('op-controls__fullscreen');\n        if (fullscreenBtnFocused && (key === 13 || key === 32)) {\n            this.toggleFullscreen();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    private _setFullscreen(): void {\n        this.#isFullscreen = true;\n        this._setFullscreenData(true);\n        document.body.classList.add('op-fullscreen__on');\n    }\n\n    private _unsetFullscreen(): void {\n        this.#isFullscreen = false;\n        this._setFullscreenData(false);\n        document.body.classList.remove('op-fullscreen__on');\n    }\n}\n\nexport default Fullscreen;\n","import { Source } from '../interfaces';\nimport { isAudio } from './general';\n\nexport function getExtension(url: string): string {\n    const baseUrl = url.split('?')[0];\n    const baseFrags = (baseUrl || '').split('\\\\');\n    const baseUrlFragment = (baseFrags || []).pop();\n    const baseNameFrags = (baseUrlFragment || '').split('/');\n    const baseName = (baseNameFrags || []).pop() || '';\n    return baseName.includes('.') ? baseName.substring(baseName.lastIndexOf('.') + 1) : '';\n}\n\nexport function isHlsSource(media: Source): boolean {\n    return (\n        /\\.m3u8$/i.test(media.src) || ['application/x-mpegURL', 'application/vnd.apple.mpegurl'].includes(media.type)\n    );\n}\n\nexport function isM3USource(media: Source): boolean {\n    return /\\.m3u$/i.test(media.src);\n}\n\nexport function isDashSource(media: Source): boolean {\n    return /\\.mpd/i.test(media.src) || media.type === 'application/dash+xml';\n}\n\nexport function isFlvSource(media: Source): boolean {\n    return /(^rtmp:\\/\\/|\\.flv$)/i.test(media.src) || ['video/x-flv', 'video/flv'].includes(media.type);\n}\n\nexport function predictMimeType(url: string, element: HTMLMediaElement): string {\n    const extension = getExtension(url);\n\n    // If no extension found, check if media is a vendor iframe\n    if (!extension) {\n        return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n\n    // Check native media types\n    switch (extension) {\n        case 'm3u8':\n        case 'm3u':\n            return 'application/x-mpegURL';\n        case 'mpd':\n            return 'application/dash+xml';\n        case 'mp4':\n            return isAudio(element) ? 'audio/mp4' : 'video/mp4';\n        case 'mp3':\n            return 'audio/mp3';\n        case 'webm':\n            return isAudio(element) ? 'audio/webm' : 'video/webm';\n        case 'ogg':\n            return isAudio(element) ? 'audio/ogg' : 'video/ogg';\n        case 'ogv':\n            return 'video/ogg';\n        case 'oga':\n            return 'audio/ogg';\n        case '3gp':\n            return 'audio/3gpp';\n        case 'wav':\n            return 'audio/wav';\n        case 'aac':\n            return 'audio/aac';\n        case 'flac':\n            return 'audio/flac';\n        default:\n            return isAudio(element) ? 'audio/mp3' : 'video/mp4';\n    }\n}\n\n// @see https://raw.githubusercontent.com/googleads/googleads-ima-html5/2.11/attempt_to_autoplay/ads.js\n// @see https://github.com/Modernizr/Modernizr/issues/1095#issuecomment-304682473\nexport function isAutoplaySupported(\n    media: HTMLMediaElement,\n    defaultVol: number,\n    autoplay: (playing: boolean) => void,\n    muted: (playing: boolean) => void,\n    callback: () => void\n): void {\n    const playPromise = media.play();\n    if (playPromise !== undefined) {\n        playPromise\n            .then(() => {\n                // Unmuted autoplay works.\n                media.pause();\n                autoplay(true);\n                muted(false);\n                callback();\n            })\n            .catch(() => {\n                // Unmuted autoplay failed. New attempt with muted autoplay.\n                media.volume = 0;\n                media.muted = true;\n                media\n                    .play()\n                    .then(() => {\n                        // Muted autoplay works.\n                        media.pause();\n                        autoplay(true);\n                        muted(true);\n                        callback();\n                    })\n                    .catch(() => {\n                        // Both muted and unmuted autoplay failed. Fallback to click to play.\n                        media.volume = defaultVol;\n                        media.muted = false;\n                        autoplay(false);\n                        muted(false);\n                        callback();\n                    });\n            });\n    } else {\n        autoplay(!media.paused || ('Promise' in window && (playPromise as Promise<void>) instanceof Promise));\n        media.pause();\n        muted(false);\n        callback();\n    }\n}\n","import { EventsList, Level, PlayerComponent, SettingsItem, SettingsSubItem } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, NAV } from '../utils/constants';\nimport { addEvent, sanitize } from '../utils/general';\nimport { isDashSource, isHlsSource } from '../utils/media';\n\nclass Levels implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLDivElement;\n\n    #events: EventsList = {\n        button: {},\n        global: {},\n        media: {},\n    };\n\n    #levels: Level[] = [];\n\n    #defaultLevel = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, defaultLevel: startLevel, detachMenus } = this.#player.getOptions();\n        const initialLevel = startLevel !== null ? parseInt(startLevel || '0', 10) : this.#player.getMedia().level;\n        this.#defaultLevel = `${initialLevel}`;\n        const menuItems = this._formatMenuItems();\n        const defaultLevel = menuItems.length ? menuItems.find((items) => items.key === this.#defaultLevel) : null;\n        const defaultLabel = defaultLevel ? defaultLevel.label : labels?.auto || '';\n        let levelSet = false;\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__levels op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mediaLevels || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-label', labels?.mediaLevels || '');\n        this.#button.setAttribute('data-active-level', this.#defaultLevel);\n        this.#button.innerHTML = `<span>${defaultLabel}</span>`;\n\n        const loadLevelsEvent = (): void => {\n            if (!this.#levels.length) {\n                this._gatherLevels();\n                setTimeout((): void => {\n                    this.#player.getMedia().level = initialLevel;\n                    const e = addEvent('controlschanged');\n                    this.#player.getElement().dispatchEvent(e);\n                }, 0);\n            } else if (!levelSet) {\n                this.#player.getMedia().level = initialLevel;\n                levelSet = true;\n            }\n        };\n\n        this.#events.media.loadedmetadata = loadLevelsEvent.bind(this);\n        this.#events.media.manifestLoaded = loadLevelsEvent.bind(this);\n        this.#events.media.hlsManifestParsed = loadLevelsEvent.bind(this);\n\n        if (detachMenus) {\n            this._buildMenu();\n            this.#events.button.click = (): void => {\n                if (detachMenus) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    } else {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n            this.#events.button.mouseover = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        if (menus[i] !== this.#menu) {\n                            menus[i].setAttribute('aria-hidden', 'true');\n                        }\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'true') {\n                        this.#menu.setAttribute('aria-hidden', 'false');\n                    }\n                }\n            };\n            this.#events.button.mouseout = (): void => {\n                if (!IS_IOS && !IS_ANDROID) {\n                    const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n                    for (let i = 0, total = menus.length; i < total; ++i) {\n                        menus[i].setAttribute('aria-hidden', 'true');\n                    }\n                    if (this.#menu.getAttribute('aria-hidden') === 'false') {\n                        this.#menu.setAttribute('aria-hidden', 'true');\n                    }\n                }\n            };\n\n            this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n            this.#button.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseover', this.#events.button.mouseover, EVENT_OPTIONS);\n            this.#menu.addEventListener('mouseout', this.#events.button.mouseout, EVENT_OPTIONS);\n            this.#player.getElement().addEventListener('controlshidden', this.#events.button.mouseout, EVENT_OPTIONS);\n        }\n\n        this.#events.global.click = (e: Event): void => {\n            const option = e.target as HTMLElement;\n            const { currentTime } = this.#player.getMedia();\n            const isPaused = this.#player.getMedia().paused;\n            if (option.closest(`#${this.#player.id}`) && option.classList.contains('op-levels__option')) {\n                const levelVal = option.getAttribute('data-value');\n                const level = levelVal ? levelVal.replace('levels-', '') : '-1';\n                this.#defaultLevel = `${level}`;\n                if (detachMenus) {\n                    this.#button.setAttribute('data-active-level', `${level}`);\n                    this.#button.innerHTML = `<span>${sanitize(option.innerText, true)}</span>`;\n                    const levels =\n                        option.parentElement && option.parentElement.parentElement\n                            ? option.parentElement.parentElement.querySelectorAll('.op-settings__submenu-item')\n                            : [];\n                    for (let i = 0, total = levels.length; i < total; ++i) {\n                        levels[i].setAttribute('aria-checked', 'false');\n                    }\n                    if (option.parentElement) {\n                        option.parentElement.setAttribute('aria-checked', 'true');\n                    }\n                    this.#menu.setAttribute('aria-hidden', 'false');\n                }\n                this.#player.getMedia().level = level;\n                this.#player.getMedia().currentTime = currentTime;\n                if (!isPaused) {\n                    this.#player.play();\n                }\n\n                const event = addEvent('levelchanged', {\n                    detail: {\n                        label: option.innerText.trim(),\n                        level,\n                    },\n                });\n                this.#player.getElement().dispatchEvent(event);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n\n        // @ts-ignore\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n        this.#events.global.connection = (): void => {\n            // Check connectivity to switch levels (only HTML5 since HLS and Dash can use adaptive streaming)\n            const media = this.#player.getMedia().current;\n            if (!isDashSource(media) && !isHlsSource(media)) {\n                const type = connection?.effectiveType || '';\n                const levels = this.#levels.map((item) => ({\n                    ...item,\n                    resolution: parseInt(item.label.replace('p', ''), 10),\n                }));\n\n                let level = levels.find((item) => item.resolution < 360);\n                if (type === '4g') {\n                    level = levels.find((item) => item.resolution >= 720);\n                } else if (type === '3g') {\n                    level = levels.find((item) => item.resolution >= 360 && item.resolution < 720);\n                }\n\n                if (level) {\n                    this.#player.pause();\n                    this.#player.getMedia().level = level.id;\n                    this.#player.play();\n                }\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        if (connection) {\n            connection.addEventListener('change', this.#events.global.connection, EVENT_OPTIONS);\n        }\n    }\n\n    destroy(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // @ts-ignore\n        const connection = NAV?.connection || NAV?.mozConnection || NAV?.webkitConnection;\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        if (connection) {\n            connection.removeEventListener('change', this.#events.global.connection);\n        }\n        if (detachMenus) {\n            this.#button.removeEventListener('click', this.#events.button.click);\n            this.#button.remove();\n            this.#button.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseover', this.#events.button.mouseover);\n            this.#menu.removeEventListener('mouseout', this.#events.button.mouseout);\n            this.#player.getElement().removeEventListener('controlshidden', this.#events.button.mouseout);\n            this.#menu.remove();\n        }\n    }\n\n    addSettings(): SettingsItem | unknown {\n        const { labels, detachMenus } = this.#player.getOptions();\n        if (detachMenus) {\n            return {};\n        }\n        const subitems = this._formatMenuItems();\n        // Avoid implementing submenu for levels if only 2 options were available\n        return subitems.length > 2\n            ? {\n                  className: 'op-levels__option',\n                  default: this.#defaultLevel || '-1',\n                  key: 'levels',\n                  name: labels?.levels,\n                  subitems,\n              }\n            : {};\n    }\n\n    private _formatMenuItems(): SettingsSubItem[] {\n        const { labels } = this.#player.getOptions();\n        const levels = this._gatherLevels();\n        const total = levels.length;\n        let items = total ? [{ key: '-1', label: labels?.auto }] : [];\n        for (let i = 0; i < total; i++) {\n            const level = levels[i];\n            items = items.filter((el) => el.key !== level.id);\n            items.push({ key: level.id, label: level.label });\n        }\n\n        // Remove duplicated labels\n        return items\n            .reduce((acc: SettingsSubItem[], current) => {\n                const duplicate = acc.find((item) => item.label === current.label);\n                if (!duplicate) {\n                    return acc.concat([current]);\n                }\n                return acc;\n            }, [])\n            .sort((a, b) => (parseInt(a?.label || '', 10) > parseInt(b?.label || '', 10) ? 1 : -1));\n    }\n\n    // @see https://en.wikipedia.org/wiki/Computer_display_standard#Standards\n    private _getResolutionsLabel(height: number): string {\n        const { labels } = this.#player.getOptions();\n        if (height >= 4320) {\n            return '8K';\n        }\n        if (height >= 2160) {\n            return '4K';\n        }\n        if (height >= 1440) {\n            return '1440p';\n        }\n        if (height >= 1080) {\n            return '1080p';\n        }\n        if (height >= 720) {\n            return '720p';\n        }\n        if (height >= 480) {\n            return '480p';\n        }\n        if (height >= 360) {\n            return '360p';\n        }\n        if (height >= 240) {\n            return '240p';\n        }\n        if (height >= 144) {\n            return '144p';\n        }\n        return labels?.auto || '';\n    }\n\n    private _gatherLevels(): Level[] {\n        if (!this.#levels.length) {\n            this.#player.getMedia().levels.forEach((level: Level) => {\n                this.#levels.push({ ...level, label: level.label || this._getResolutionsLabel(level.height) });\n            });\n        }\n        return this.#levels;\n    }\n\n    private _buildMenu(): void {\n        const { detachMenus } = this.#player.getOptions();\n        // Build menu if detachMenu is `true`\n        if (detachMenus) {\n            this.#button.classList.add('op-control--no-hover');\n            this.#menu = document.createElement('div');\n            this.#menu.className = 'op-settings op-levels__menu';\n            this.#menu.setAttribute('aria-hidden', 'true');\n            const className = 'op-levels__option';\n            const options = this._formatMenuItems();\n\n            // Store the submenu to reach all options for current menu item\n            const menu = `<div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-levels\">\n                ${options\n                    .map(\n                        (item) => `\n                <div class=\"op-settings__submenu-item\" tabindex=\"0\" role=\"menuitemradio\"\n                    aria-checked=\"${this.#defaultLevel === item.key ? 'true' : 'false'}\">\n                    <div class=\"op-settings__submenu-label ${className || ''}\" data-value=\"levels-${item.key}\">${\n                            item.label\n                        }</div>\n                </div>`\n                    )\n                    .join('')}\n            </div>`;\n            this.#menu.innerHTML = menu;\n\n            const itemContainer = document.createElement('div');\n            itemContainer.className = `op-controls__container op-control__${this.#controlPosition}`;\n            itemContainer.appendChild(this.#button);\n            itemContainer.appendChild(this.#menu);\n            this.#player.getControls().getLayer(this.#controlLayer).appendChild(itemContainer);\n        }\n    }\n}\n\nexport default Levels;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio } from '../utils/general';\n\nclass Play implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__playpause op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.play || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.play || '');\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n\n        this.#events.button = (e: Event): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n\n            if (el.paused || el.ended) {\n                if (this.#player.getAd()) {\n                    this.#player.getAd().playRequested = true;\n                }\n\n                el.play();\n                this.#events.media.play();\n            } else {\n                el.pause();\n                this.#events.media.pause();\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.play = (): void => {\n            if (this.#player.activeElement().ended) {\n                if (this.#player.isMedia()) {\n                    this.#button.classList.add('op-controls__playpause--replay');\n                } else {\n                    this.#button.classList.add('op-controls__playpause--pause');\n                }\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n\n                if (this.#player.getOptions()?.pauseOthers) {\n                    Object.keys(Player.instances).forEach((key) => {\n                        if (key !== this.#player.id) {\n                            const target = Player.instances[key].activeElement();\n                            target.pause();\n                        }\n                    });\n                }\n            }\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            if (this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n                this.#button.title = labels?.play || '';\n                this.#button.setAttribute('aria-label', labels?.play || '');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (!this.#button.classList.contains('op-controls__playpause--pause')) {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n                this.#button.title = labels?.pause || '';\n                this.#button.setAttribute('aria-label', labels?.pause || '');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            this.#button.classList.remove('op-controls__playpause--pause');\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.ended = (): void => {\n            if (this.#player.activeElement().ended && this.#player.isMedia()) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else if (\n                this.#player.getElement().currentTime >= this.#player.getElement().duration ||\n                this.#player.getElement().currentTime <= 0\n            ) {\n                this.#button.classList.add('op-controls__playpause--replay');\n                this.#button.classList.remove('op-controls__playpause--pause');\n            } else {\n                this.#button.classList.remove('op-controls__playpause--replay');\n                this.#button.classList.add('op-controls__playpause--pause');\n            }\n            this.#button.title = labels?.play || '';\n            this.#button.setAttribute('aria-label', labels?.play || '');\n        };\n        this.#events.media.adsmediaended = (): void => {\n            this.#button.classList.remove('op-controls__playpause--replay');\n            this.#button.classList.add('op-controls__playpause--pause');\n            this.#button.title = labels?.pause || '';\n            this.#button.setAttribute('aria-label', labels?.pause || '');\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl) {\n                const el = this.#player.activeElement();\n                el.pause();\n            }\n        };\n\n        const element = this.#player.getElement();\n        this.#events.controls.controlschanged = (): void => {\n            if (!this.#player.activeElement().paused) {\n                const event = addEvent('playing');\n                element.dispatchEvent(event);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            element.addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            element.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#button.addEventListener('click', this.#events.button, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        if (this.#player.getOptions().media?.pauseOnClick) {\n            this.#player.getElement().removeEventListener('click', this.#events.button);\n        }\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#button.removeEventListener('click', this.#events.button);\n        this.#button.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__playpause');\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            this.#events.button(e);\n        }\n    }\n}\n\nexport default Play;\n","export function formatTime(seconds: number, frameRate?: number): string {\n    const f = Math.floor((seconds % 1) * (frameRate || 0));\n    let s = Math.floor(seconds);\n    let m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const wrap = (value: number): string => {\n        const formattedVal = value.toString();\n        if (value < 10) {\n            if (value <= 0) {\n                return '00';\n            }\n            return `0${formattedVal}`;\n        }\n        return formattedVal;\n    };\n    m %= 60;\n    s %= 60;\n    return `${h > 0 ? `${wrap(h)}:` : ''}${wrap(m)}:${wrap(s)}${f ? `:${wrap(f)}` : ''}`;\n}\n\n// @see https://en.wikipedia.org/wiki/SMPTE_timecode\nexport function timeToSeconds(timeCode: string): number {\n    const time = timeCode.replace(/;/g, ':').split(':');\n    let seconds = 0;\n    // Hours found; use different calculation\n    if (time.length === 3) {\n        seconds += parseFloat(time[0]) * 60 * 60;\n        seconds += parseFloat(time[1]) * 60;\n        seconds += parseFloat(time[2]);\n    } else {\n        seconds += parseFloat(time[0]) * 60;\n        seconds += parseFloat(time[1]);\n    }\n    return seconds;\n}\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { isAudio, offset } from '../utils/general';\nimport { formatTime } from '../utils/time';\n\nclass Progress implements PlayerComponent {\n    #player: Player;\n\n    #progress: HTMLDivElement;\n\n    #slider: HTMLInputElement;\n\n    #buffer: HTMLProgressElement;\n\n    #played: HTMLProgressElement;\n\n    #tooltip: HTMLSpanElement;\n\n    #events: EventsList = {\n        container: {},\n        controls: {},\n        global: {},\n        media: {},\n        slider: {},\n    };\n\n    #forcePause = false;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n        this.#progress = document.createElement('div');\n        this.#progress.className = `op-controls__progress op-control__${this.#controlPosition}`;\n        this.#progress.tabIndex = 0;\n        this.#progress.setAttribute('aria-label', labels?.progressSlider || '');\n        this.#progress.setAttribute('aria-valuemin', '0');\n        this.#progress.setAttribute('aria-valuenow', '0');\n        this.#progress.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__progress--seek';\n        this.#slider.tabIndex = -1;\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.value = '0';\n        this.#slider.setAttribute('aria-label', labels?.progressRail || '');\n        this.#slider.setAttribute('role', 'slider');\n\n        this.#buffer = document.createElement('progress');\n        this.#buffer.className = 'op-controls__progress--buffer';\n        this.#buffer.setAttribute('max', '100');\n        this.#buffer.value = 0;\n\n        this.#played = document.createElement('progress');\n        this.#played.className = 'op-controls__progress--played';\n        this.#played.setAttribute('max', '100');\n        this.#played.value = 0;\n\n        this.#progress.appendChild(this.#slider);\n        this.#progress.appendChild(this.#played);\n        this.#progress.appendChild(this.#buffer);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip = document.createElement('span');\n            this.#tooltip.className = 'op-controls__tooltip';\n            this.#tooltip.tabIndex = -1;\n            this.#tooltip.innerHTML = '00:00';\n            this.#progress.appendChild(this.#tooltip);\n        }\n\n        const setInitialProgress = (): void => {\n            if (this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n                this.#slider.value = current.toString();\n                if (!Number.isNaN(el.duration)) {\n                    this.#slider.setAttribute('max', `${el.duration}`);\n                    this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n                }\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                this.#slider.setAttribute('max', '1');\n                this.#slider.value = '1';\n                this.#slider.style.backgroundSize = '100% 100%';\n                this.#played.value = 1;\n                this.#progress.setAttribute('aria-valuemax', '1');\n                this.#progress.setAttribute('aria-hidden', 'false');\n            } else if (!this.#player.getOptions().live?.showProgress) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        let lastCurrentTime = 0;\n        const defaultDuration = this.#player.getOptions().progress?.duration || 0;\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        this.#events.media.loadedmetadata = setInitialProgress.bind(this);\n        this.#events.controls.controlschanged = setInitialProgress.bind(this);\n\n        this.#events.media.progress = (e: Event): void => {\n            const el = e.target as HTMLMediaElement;\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (el.duration > 0) {\n                    for (let i = 0, total = el.buffered.length; i < total; i++) {\n                        if (el.buffered.start(el.buffered.length - 1 - i) < el.currentTime) {\n                            this.#buffer.value = (el.buffered.end(el.buffered.length - 1 - i) / el.duration) * 100;\n                            break;\n                        }\n                    }\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n        this.#events.media.waiting = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('loading')) {\n                this.#slider.classList.add('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.playererror = (): void => {\n            if (isAudioEl && !this.#slider.classList.contains('error')) {\n                this.#slider.classList.add('error');\n            }\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n        };\n        this.#events.media.pause = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                const current = el.currentTime;\n                this.#progress.setAttribute('aria-valuenow', current.toString());\n                this.#progress.setAttribute('aria-valuetext', formatTime(current));\n            }\n        };\n        this.#events.media.play = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n            if (\n                this.#player.activeElement().duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled')\n            ) {\n                this.#progress.removeAttribute('aria-valuenow');\n                this.#progress.removeAttribute('aria-valuetext');\n            }\n        };\n        this.#events.media.playing = (): void => {\n            if (isAudioEl && this.#slider.classList.contains('loading')) {\n                this.#slider.classList.remove('loading');\n            }\n            if (isAudioEl && this.#slider.classList.contains('error')) {\n                this.#slider.classList.remove('error');\n            }\n        };\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                (!this.#player.getElement().getAttribute('op-live__enabled') ||\n                    this.#player.getElement().getAttribute('op-dvr__enabled'))\n            ) {\n                if (\n                    !this.#slider.getAttribute('max') ||\n                    this.#slider.getAttribute('max') === '0' ||\n                    parseFloat(this.#slider.getAttribute('max') || '-1') !== el.duration\n                ) {\n                    if (!Number.isNaN(el.duration)) {\n                        this.#slider.setAttribute('max', `${el.duration}`);\n                    }\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n\n                // Adjust current time between Media and Ads; with the latter, it is convenient to add an extra\n                // second to ensure it will reach the end of the rail\n                const duration = el.duration - el.currentTime + 1 >= 100 ? 100 : el.duration - el.currentTime + 1;\n                const current = this.#player.isMedia() ? el.currentTime : duration;\n                const min = parseFloat(this.#slider.min);\n                const max = parseFloat(this.#slider.max);\n                this.#slider.value = current.toString();\n                this.#slider.style.backgroundSize = `${((current - min) * 100) / (max - min)}% 100%`;\n                this.#played.value =\n                    el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                        ? defaultDuration\n                        : (current / el.duration) * 100;\n\n                if (this.#player.getElement().getAttribute('op-dvr__enabled') && Math.floor(this.#played.value) >= 99) {\n                    lastCurrentTime = el.currentTime;\n                    this.#progress.setAttribute('aria-hidden', 'false');\n                }\n            } else if (\n                !this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                this.#progress.getAttribute('aria-hidden') === 'false' &&\n                !this.#player.getOptions().live?.showProgress\n            ) {\n                this.#progress.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.durationchange = (): void => {\n            const el = this.#player.activeElement();\n            const current = this.#player.isMedia() ? el.currentTime : el.duration - el.currentTime;\n            if (!Number.isNaN(el.duration)) {\n                this.#slider.setAttribute('max', `${el.duration}`);\n                this.#progress.setAttribute('aria-valuemax', el.duration.toString());\n            }\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (current / el.duration) * 100;\n        };\n\n        this.#events.media.ended = (): void => {\n            this.#slider.style.backgroundSize = '0% 100%';\n            if (this.#slider.getAttribute('max')) {\n                this.#slider.setAttribute('max', '0');\n            }\n            this.#buffer.value = 0;\n            this.#played.value = 0;\n        };\n\n        const updateSlider = (e: Event): void => {\n            const el = this.#player.activeElement();\n            const target = e.target as HTMLInputElement;\n            const value = parseFloat(target.value);\n            if (\n                this.#slider.classList.contains('op-progress--pressed') ||\n                (value < el.currentTime && !progress?.allowRewind) ||\n                (value > el.currentTime && !progress?.allowSkip)\n            ) {\n                this.#slider.value = el.currentTime.toString();\n                return;\n            }\n            this.#slider.classList.add('.op-progress--pressed');\n\n            const min = parseFloat(target.min);\n            const max = parseFloat(target.max);\n            const val = parseFloat(target.value);\n            this.#slider.style.backgroundSize = `${((val - min) * 100) / (max - min)}% 100%`;\n            this.#played.value =\n                el.duration <= 0 || Number.isNaN(el.duration) || !Number.isFinite(el.duration)\n                    ? defaultDuration\n                    : (val / el.duration) * 100;\n\n            if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                el.currentTime = Math.round(this.#played.value) >= 99 ? lastCurrentTime : val;\n            } else {\n                el.currentTime = val;\n            }\n\n            this.#slider.classList.remove('.op-progress--pressed');\n        };\n\n        const forcePause = (e: KeyboardEvent): void => {\n            const el = this.#player.activeElement();\n            const key = e.which || e.keyCode || 0;\n            const target = this.#slider;\n            const value = Math.round(Number(target.value));\n            const current = Math.round(el.currentTime);\n            const isProgressManipulationAllowed =\n                (value < current && progress?.allowRewind) || (value >= current && progress?.allowSkip);\n\n            // If current progress is not related to an Ad, manipulate current time\n            if (isProgressManipulationAllowed && (key === 1 || key === 0) && this.#player.isMedia() && !el.paused) {\n                el.pause();\n                this.#forcePause = true;\n            }\n        };\n\n        const releasePause = (): void => {\n            const el = this.#player.activeElement();\n            if (this.#forcePause === true && this.#player.isMedia()) {\n                if (el.paused) {\n                    el.play();\n                    this.#forcePause = false;\n                }\n            }\n        };\n\n        // When tapping on mobile, it will update the time and force pause\n        const mobileForcePause = (e: TouchEvent): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity) {\n                const { changedTouches } = e;\n                const x = changedTouches[0]?.pageX || 0;\n                const pos = x - offset(this.#progress).left;\n                const percentage = pos / this.#progress.offsetWidth;\n                const time = percentage * el.duration;\n\n                if (\n                    (time < el.currentTime && progress?.allowRewind) ||\n                    (time > el.currentTime && progress?.allowSkip)\n                ) {\n                    this.#slider.value = time.toString();\n                    updateSlider(e);\n                    if (!el.paused) {\n                        el.pause();\n                        this.#forcePause = true;\n                    }\n                }\n            }\n        };\n\n        this.#events.slider.input = updateSlider.bind(this);\n        this.#events.slider.change = updateSlider.bind(this);\n        this.#events.slider.mousedown = forcePause.bind(this);\n        this.#events.slider.mouseup = releasePause.bind(this);\n        this.#events.slider.touchstart = mobileForcePause.bind(this);\n        this.#events.slider.touchend = releasePause.bind(this);\n\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#events.container.mousemove = (e: MouseEvent): void => {\n                const el = this.#player.activeElement();\n                if (el.duration !== Infinity && !this.#player.isAd()) {\n                    const x = e.pageX;\n\n                    let pos = x - offset(this.#progress).left;\n                    const half = this.#tooltip.offsetWidth / 2;\n                    const percentage = pos / this.#progress.offsetWidth;\n                    const time = percentage * el.duration;\n                    const mediaContainer = this.#player.getContainer();\n                    const limit = mediaContainer.offsetWidth - this.#tooltip.offsetWidth;\n\n                    if (pos <= 0 || x - offset(mediaContainer).left <= half) {\n                        pos = 0;\n                    } else if (x - offset(mediaContainer).left >= limit) {\n                        pos = limit - offset(this.#slider).left - 10;\n                    } else {\n                        pos -= half;\n                    }\n\n                    if (percentage >= 0 && percentage <= 1) {\n                        this.#tooltip.classList.add('op-controls__tooltip--visible');\n                    } else {\n                        this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                    }\n\n                    this.#tooltip.style.left = `${pos}px`;\n                    this.#tooltip.innerHTML = Number.isNaN(time) ? '00:00' : formatTime(time);\n                }\n            };\n            this.#events.global.mousemove = (e: MouseEvent): void => {\n                if (!(e.target as HTMLElement).closest('.op-controls__progress') || this.#player.isAd()) {\n                    this.#tooltip.classList.remove('op-controls__tooltip--visible');\n                }\n            };\n        }\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#progress.addEventListener('keydown', this.#player.getEvents().keydown, EVENT_OPTIONS);\n        this.#progress.addEventListener('mousemove', this.#events.container.mousemove, EVENT_OPTIONS);\n        document.addEventListener('mousemove', this.#events.global.mousemove, EVENT_OPTIONS);\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#progress);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#progress.removeEventListener('keydown', this.#player.getEvents().keydown);\n        this.#progress.removeEventListener('mousemove', this.#events.container.mousemove);\n\n        document.removeEventListener('mousemove', this.#events.global.mousemove);\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#buffer.remove();\n        this.#played.remove();\n        this.#slider.remove();\n        if (!IS_IOS && !IS_ANDROID) {\n            this.#tooltip.remove();\n        }\n        this.#progress.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const el = this.#player.activeElement();\n        const isAd = this.#player.isAd();\n        const key = e.which || e.keyCode || 0;\n        // Use the 0-9 keys to manipulate current media time to set media (not Ads) to the 0% to 90% of duration.\n        if (!isAd && key >= 48 && key <= 57 && el.duration !== Infinity) {\n            let step = 0;\n            for (let i = 48, limit = 57; i <= limit; i++) {\n                if (i < key) {\n                    step++;\n                }\n            }\n            el.currentTime = el.duration * (0.1 * step);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Progress;\n","import { EventsList, PlayerComponent, SettingsItem, SettingsSubItem, SettingsSubMenu } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { sanitize } from '../utils/general';\n\nclass Settings implements PlayerComponent {\n    #player: Player;\n\n    #submenu: SettingsSubMenu = {};\n\n    #button: HTMLButtonElement;\n\n    #menu: HTMLElement;\n\n    #events: EventsList = {\n        global: {},\n        media: {},\n    };\n\n    #originalOutput = '';\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    private clickEvent: () => void;\n\n    private hideEvent: () => void;\n\n    private removeEvent: (e: CustomEvent) => void;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#button = document.createElement('button');\n        this.#button.className = `op-controls__settings op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.settings || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.settings || '');\n\n        this.#menu = document.createElement('div');\n        this.#menu.className = 'op-settings';\n        this.#menu.setAttribute('aria-hidden', 'true');\n        this.#menu.innerHTML = '<div class=\"op-settings__menu\" role=\"menu\"></div>';\n\n        this.clickEvent = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n            for (let i = 0, total = menus.length; i < total; ++i) {\n                if (menus[i] !== this.#menu) {\n                    menus[i].setAttribute('aria-hidden', 'true');\n                }\n            }\n            this.#menu.setAttribute(\n                'aria-hidden',\n                this.#menu.getAttribute('aria-hidden') === 'false' ? 'true' : 'false'\n            );\n        };\n\n        this.hideEvent = (): void => {\n            let timeout;\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame((): void => {\n                    this.#menu.innerHTML = this.#originalOutput;\n                    this.#menu.setAttribute('aria-hidden', 'true');\n                });\n            }\n        };\n\n        this.removeEvent = (e: CustomEvent): void => {\n            const { id, type } = e.detail;\n            this.removeItem(id, type);\n        };\n\n        this.clickEvent = this.clickEvent.bind(this);\n        this.hideEvent = this.hideEvent.bind(this);\n        this.removeEvent = this.removeEvent.bind(this);\n\n        this.#events.media.controlshidden = this.hideEvent.bind(this);\n        this.#events.media.settingremoved = this.removeEvent.bind(this);\n        this.#events.media.play = this.hideEvent.bind(this);\n        this.#events.media.pause = this.hideEvent.bind(this);\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        this.#events.global.click = (e: Event): void => {\n            const { target } = e;\n            const current = target as HTMLElement;\n            if (current?.closest(`#${this.#player.id}`) && current?.classList.contains('op-speed__option')) {\n                const level = current?.getAttribute('data-value') || '';\n                this.#player.getMedia().playbackRate = parseFloat(level.replace('speed-', ''));\n            }\n        };\n        this.#events.global.resize = this.hideEvent.bind(this);\n\n        this.#button.addEventListener('click', this.clickEvent, EVENT_OPTIONS);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n        document.addEventListener('click', this.#events.global.click, EVENT_OPTIONS);\n        document.addEventListener('keydown', this.#events.global.click, EVENT_OPTIONS);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this.#events.global.resize, EVENT_OPTIONS);\n        }\n\n        this.#player.getControls().getLayer(this.#controlLayer).appendChild(this.#button);\n        this.#player.getContainer().appendChild(this.#menu);\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.clickEvent);\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n        document.removeEventListener('click', this.#events.global.click);\n        document.removeEventListener('keydown', this.#events.global.click);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this.#events.global.resize);\n        }\n        if (this.#events.global['settings.submenu'] !== undefined) {\n            document.removeEventListener('click', this.#events.global['settings.submenu']);\n            this.#player.getElement().removeEventListener('controlshidden', this.hideEvent);\n        }\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#menu.remove();\n        this.#button.remove();\n    }\n\n    addSettings(): SettingsItem {\n        const media = this.#player.getMedia();\n        const { labels } = this.#player.getOptions();\n\n        let rate = 1;\n        if (this.#player && media) {\n            rate = media.defaultPlaybackRate !== media.playbackRate ? media.playbackRate : media.defaultPlaybackRate;\n        }\n        return {\n            className: 'op-speed__option',\n            default: rate.toString(),\n            key: 'speed',\n            name: labels?.speed || '',\n            subitems: [\n                { key: '0.25', label: '0.25' },\n                { key: '0.5', label: '0.5' },\n                { key: '0.75', label: '0.75' },\n                { key: '1', label: labels?.speedNormal || '' },\n                { key: '1.25', label: '1.25' },\n                { key: '1.5', label: '1.5' },\n                { key: '2', label: '2' },\n            ],\n        };\n    }\n\n    addItem(name: string, key: string, defaultValue: string, submenu?: SettingsSubItem[], className?: string): void {\n        // Build the menu entry first\n        const dataValue = `${key}-${sanitize(defaultValue, true)}`;\n        const menuItem = document.createElement('div');\n        menuItem.className = 'op-settings__menu-item';\n        menuItem.tabIndex = 0;\n        menuItem.setAttribute('role', 'menuitemradio');\n        menuItem.innerHTML = `<div class=\"op-settings__menu-label\" data-value=\"${dataValue}\">${name}</div>`;\n\n        const submenuMatch = submenu ? submenu.find((x) => x.key === defaultValue) : null;\n        if (submenuMatch) {\n            menuItem.innerHTML += `<div class=\"op-settings__menu-content\" tabindex=\"0\">${submenuMatch.label}</div>`;\n        }\n\n        const mainMenu = this.#menu.querySelector('.op-settings__menu');\n        if (mainMenu) {\n            mainMenu.appendChild(menuItem);\n        }\n        this.#originalOutput = this.#menu.innerHTML;\n\n        // Store the submenu to reach all options for current menu item\n        if (submenu) {\n            const subItems = `\n                <div class=\"op-settings__header\">\n                    <button type=\"button\" class=\"op-settings__back\" tabindex=\"0\">${name}</button>\n                </div>\n                <div class=\"op-settings__menu\" role=\"menu\" id=\"menu-item-${key}\">\n                    ${submenu\n                        .map(\n                            (item: SettingsSubItem) => `\n                    <div class=\"op-settings__submenu-item\" role=\"menuitemradio\" aria-checked=\"${\n                        defaultValue === item.key ? 'true' : 'false'\n                    }\">\n                        <div class=\"op-settings__submenu-label ${className || ''}\" tabindex=\"0\" data-value=\"${key}-${\n                                item.key\n                            }\">\n                            ${item.label}\n                        </div>\n                    </div>`\n                        )\n                        .join('')}\n                </div>`;\n            this.#submenu[key] = subItems;\n        }\n\n        this.#events.global['settings.submenu'] = (e: Event): void => {\n            const target = e.target as HTMLElement;\n            if (target.closest(`#${this.#player.id}`)) {\n                if (target.classList.contains('op-settings__back')) {\n                    this.#menu.classList.add('op-settings--sliding');\n                    setTimeout((): void => {\n                        this.#menu.innerHTML = this.#originalOutput;\n                        this.#menu.classList.remove('op-settings--sliding');\n                    }, 100);\n                } else if (target.classList.contains('op-settings__menu-content')) {\n                    const labelEl = target.parentElement\n                        ? target.parentElement.querySelector('.op-settings__menu-label')\n                        : null;\n                    const label = labelEl ? labelEl.getAttribute('data-value') : null;\n                    const fragments = label ? label.split('-') : [];\n                    if (fragments.length > 0) {\n                        fragments.pop();\n\n                        // eslint-disable-next-line no-useless-escape\n                        const current = fragments.join('-').replace(/^\\-|\\-$/, '');\n                        if (typeof this.#submenu[current] !== 'undefined') {\n                            this.#menu.classList.add('op-settings--sliding');\n                            setTimeout((): void => {\n                                this.#menu.innerHTML = this.#submenu[current];\n                                this.#menu.classList.remove('op-settings--sliding');\n                            }, 100);\n                        }\n                    }\n                } else if (target.classList.contains('op-settings__submenu-label')) {\n                    const current = target.getAttribute('data-value');\n                    const value = current ? current.replace(`${key}-`, '') : '';\n                    const label = target.innerText;\n\n                    // Update values in submenu and store\n                    const menuTarget = this.#menu.querySelector(\n                        `#menu-item-${key} .op-settings__submenu-item[aria-checked=true]`\n                    );\n                    if (menuTarget) {\n                        menuTarget.setAttribute('aria-checked', 'false');\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-checked', 'true');\n                        }\n                        this.#submenu[key] = this.#menu.innerHTML;\n\n                        // Restore original menu, and set the new value\n                        this.#menu.classList.add('op-settings--sliding');\n                        setTimeout((): void => {\n                            this.#menu.innerHTML = this.#originalOutput;\n                            const prev = this.#menu.querySelector(\n                                `.op-settings__menu-label[data-value=\"${key}-${defaultValue}\"]`\n                            );\n                            if (prev) {\n                                prev.setAttribute('data-value', `${current}`);\n                                if (prev.nextElementSibling) {\n                                    prev.nextElementSibling.textContent = label;\n                                }\n                            }\n                            defaultValue = value;\n                            this.#originalOutput = this.#menu.innerHTML;\n                            this.#menu.classList.remove('op-settings--sliding');\n                        }, 100);\n                    }\n                }\n            } else {\n                this.hideEvent();\n            }\n        };\n\n        document.addEventListener('click', this.#events.global['settings.submenu'], EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('controlshidden', this.hideEvent, EVENT_OPTIONS);\n    }\n\n    removeItem(id: string | number, type: string, minItems = 2): void {\n        const target = this.#player.getElement().querySelector(`.op-settings__submenu-label[data-value=${type}-${id}]`);\n        if (target) {\n            target.remove();\n        }\n\n        if (\n            this.#player.getElement().querySelectorAll(`.op-settings__submenu-label[data-value^=${type}]`).length <\n            minItems\n        ) {\n            delete this.#submenu[type];\n            const label = this.#player.getElement().querySelector(`.op-settings__menu-label[data-value^=${type}]`);\n            const menuItem = label ? label.closest('.op-settings__menu-item') : null;\n            if (menuItem) {\n                menuItem.remove();\n            }\n        }\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const isAd = this.#player.isAd();\n        const settingsBtnFocused = document?.activeElement?.classList.contains('op-controls__settings');\n\n        const menuFocused =\n            document?.activeElement?.classList.contains('op-settings__menu-content') ||\n            document?.activeElement?.classList.contains('op-settings__back') ||\n            document?.activeElement?.classList.contains('op-settings__submenu-label');\n        if (!isAd) {\n            if (settingsBtnFocused && (key === 13 || key === 32)) {\n                this.clickEvent();\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (menuFocused && (key === 13 || key === 32)) {\n                this.#events.global['settings.submenu'](e);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n}\n\nexport default Settings;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS } from '../utils/constants';\nimport { formatTime } from '../utils/time';\n\nclass Time implements PlayerComponent {\n    #player: Player;\n\n    #currentTime: HTMLTimeElement;\n\n    #delimiter: HTMLSpanElement;\n\n    #duration: HTMLTimeElement;\n\n    #container: HTMLSpanElement;\n\n    #events: EventsList = {\n        controls: {},\n        media: {},\n    };\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n    }\n\n    create(): void {\n        const { labels, progress } = this.#player.getOptions();\n\n        this.#currentTime = document.createElement('time');\n        this.#currentTime.className = 'op-controls__current';\n        this.#currentTime.setAttribute('role', 'timer');\n        this.#currentTime.setAttribute('aria-live', 'off');\n        this.#currentTime.setAttribute('aria-hidden', 'false');\n        this.#currentTime.innerText = '0:00';\n\n        const showOnlyCurrent = progress?.showCurrentTimeOnly || false;\n\n        if (!showOnlyCurrent) {\n            this.#delimiter = document.createElement('span');\n            this.#delimiter.className = 'op-controls__time-delimiter';\n            this.#delimiter.setAttribute('aria-hidden', 'false');\n            this.#delimiter.innerText = '/';\n\n            this.#duration = document.createElement('time');\n            this.#duration.className = 'op-controls__duration';\n            this.#duration.setAttribute('aria-hidden', 'false');\n            this.#duration.innerText = formatTime(progress?.duration || 0);\n        }\n\n        const controls = this.#player.getControls().getLayer(this.#controlLayer);\n        this.#container = document.createElement('span');\n        this.#container.className = `op-controls-time op-control__${this.#controlPosition}`;\n        this.#container.appendChild(this.#currentTime);\n        if (!showOnlyCurrent) {\n            this.#container.appendChild(this.#delimiter);\n            this.#container.appendChild(this.#duration);\n        }\n        controls.appendChild(this.#container);\n\n        const setInitialTime = (): void => {\n            const el = this.#player.activeElement();\n            if (el.duration !== Infinity && !this.#player.getElement().getAttribute('op-live__enabled')) {\n                if (!showOnlyCurrent) {\n                    const duration = !Number.isNaN(el.duration)\n                        ? el.duration\n                        : this.#player.getOptions().progress?.duration || 0;\n                    this.#duration.innerText = formatTime(duration);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (!showOnlyCurrent) {\n                this.#duration.setAttribute('aria-hidden', 'true');\n                this.#delimiter.setAttribute('aria-hidden', 'true');\n            }\n        };\n\n        this.#events.media.loadedmetadata = setInitialTime.bind(this);\n        this.#events.controls.controlschanged = setInitialTime.bind(this);\n\n        const { showLabel: showLiveLabel } = this.#player.getOptions().live || {};\n\n        this.#events.media.timeupdate = (): void => {\n            const el = this.#player.activeElement();\n            if (\n                el.duration !== Infinity &&\n                !this.#player.getElement().getAttribute('op-live__enabled') &&\n                !this.#player.getElement().getAttribute('op-dvr__enabled')\n            ) {\n                const duration = formatTime(el.duration);\n                if (!showOnlyCurrent && !Number.isNaN(el.duration) && duration !== this.#duration.innerText) {\n                    this.#duration.innerText = duration;\n                    this.#duration.setAttribute('aria-hidden', 'false');\n                    this.#delimiter.setAttribute('aria-hidden', 'false');\n                } else if (showOnlyCurrent || duration !== this.#duration.innerText) {\n                    this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (this.#player.getElement().getAttribute('op-dvr__enabled')) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = formatTime(el.currentTime);\n            } else if (\n                showOnlyCurrent ||\n                (!this.#player.getElement().getAttribute('op-dvr__enabled') &&\n                    this.#duration.getAttribute('aria-hidden') === 'false')\n            ) {\n                if (!showOnlyCurrent) {\n                    this.#duration.setAttribute('aria-hidden', 'true');\n                    this.#delimiter.setAttribute('aria-hidden', 'true');\n                }\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            } else {\n                this.#currentTime.innerText = showLiveLabel ? labels?.live || '' : formatTime(el.currentTime);\n            }\n        };\n        this.#events.media.ended = (): void => {\n            const el = this.#player.activeElement();\n            const duration = !Number.isNaN(el.duration)\n                ? el.duration\n                : this.#player.getOptions().progress?.duration || 0;\n            if (!showOnlyCurrent && this.#player.isMedia()) {\n                this.#duration.innerText = formatTime(duration);\n            }\n        };\n\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .addEventListener('controlschanged', this.#events.controls.controlschanged, EVENT_OPTIONS);\n    }\n\n    destroy(): void {\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        this.#player\n            .getControls()\n            .getContainer()\n            .removeEventListener('controlschanged', this.#events.controls.controlschanged);\n\n        this.#currentTime.remove();\n        const { showCurrentTimeOnly } = this.#player.getOptions().progress || {};\n        if (!showCurrentTimeOnly) {\n            this.#delimiter.remove();\n            this.#duration.remove();\n        }\n        this.#container.remove();\n    }\n}\n\nexport default Time;\n","import { EventsList, PlayerComponent } from '../interfaces';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from '../utils/constants';\nimport { addEvent } from '../utils/general';\n\nclass Volume implements PlayerComponent {\n    #player: Player;\n\n    #button: HTMLButtonElement;\n\n    #container: HTMLDivElement;\n\n    #display: HTMLProgressElement;\n\n    #slider: HTMLInputElement;\n\n    #events: EventsList = {\n        button: {},\n        media: {},\n        slider: {},\n    };\n\n    #volume: number;\n\n    #controlPosition: string;\n\n    #controlLayer: string;\n\n    constructor(player: Player, position: string, layer: string) {\n        this.#player = player;\n        this.#volume = this.#player.getMedia().volume;\n        this.#controlPosition = position;\n        this.#controlLayer = layer;\n        this._enterSpaceKeyEvent = this._enterSpaceKeyEvent.bind(this);\n    }\n\n    create(): void {\n        const { labels } = this.#player.getOptions();\n\n        this.#container = document.createElement('div');\n        this.#container.className = `op-controls__volume op-control__${this.#controlPosition}`;\n        this.#container.tabIndex = 0;\n        this.#container.setAttribute('aria-valuemin', '0');\n        this.#container.setAttribute('aria-valuemax', '100');\n        this.#container.setAttribute('aria-valuenow', `${this.#volume}`);\n        this.#container.setAttribute('aria-valuetext', `${labels?.volume || ''}: ${this.#volume}`);\n        this.#container.setAttribute('aria-orientation', 'vertical');\n        this.#container.setAttribute('aria-label', labels?.volumeSlider || '');\n        this.#container.setAttribute('role', 'slider');\n\n        this.#slider = document.createElement('input');\n        this.#slider.type = 'range';\n        this.#slider.className = 'op-controls__volume--input';\n        this.#slider.tabIndex = -1;\n        this.#slider.value = this.#player.getMedia().volume.toString();\n        this.#slider.setAttribute('min', '0');\n        this.#slider.setAttribute('max', '1');\n        this.#slider.setAttribute('step', '0.1');\n        this.#slider.setAttribute('aria-label', labels?.volumeControl || '');\n\n        this.#display = document.createElement('progress');\n        this.#display.className = 'op-controls__volume--display';\n        this.#display.setAttribute('max', '10');\n        this.#display.value = this.#player.getMedia().volume * 10;\n\n        this.#container.appendChild(this.#slider);\n        this.#container.appendChild(this.#display);\n\n        // Use as backup when mute is clicked\n        this.#button = document.createElement('button');\n        this.#button.type = 'button';\n        this.#button.className = `op-controls__mute op-control__${this.#controlPosition}`;\n        this.#button.tabIndex = 0;\n        this.#button.title = labels?.mute || '';\n        this.#button.setAttribute('aria-controls', this.#player.id);\n        this.#button.setAttribute('aria-pressed', 'false');\n        this.#button.setAttribute('aria-label', labels?.mute || '');\n\n        const updateSlider = (element: any): void => {\n            const mediaVolume = element.volume * 1;\n            const vol = Math.floor(mediaVolume * 100);\n\n            this.#slider.value = `${element.volume}`;\n            this.#display.value = mediaVolume * 10;\n            this.#container.setAttribute('aria-valuenow', `${vol}`);\n            this.#container.setAttribute('aria-valuetext', `${labels?.volume}: ${vol}`);\n        };\n\n        const updateButton = (element: any): void => {\n            const vol = element.volume;\n            if (vol <= 0.5 && vol > 0) {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.add('op-controls__mute--half');\n            } else if (vol === 0) {\n                this.#button.classList.add('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            } else {\n                this.#button.classList.remove('op-controls__mute--muted');\n                this.#button.classList.remove('op-controls__mute--half');\n            }\n        };\n\n        const updateVolume = (event: Event): void => {\n            const el = this.#player.activeElement();\n            const value = parseFloat((event.target as HTMLInputElement).value);\n            el.volume = value;\n            el.muted = el.volume === 0;\n            this.#volume = value;\n            const unmuteEl = this.#player.getContainer().querySelector('.op-player__unmute');\n            if (!el.muted && unmuteEl) {\n                unmuteEl.remove();\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n\n        this.#events.media.volumechange = (): void => {\n            const el = this.#player.activeElement();\n            updateSlider(el);\n            updateButton(el);\n        };\n        this.#events.media.loadedmetadata = (): void => {\n            const el = this.#player.activeElement();\n            if (el.muted) {\n                el.volume = 0;\n            }\n            const e = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(e);\n        };\n        this.#events.slider.input = updateVolume.bind(this);\n        this.#events.slider.change = updateVolume.bind(this);\n\n        this.#events.button.click = (): void => {\n            this.#button.setAttribute('aria-pressed', 'true');\n            const el = this.#player.activeElement();\n            el.muted = !el.muted;\n\n            if (el.muted) {\n                el.volume = 0;\n                this.#button.title = labels?.unmute || '';\n                this.#button.setAttribute('aria-label', labels?.unmute || '');\n            } else {\n                el.volume = this.#volume;\n                this.#button.title = labels?.mute || '';\n                this.#button.setAttribute('aria-label', labels?.mute || '');\n            }\n            const event = addEvent('volumechange');\n            this.#player.getElement().dispatchEvent(event);\n        };\n\n        this.#button.addEventListener('click', this.#events.button.click, EVENT_OPTIONS);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().addEventListener(event, this.#events.media[event], EVENT_OPTIONS);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.addEventListener(event, this.#events.slider[event], EVENT_OPTIONS);\n        });\n\n        this.#player.getContainer().addEventListener('keydown', this._enterSpaceKeyEvent, EVENT_OPTIONS);\n\n        if ((!IS_ANDROID && !IS_IOS) || !this.#player.getOptions().useDeviceVolume) {\n            const controls = this.#player.getControls().getLayer(this.#controlLayer);\n            controls.appendChild(this.#button);\n            controls.appendChild(this.#container);\n        }\n    }\n\n    destroy(): void {\n        this.#button.removeEventListener('click', this.#events.button.click);\n        Object.keys(this.#events.media).forEach((event) => {\n            this.#player.getElement().removeEventListener(event, this.#events.media[event]);\n        });\n\n        Object.keys(this.#events.slider).forEach((event) => {\n            this.#slider.removeEventListener(event, this.#events.slider[event]);\n        });\n\n        this.#player.getContainer().removeEventListener('keydown', this._enterSpaceKeyEvent);\n\n        this.#slider.remove();\n        this.#display.remove();\n        this.#container.remove();\n    }\n\n    private _enterSpaceKeyEvent(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.#player.activeElement();\n        const playBtnFocused = document?.activeElement?.classList.contains('op-controls__mute');\n\n        if (playBtnFocused && (key === 13 || key === 32)) {\n            el.muted = !el.muted;\n            el.volume = el.muted ? 0 : this.#volume;\n            this.#events.button.click();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default Volume;\n","import Captions from './controls/captions';\nimport Fullscreen from './controls/fullscreen';\nimport Levels from './controls/levels';\nimport Play from './controls/play';\nimport Progress from './controls/progress';\nimport Settings from './controls/settings';\nimport Time from './controls/time';\nimport Volume from './controls/volume';\nimport { ElementItem, EventsList, PlayerComponent, PlayerLayers, SettingsItem } from './interfaces';\nimport Player from './player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\n\nclass Controls implements PlayerComponent {\n    events: EventsList = {\n        media: {},\n        mouse: {},\n    };\n\n    #settings: Settings;\n\n    #timer = 0;\n\n    #controls: HTMLDivElement;\n\n    #player: Player;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #items: any;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #controlEls: any = {\n        Captions,\n        Fullscreen,\n        Levels,\n        Play,\n        Progress,\n        Settings,\n        Time,\n        Volume,\n    };\n\n    constructor(player: Player) {\n        this.#player = player;\n        this._setElements();\n    }\n\n    create(): void {\n        this.#player.getElement().controls = false;\n\n        const isMediaVideo = isVideo(this.#player.getElement());\n\n        this._createControlsLayer();\n        this._buildElements();\n\n        this.events.controlschanged = (): void => {\n            this.destroy();\n            this._setElements();\n            this.create();\n        };\n\n        this.events.ended = (): void => {\n            this.#player.getContainer().classList.remove('op-controls--hidden');\n        };\n\n        this.#player.getElement().addEventListener('controlschanged', this.events.controlschanged, EVENT_OPTIONS);\n        this.#player.getElement().addEventListener('ended', this.events.ended, EVENT_OPTIONS);\n\n        const { alwaysVisible } = this.#player.getOptions().controls || {};\n\n        if (!alwaysVisible) {\n            const showControls = (): void => {\n                if (isMediaVideo) {\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._stopControlTimer();\n                }\n            };\n\n            this.events.mouse.mouseenter = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._stopControlTimer();\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                    } else if (this.#player.getOptions().showLoaderOnInit) {\n                        this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                        this.#player.loader.setAttribute('aria-hidden', 'false');\n                    }\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mousemove = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    if (this.#player.activeElement().currentTime) {\n                        this.#player.loader.setAttribute('aria-hidden', 'true');\n                        this.#player.playBtn.setAttribute('aria-hidden', this.#player.isMedia() ? 'false' : 'true');\n                    } else {\n                        this.#player.playBtn.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'true' : 'false'\n                        );\n                        this.#player.loader.setAttribute(\n                            'aria-hidden',\n                            this.#player.getOptions().showLoaderOnInit ? 'false' : 'true'\n                        );\n                    }\n\n                    this.#player.getContainer().classList.remove('op-controls--hidden');\n                    this._startControlTimer(2500);\n                }\n            };\n            this.events.mouse.mouseleave = (): void => {\n                if (isMediaVideo && !this.#player.activeElement().paused) {\n                    this._startControlTimer(1000);\n                }\n            };\n            this.events.media.play = (): void => {\n                if (isMediaVideo) {\n                    this._startControlTimer(this.#player.getOptions().hidePlayBtnTimer || 350);\n                }\n            };\n            this.events.media.loadedmetadata = showControls.bind(this);\n            this.events.media.pause = showControls.bind(this);\n            this.events.media.waiting = showControls.bind(this);\n            this.events.media.stalled = showControls.bind(this);\n            this.events.media.playererror = showControls.bind(this);\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().addEventListener(event, this.events.media[event], EVENT_OPTIONS);\n            });\n\n            if (IS_ANDROID || IS_IOS) {\n                this.#player.getContainer().addEventListener('click', this.events.mouse.mouseenter, EVENT_OPTIONS);\n            } else {\n                Object.keys(this.events.mouse).forEach((event) => {\n                    this.#player.getContainer().addEventListener(event, this.events.mouse[event], EVENT_OPTIONS);\n                });\n            }\n\n            // Initial countdown to hide controls\n            if (isMediaVideo && !this.#player.activeElement().paused) {\n                this._startControlTimer(3000);\n            }\n        }\n    }\n\n    destroy(): void {\n        if (!IS_ANDROID && !IS_IOS) {\n            Object.keys(this.events.mouse).forEach((event) => {\n                this.#player.getContainer().removeEventListener(event, this.events.mouse[event]);\n            });\n\n            Object.keys(this.events.media).forEach((event) => {\n                this.#player.getElement().removeEventListener(event, this.events.media[event]);\n            });\n\n            this._stopControlTimer();\n        }\n\n        this.#player.getElement().removeEventListener('controlschanged', this.events.controlschanged);\n        this.#player.getElement().removeEventListener('ended', this.events.ended);\n\n        Object.keys(this.#items).forEach((position: string) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._destroyCustomElement(item as ElementItem);\n                } else if (typeof (item as PlayerComponent).destroy === 'function') {\n                    (item as PlayerComponent).destroy();\n                }\n            });\n        });\n\n        this.#controls.remove();\n    }\n\n    getContainer(): HTMLDivElement {\n        return this.#controls;\n    }\n\n    getLayer(layer: string): HTMLDivElement {\n        return this.#controls.querySelector(`.op-controls-layer__${layer}`) || this.#controls;\n    }\n\n    private _createControlsLayer(): void {\n        if (!this.#controls || !this.#player.getContainer().querySelector('.op-controls')) {\n            this.#controls = document.createElement('div');\n            this.#controls.className = 'op-controls';\n            this.#player.getContainer().appendChild(this.#controls);\n\n            const messageContainer = document.createElement('div');\n            messageContainer.className = 'op-status';\n            messageContainer.innerHTML = '<span></span>';\n            messageContainer.tabIndex = -1;\n            messageContainer.setAttribute('aria-hidden', 'true');\n\n            if (isAudio(this.#player.getElement())) {\n                this.#controls.appendChild(messageContainer);\n            }\n        }\n    }\n\n    private _startControlTimer(time: number): void {\n        const el = this.#player.activeElement();\n        this._stopControlTimer();\n\n        if (typeof window !== 'undefined') {\n            this.#timer = window.setTimeout(() => {\n                if ((!el.paused || !el.ended) && isVideo(this.#player.getElement())) {\n                    this.#player.getContainer().classList.add('op-controls--hidden');\n                    this.#player.playBtn.setAttribute('aria-hidden', 'true');\n                    this._stopControlTimer();\n                    const event = addEvent('controlshidden');\n                    this.#player.getElement().dispatchEvent(event);\n                }\n            }, time);\n        }\n    }\n\n    private _stopControlTimer(): void {\n        if (this.#timer !== 0) {\n            clearTimeout(this.#timer);\n            this.#timer = 0;\n        }\n    }\n\n    private _setElements(): void {\n        const controls = this.#player.getOptions().controls?.layers || {};\n        this.#items = {\n            'bottom-left': [],\n            'bottom-middle': [],\n            'bottom-right': [],\n            left: [],\n            main: [],\n            middle: [],\n            right: [],\n            'top-left': [],\n            'top-middle': [],\n            'top-right': [],\n        };\n\n        const isVideoEl = isVideo(this.#player.getElement());\n        const isAudioEl = isAudio(this.#player.getElement());\n\n        const controlPositions = Object.keys(controls);\n        const layersExist = controlPositions.find((item) => /^(top|bottom)/.test(item));\n        this._createControlsLayer();\n\n        controlPositions.forEach((position: string) => {\n            const [layer, pos] = position.split('-');\n\n            // Create extra layers if top/bottom exist\n            if (pos) {\n                if (!this.#controls.classList.contains('op-controls__stacked')) {\n                    this.#controls.classList.add('op-controls__stacked');\n                }\n                const className = `op-controls-layer__${layer}`;\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            } else if (layersExist) {\n                const className = 'op-controls-layer__center';\n                if (!this.#controls.querySelector(`.${className}`)) {\n                    const controlLayer = document.createElement('div');\n                    controlLayer.className = className;\n                    this.#controls.appendChild(controlLayer);\n                }\n            }\n\n            const layers = controls ? controls[position as keyof PlayerLayers] : null;\n            if (layers) {\n                // remove duplicate values in the same position\n                layers\n                    .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i)\n                    .forEach((el: string) => {\n                        const currentLayer = layersExist && !pos ? 'center' : layer;\n                        const className = `${el.charAt(0).toUpperCase()}${el.slice(1)}`;\n                        const item = new this.#controlEls[className](this.#player, pos || layer, currentLayer);\n                        if (el === 'settings') {\n                            this.#settings = item as Settings;\n                        }\n                        if (isVideoEl || (el !== 'fullscreen' && isAudioEl)) {\n                            this.#items[position].push(item);\n                        }\n                    });\n            }\n        });\n\n        // Append/prepend the custom items (if any) depending on their position:\n        // If position is right, always prepend so Settings and Fullscreen are the last items;\n        // otherwise, append new controls\n        this.#player.getCustomControls().forEach((item) => {\n            const [layer, pos] = item.position.split('-');\n            const currentLayer = layersExist && !pos ? 'center' : layer;\n            item.layer = currentLayer;\n            item.position = pos || layer;\n\n            if (typeof item.index === 'number') {\n                this.#items[item.position].splice(item.index, 0, item);\n            } else if (item.position === 'right') {\n                this.#items[item.position].unshift(item);\n            } else {\n                this.#items[item.position].push(item);\n            }\n        });\n    }\n\n    private _buildElements(): void {\n        // Loop controls to build them and register events\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                if ((item as ElementItem).custom) {\n                    this._createCustomElement(item as ElementItem);\n                } else {\n                    (item as PlayerComponent).create();\n                }\n            });\n        });\n\n        Object.keys(this.#items).forEach((position) => {\n            this.#items[position].forEach((item: unknown) => {\n                const allowDefault = !this.#player.getOptions().detachMenus || item instanceof Settings;\n                const current = item as PlayerComponent;\n                if (allowDefault && !current.custom && typeof current.addSettings === 'function') {\n                    const menuItem = current.addSettings() as SettingsItem;\n                    if (this.#settings && Object.keys(menuItem).length) {\n                        this.#settings.addItem(\n                            menuItem.name,\n                            menuItem.key,\n                            menuItem.default,\n                            menuItem.subitems,\n                            menuItem.className\n                        );\n                    }\n                }\n            });\n        });\n\n        const e = addEvent('controlschanged');\n        this.#controls.dispatchEvent(e);\n    }\n\n    private _hideCustomMenu(menu: HTMLDivElement): void {\n        let timeout;\n        if (timeout && typeof window !== 'undefined') {\n            window.cancelAnimationFrame(timeout);\n        }\n\n        if (typeof window !== 'undefined') {\n            timeout = window.requestAnimationFrame(() => {\n                menu.setAttribute('aria-hidden', 'true');\n            });\n        }\n    }\n\n    private _toggleCustomMenu(event: Event, menu: HTMLDivElement, item: ElementItem): void {\n        const menus = this.#player.getContainer().querySelectorAll('.op-settings');\n        menus.forEach((m) => {\n            if (m.getAttribute('aria-hidden') === 'false' && m.id !== menu.id) {\n                m.setAttribute('aria-hidden', 'true');\n            }\n        });\n        menu.setAttribute('aria-hidden', menu.getAttribute('aria-hidden') === 'true' ? 'false' : 'true');\n        if (typeof item.click === 'function') {\n            item.click(event);\n        }\n    }\n\n    private _createCustomElement(item: ElementItem): void {\n        const element = document.createElement(item.type);\n        element.tabIndex = 0;\n        element.id = item.id;\n        element.className = `op-controls__${item.id} op-control__${item.position} ${\n            item.showInAds ? '' : 'op-control__hide-in-ad'\n        }`;\n\n        if (item.styles) {\n            Object.assign(element.style, item.styles);\n        }\n\n        if (item.type === 'button' && item.icon) {\n            element.innerHTML = /\\.(jpg|png|svg|gif)$/.test(item.icon)\n                ? `<img src=\"${sanitize(item.icon)}\"${item.alt ? `alt=\"${sanitize(item.alt)}\"` : ''}>`\n                : sanitize(item.icon);\n        } else if (item.content) {\n            element.innerHTML = sanitize(item.content, false);\n        }\n        if (item.type === 'button' && item.title) {\n            element.title = sanitize(item.title);\n        }\n        if (item.type === 'img' && item.alt) {\n            (element as HTMLImageElement).alt = sanitize(item.alt);\n        }\n        if (item.type !== 'button' && item.click && typeof item.click === 'function') {\n            element.setAttribute('aria-role', 'button');\n        }\n\n        // In the event we have subitems for a button control, create menu and attach events for each item\n        if (item.type === 'button' && item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n            const menu = document.createElement('div');\n            menu.className = 'op-settings op-settings__custom';\n            menu.id = `${item.id}-menu`;\n            menu.setAttribute('aria-hidden', 'true');\n\n            const items = item.subitems.map((s) => {\n                let itemIcon = '';\n                if (s.icon) {\n                    itemIcon = /\\.(jpg|png|svg|gif)$/.test(s.icon)\n                        ? `<img src=\"${sanitize(s.icon)}\"${s.alt ? `alt=\"${sanitize(s.alt)}\"` : ''}>`\n                        : sanitize(s.icon, false);\n                }\n                return `<div class=\"op-settings__menu-item\" tabindex=\"0\" ${\n                    s.title ? `title=\"${s.title}\"` : ''\n                } role=\"menuitemradio\">\n                    <div class=\"op-settings__menu-label\" id=\"${s.id}\" data-value=\"${item.id}-${s.id}\">${itemIcon} ${\n                    s.label\n                }</div>\n                </div>`;\n            });\n\n            menu.innerHTML = `<div class=\"op-settings__menu\" role=\"menu\">${items.join('')}</div>`;\n            this.#player.getContainer().appendChild(menu);\n\n            item.subitems.forEach((subitem) => {\n                const menuItem = menu.querySelector(`#${subitem.id}`);\n                if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                    menuItem.addEventListener('click', subitem.click, EVENT_OPTIONS);\n                }\n            });\n\n            // Ensure to toggle menu, hide other settings menus and dispatch a general custom\n            // click event (if created)\n            element.addEventListener('click', (e) => this._toggleCustomMenu(e, menu, item), EVENT_OPTIONS);\n\n            this.#player\n                .getElement()\n                .addEventListener('controlshidden', () => this._hideCustomMenu(menu), EVENT_OPTIONS);\n        } else if (item.click && typeof item.click === 'function') {\n            element.addEventListener('click', item.click, EVENT_OPTIONS);\n        }\n        if (item.mouseenter && typeof item.mouseenter === 'function') {\n            element.addEventListener('mouseenter', item.mouseenter, EVENT_OPTIONS);\n        }\n        if (item.mouseleave && typeof item.mouseleave === 'function') {\n            element.addEventListener('mouseleave', item.mouseleave, EVENT_OPTIONS);\n        }\n        if (item.keydown && typeof item.keydown === 'function') {\n            element.addEventListener('keydown', item.keydown, EVENT_OPTIONS);\n        }\n        if (item.blur && typeof item.blur === 'function') {\n            element.addEventListener('blur', item.blur, EVENT_OPTIONS);\n        }\n        if (item.focus && typeof item.focus === 'function') {\n            element.addEventListener('focus', item.focus, EVENT_OPTIONS);\n        }\n        if (item.layer) {\n            if (item.layer === 'main') {\n                this.#player.getContainer().appendChild(element);\n            } else {\n                this.getLayer(item.layer).appendChild(element);\n            }\n        }\n\n        // If there's an initial set of operations to dispatch as soon as the control\n        // is created, dispatch them\n        if (item.init && typeof item.init === 'function') {\n            item.init(this.#player);\n        }\n    }\n\n    private _destroyCustomElement(item: ElementItem): void {\n        const control = this.getContainer().querySelector(`.op-controls__${item.id}`);\n        if (control) {\n            if (item.subitems && Array.isArray(item.subitems) && item.subitems.length > 0) {\n                const menu = this.#player.getContainer().querySelector(`#${item.id}-menu`) as HTMLDivElement;\n                if (menu) {\n                    item.subitems.forEach((subitem) => {\n                        const menuItem = menu.querySelector(`#${subitem.id}`);\n                        if (menuItem && subitem.click && typeof subitem.click === 'function') {\n                            menuItem.removeEventListener('click', subitem.click);\n                        }\n                    });\n\n                    control.removeEventListener('click', (e) => this._toggleCustomMenu(e, menu, item));\n\n                    this.#player.getElement().removeEventListener('controlshidden', () => this._hideCustomMenu(menu));\n                    menu.remove();\n                }\n            }\n            if (item.click && typeof item.click === 'function') {\n                control.removeEventListener('click', item.click);\n            }\n            if (item.mouseenter && typeof item.mouseenter === 'function') {\n                control.removeEventListener('mouseenter', item.mouseenter);\n            }\n            if (item.mouseleave && typeof item.mouseleave === 'function') {\n                control.removeEventListener('mouseleave', item.mouseleave);\n            }\n            if (item.keydown && typeof item.keydown === 'function') {\n                control.removeEventListener('keydown', item.keydown);\n            }\n            if (item.blur && typeof item.blur === 'function') {\n                control.removeEventListener('blur', item.blur);\n            }\n            if (item.focus && typeof item.focus === 'function') {\n                control.removeEventListener('focus', item.focus);\n            }\n            control.remove();\n\n            // If there's an initial set of operations to dispatch as soon as the control\n            // is created, dispatch them\n            if (item.destroy && typeof item.destroy === 'function') {\n                item.destroy(this.#player);\n            }\n        }\n    }\n}\n\nexport default Controls;\n","import { Level, Source } from '../interfaces';\n\nabstract class Native {\n    element: HTMLMediaElement;\n\n    media: Source;\n\n    promise: Promise<unknown>;\n\n    #customPlayer: any;\n\n    constructor(element: HTMLMediaElement, media: Source) {\n        this.element = element;\n        this.media = media;\n        this.promise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    abstract canPlayType(mimeType: string): boolean;\n\n    abstract load(): void;\n\n    abstract destroy(): void;\n\n    abstract set src(media: Source);\n\n    abstract get src(): Source;\n\n    abstract set level(value: number | string | Record<string, unknown>);\n\n    abstract get level(): number | string;\n\n    abstract get levels(): Level[];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    set instance(customPlayer: any) {\n        this.#customPlayer = customPlayer;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get instance(): any {\n        return this.#customPlayer;\n    }\n\n    play(): Promise<void> {\n        return this.element.play();\n    }\n\n    pause(): void {\n        this.element.pause();\n    }\n\n    set volume(value: number) {\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    set muted(value: boolean) {\n        this.element.muted = value;\n    }\n\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set playbackRate(value: number) {\n        this.element.playbackRate = value;\n    }\n\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value: number) {\n        this.element.defaultPlaybackRate = value;\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        this.element.currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    get ended(): boolean {\n        return this.element.ended;\n    }\n}\n\nexport default Native;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isDashSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const dashjs: any;\n\nclass DashMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    #events: EventsList = {};\n\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n\n        this._assign = this._assign.bind(this);\n        this._preparePlayer = this._preparePlayer.bind(this);\n\n        this.promise =\n            typeof dashjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.dashjs.org/latest/dash.all.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(() => {\n            this.#player = dashjs.MediaPlayer().create();\n            this.instance = this.#player;\n        });\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && mimeType === 'application/dash+xml';\n    }\n\n    load(): void {\n        this._preparePlayer();\n        this.#player.attachSource(this.media.src);\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], this._assign);\n            });\n            this.#events = [];\n        }\n        this.#player.reset();\n    }\n\n    set src(media: Source) {\n        if (isDashSource(media)) {\n            this.destroy();\n            this.#player = dashjs.MediaPlayer().create();\n            this._preparePlayer();\n            this.#player.attachSource(media.src);\n\n            this.#events = dashjs.MediaPlayer.events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], this._assign);\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player) {\n            const bitrates = this.#player.getBitrateInfoListFor('video');\n            if (bitrates.length) {\n                bitrates.forEach((item: number) => {\n                    if (bitrates[item]) {\n                        const { height, name } = bitrates[item];\n                        const level = {\n                            height,\n                            id: `${item}`,\n                            label: name || null,\n                        };\n                        levels.push(level);\n                    }\n                });\n            }\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        if (level === '0') {\n            this.#player.setAutoSwitchQuality(true);\n        } else {\n            this.#player.setAutoSwitchQuality(false);\n            this.#player.setQualityFor('video', level);\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.getQualityFor('video') : '-1';\n    }\n\n    // @see http://cdn.dashjs.org/latest/jsdoc/MediaPlayerEvents.html\n    private _assign(event: Event): void {\n        if (event.type === 'error') {\n            const details = {\n                detail: {\n                    message: event,\n                    type: 'M(PEG)-DASH',\n                },\n            };\n            const errorEvent = addEvent('playererror', details);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event.type, { detail: event });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _preparePlayer(): void {\n        this.#player.updateSettings({\n            debug: {\n                logLevel: dashjs.Debug.LOG_LEVEL_NONE,\n            },\n            streaming: {\n                fastSwitchEnabled: true,\n                scheduleWhilePaused: false,\n            },\n            ...((this.#options as Record<string, unknown>) || {}),\n        });\n        this.#player.initialize();\n        this.#player.attachView(this.element);\n        this.#player.setAutoPlay(false);\n    }\n}\n\nexport default DashMedia;\n","import { EventsList, Level, Source } from '../interfaces';\nimport { HAS_MSE } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isFlvSource } from '../utils/media';\nimport Native from './native';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const flvjs: any;\n\nclass FlvMedia extends Native {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md\n    #options?: unknown = {};\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options;\n        this.element = element;\n        this.media = mediaSource;\n\n        this._create = this._create.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof flvjs === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/flv.js@latest/dist/flv.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return HAS_MSE && (mimeType === 'video/x-flv' || mimeType === 'video/flv');\n    }\n\n    load(): void {\n        this.#player.unload();\n        this.#player.detachMediaElement();\n        this.#player.attachMediaElement(this.element);\n        this.#player.load();\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        this.#player.destroy();\n        this.#player = null;\n    }\n\n    set src(media: Source) {\n        if (isFlvSource(media)) {\n            this.destroy();\n            this._create();\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        this.#player.currentLevel = level;\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const { configs, ...rest } = (this.#options as Record<string, unknown>) || {};\n\n        flvjs.LoggingControl.enableDebug = rest?.debug || false;\n        flvjs.LoggingControl.enableVerbose = rest?.debug || false;\n        const options = { ...rest, type: 'flv', url: this.media.src };\n        this.#player = flvjs.createPlayer(options, configs || {});\n        this.instance = this.#player;\n\n        if (!this.#events) {\n            this.#events = flvjs.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjsevents\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrortypes\n    // @see https://github.com/bilibili/flv.js/blob/master/docs/api.md#flvjserrordetails\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'error') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: `${data[0]}: ${data[1]} ${data[2].msg}`,\n                    type: 'FLV',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n        } else {\n            const e = addEvent(event, { detail: { data } });\n            this.element.dispatchEvent(e);\n        }\n    }\n}\n\nexport default FlvMedia;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventsList, Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS, SUPPORTS_HLS } from '../utils/constants';\nimport { addEvent, loadScript } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\ndeclare const Hls: any;\n\n// @see https://github.com/video-dev/hls.js/\nclass HlsMedia extends Native {\n    #player: any;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    #events: EventsList = {};\n\n    #recoverDecodingErrorDate = 0;\n\n    #recoverSwapAudioCodecDate = 0;\n\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning\n    #options?: unknown;\n\n    #autoplay: boolean;\n\n    constructor(element: HTMLMediaElement, mediaSource: Source, autoplay: boolean, options?: unknown) {\n        super(element, mediaSource);\n        this.#options = options || {};\n        this.element = element;\n        this.media = mediaSource;\n        this.#autoplay = autoplay;\n\n        this._create = this._create.bind(this);\n        this._play = this._play.bind(this);\n        this._pause = this._pause.bind(this);\n        this._assign = this._assign.bind(this);\n\n        this.promise =\n            typeof Hls === 'undefined'\n                ? // Ever-green script\n                  loadScript('https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js')\n                : new Promise((resolve) => {\n                      resolve({});\n                  });\n\n        this.promise.then(this._create);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return SUPPORTS_HLS() && mimeType === 'application/x-mpegURL';\n    }\n\n    load(): void {\n        if (this.#player) {\n            this.#player.detachMedia();\n            this.#player.loadSource(this.media.src);\n            this.#player.attachMedia(this.element);\n        }\n\n        const e = addEvent('loadedmetadata');\n        this.element.dispatchEvent(e);\n\n        if (!this.#events) {\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    destroy(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n        if (this.#events) {\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.off(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n        this.element.removeEventListener('play', this._play);\n        this.element.removeEventListener('pause', this._pause);\n        if (this.#player) {\n            this.#player.destroy();\n            this.#player = null;\n        }\n    }\n\n    set src(media: Source) {\n        if (isHlsSource(media)) {\n            this.destroy();\n            this.#player = new Hls(this.#options);\n            this.#player.loadSource(media.src);\n            this.#player.attachMedia(this.element);\n\n            this.#events = Hls.Events;\n            Object.keys(this.#events).forEach((event) => {\n                this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                    this._assign(this.#events[event], args)\n                );\n            });\n        }\n    }\n\n    get levels(): Level[] {\n        const levels: Level[] = [];\n        if (this.#player && this.#player.levels && this.#player.levels.length) {\n            Object.keys(this.#player.levels).forEach((item) => {\n                const { height, name } = this.#player.levels[item];\n                const level = {\n                    height,\n                    id: item,\n                    label: name || null,\n                };\n                levels.push(level);\n            });\n        }\n        return levels;\n    }\n\n    set level(level: string) {\n        const formattedLevel = Number(level);\n        if (formattedLevel && formattedLevel > -1) {\n            this.#player.loadLevel = formattedLevel;\n        } else {\n            this.#player.currentLevel = formattedLevel;\n        }\n    }\n\n    get level(): string {\n        return this.#player ? this.#player.currentLevel : '-1';\n    }\n\n    private _create(): void {\n        const autoplay = !!(this.element.preload === 'auto' || this.#autoplay);\n        (this.#options as Record<string, unknown>).autoStartLoad = autoplay;\n\n        this.#player = new Hls(this.#options);\n        this.instance = this.#player;\n        this.#events = Hls.Events;\n        Object.keys(this.#events).forEach((event) => {\n            this.#player.on(this.#events[event], (...args: Record<string, unknown>[]) =>\n                this._assign(this.#events[event], args)\n            );\n        });\n\n        if (!autoplay) {\n            this.element.addEventListener('play', this._play, EVENT_OPTIONS);\n            this.element.addEventListener('pause', this._pause, EVENT_OPTIONS);\n        }\n    }\n\n    // @see https://github.com/video-dev/hls.js/blob/master/src/events.js\n    // @see https://github.com/video-dev/hls.js/blob/master/src/errors.js\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#runtime-events\n    // @see https://github.com/video-dev/hls.js/blob/master/docs/API.md#errors\n    private _assign(event: string, data: Record<string, unknown>[]): void {\n        if (event === 'hlsError') {\n            const errorDetails = {\n                detail: {\n                    data,\n                    message: data[1].details,\n                    type: 'HLS',\n                },\n            };\n            const errorEvent = addEvent('playererror', errorDetails);\n            this.element.dispatchEvent(errorEvent);\n\n            // borrowed from https://video-dev.github.io/hls.js/demo\n            const type = data[1].type as string;\n            const { fatal } = data[1];\n            const details = data[1];\n            if (fatal) {\n                switch (type) {\n                    case 'mediaError':\n                        const now = new Date().getTime();\n                        if (!this.#recoverDecodingErrorDate || now - this.#recoverDecodingErrorDate > 3000) {\n                            this.#recoverDecodingErrorDate = new Date().getTime();\n                            this.#player.recoverMediaError();\n                        } else if (!this.#recoverSwapAudioCodecDate || now - this.#recoverSwapAudioCodecDate > 3000) {\n                            this.#recoverSwapAudioCodecDate = new Date().getTime();\n                            console.warn('Attempting to swap Audio Codec and recover from media error');\n                            this.#player.swapAudioCodec();\n                            this.#player.recoverMediaError();\n                        } else {\n                            const msg = 'Cannot recover, last media error recovery failed';\n                            console.error(msg);\n                            const mediaEvent = addEvent(type, { detail: { data: details } });\n                            this.element.dispatchEvent(mediaEvent);\n                        }\n                        break;\n                    case 'networkError':\n                        const message = 'Network error';\n                        console.error(message);\n                        const networkEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(networkEvent);\n                        break;\n                    default:\n                        this.#player.destroy();\n                        const fatalEvent = addEvent(type, { detail: { data: details } });\n                        this.element.dispatchEvent(fatalEvent);\n                        break;\n                }\n            } else {\n                const err = addEvent(type, { detail: { data: details } });\n                this.element.dispatchEvent(err);\n            }\n        } else {\n            const details: Record<string, unknown> = data[1] as Record<string, unknown>;\n            if (event === 'hlsLevelLoaded' && details.live === true) {\n                this.element.setAttribute('op-live__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (\n                event === 'hlsLevelUpdated' &&\n                details.live === true &&\n                (details.totalduration as number) > DVR_THRESHOLD\n            ) {\n                this.element.setAttribute('op-dvr__enabled', 'true');\n                const timeEvent = addEvent('timeupdate');\n                this.element.dispatchEvent(timeEvent);\n            } else if (event === 'hlsFragParsingMetadata') {\n                const metaEvent = addEvent('metadataready', { detail: { data: data[1] } });\n                this.element.dispatchEvent(metaEvent);\n            }\n            const e = addEvent(event, { detail: { data: data[1] } });\n            this.element.dispatchEvent(e);\n        }\n    }\n\n    private _play(): void {\n        if (this.#player) {\n            this.#player.startLoad();\n        }\n    }\n\n    private _pause(): void {\n        if (this.#player) {\n            this.#player.stopLoad();\n        }\n    }\n}\n\nexport default HlsMedia;\n","import { Level, Source } from '../interfaces';\nimport { DVR_THRESHOLD, EVENT_OPTIONS } from '../utils/constants';\nimport { addEvent, isAudio, isVideo } from '../utils/general';\nimport { isHlsSource } from '../utils/media';\nimport Native from './native';\n\nclass HTML5Media extends Native {\n    #currentLevel: Level;\n\n    #levelList: Level[] = [];\n\n    #isStreaming = false;\n\n    #retryCount = 0;\n\n    #started = false;\n\n    #timer: number;\n\n    constructor(element: HTMLMediaElement, mediaFile: Source) {\n        super(element, mediaFile);\n\n        if (!isAudio(element) && !isVideo(element)) {\n            throw new TypeError('Native method only supports video/audio tags');\n        }\n\n        this._clearTimeout = this._clearTimeout.bind(this);\n        this._setTimeout = this._setTimeout.bind(this);\n        this._dispatchError = this._dispatchError.bind(this);\n        this._isDvrEnabled = this._isDvrEnabled.bind(this);\n        this._readMediadataInfo = this._readMediadataInfo.bind(this);\n\n        this.#isStreaming = isHlsSource(mediaFile);\n        this.element.addEventListener('playing', this._clearTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('stalled', this._setTimeout, EVENT_OPTIONS);\n        this.element.addEventListener('error', this._dispatchError, EVENT_OPTIONS);\n        this.element.addEventListener('loadeddata', this._isDvrEnabled, EVENT_OPTIONS);\n        this.element.textTracks.addEventListener('addtrack', this._readMediadataInfo, EVENT_OPTIONS);\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return !!this.element.canPlayType(mimeType).replace('no', '');\n    }\n\n    load(): void {\n        this.element.load();\n    }\n\n    destroy(): void {\n        this.element.removeEventListener('playing', this._clearTimeout);\n        this.element.removeEventListener('stalled', this._setTimeout);\n        this.element.removeEventListener('error', this._dispatchError);\n        this.element.removeEventListener('loadeddata', this._isDvrEnabled);\n        this.element.textTracks.removeEventListener('addtrack', this._readMediadataInfo);\n    }\n\n    get levels(): Level[] {\n        if (!this.#levelList.length) {\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const level = {\n                    height: 0,\n                    id: `${i}`,\n                    label: levels[i].getAttribute('title') || '',\n                };\n                this.#levelList.push(level);\n            }\n        }\n        return this.#levelList;\n    }\n\n    set level(level: string) {\n        const idx = this.#levelList.findIndex((item) => item.id === level);\n        if (idx > -1) {\n            this.#currentLevel = this.levels[idx];\n            const levels = this.element.querySelectorAll('source[title]');\n            for (let i = 0, total = levels.length; i < total; ++i) {\n                const source = levels[i].getAttribute('src');\n                if (source && parseInt(this.#currentLevel.id, 10) === i) {\n                    this.element.src = source;\n                }\n            }\n        }\n    }\n\n    get level(): string {\n        return this.#currentLevel?.id || '-1';\n    }\n\n    set src(media: Source) {\n        this.element.src = media.src;\n    }\n\n    private _isDvrEnabled(): void {\n        const time = this.element.seekable.end(this.element.seekable.length - 1) - this.element.seekable.start(0);\n        if (this.#isStreaming && time > DVR_THRESHOLD && !this.element.getAttribute('op-dvr__enabled')) {\n            this.element.setAttribute('op-dvr__enabled', 'true');\n            const timeEvent = addEvent('timeupdate');\n            this.element.dispatchEvent(timeEvent);\n        }\n    }\n\n    private _readMediadataInfo(e: TrackEvent): void {\n        const target = e;\n        if (target?.track?.kind === 'metadata') {\n            target.track.mode = 'hidden';\n            target.track.addEventListener(\n                'cuechange',\n                (event) => {\n                    const track = event.target as TextTrack;\n                    const cue = track.activeCues ? track.activeCues[0] : null;\n                    if (cue) {\n                        const metaDataEvent = addEvent('metadataready', { detail: cue });\n                        this.element.dispatchEvent(metaDataEvent);\n                    }\n                },\n                EVENT_OPTIONS\n            );\n        }\n    }\n\n    private _setTimeout(): void {\n        if (!this.#started && window !== undefined) {\n            this.#started = true;\n            this.#timer = window.setInterval(() => {\n                if (this.#retryCount >= 30) {\n                    clearInterval(this.#timer);\n                    const message = 'Media download failed part-way due to a network error';\n                    const details = {\n                        detail: {\n                            data: { message, error: 2 },\n                            message,\n                            type: 'HTML5',\n                        },\n                    };\n                    const errorEvent = addEvent('playererror', details);\n                    this.element.dispatchEvent(errorEvent);\n                    this.#retryCount = 0;\n                    this.#started = false;\n                } else {\n                    this.#retryCount++;\n                }\n            }, 1000);\n        }\n    }\n\n    private _clearTimeout(): void {\n        if (this.#timer) {\n            clearInterval(this.#timer);\n            this.#retryCount = 0;\n            this.#started = false;\n        }\n    }\n\n    private _dispatchError(e: Event): void {\n        let defaultMessage;\n        const target = e.target as HTMLMediaElement;\n        const error = target?.error;\n        switch (error?.code) {\n            case error?.MEDIA_ERR_ABORTED:\n                defaultMessage = 'Media playback aborted';\n                break;\n            case error?.MEDIA_ERR_NETWORK:\n                defaultMessage = 'Media download failed part-way due to a network error';\n                break;\n            case error?.MEDIA_ERR_DECODE:\n                defaultMessage = `Media playback aborted due to a corruption problem or because the\n                    media used features your browser did not support.`;\n                break;\n            case error?.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                defaultMessage = `Media could not be loaded, either because the server or network failed\n                    or because the format is not supported.`;\n                break;\n            default:\n                defaultMessage = 'Unknown error occurred.';\n                break;\n        }\n        const details = {\n            detail: {\n                data: { ...e, message: defaultMessage, error: error?.code },\n                message: defaultMessage,\n                type: 'HTML5',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.element.dispatchEvent(errorEvent);\n    }\n}\n\nexport default HTML5Media;\n","import { CustomMedia, Level, PlayerLayers, PlayerOptions, Source } from './interfaces';\nimport DashMedia from './media/dash';\nimport FlvMedia from './media/flv';\nimport HlsMedia from './media/hls';\nimport HTML5Media from './media/html5';\nimport * as source from './utils/media';\n\nclass Media {\n    #element: HTMLMediaElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #media: HTML5Media | HlsMedia | DashMedia | any;\n\n    #files: Source[];\n\n    #promisePlay: Promise<void>;\n\n    #options: PlayerOptions;\n\n    #autoplay: boolean;\n\n    #mediaLoaded = false;\n\n    #customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    #currentSrc: Source;\n\n    constructor(element: HTMLMediaElement, options: PlayerOptions, autoplay: boolean, customMedia: CustomMedia) {\n        this.#element = element;\n        this.#options = options;\n        this.#files = this._getMediaFiles();\n        this.#customMedia = customMedia;\n        this.#autoplay = autoplay;\n    }\n\n    canPlayType(mimeType: string): boolean {\n        return this.#media.canPlayType(mimeType);\n    }\n\n    async load(): Promise<void> {\n        if (this.#mediaLoaded) {\n            return;\n        }\n\n        this.#mediaLoaded = true;\n\n        if (!this.#files.length) {\n            throw new TypeError('Media not set');\n        }\n\n        // Remove previous media if any is detected and it's different from current one\n        if (this.#media && typeof this.#media.destroy === 'function') {\n            const sameMedia = this.#files.length === 1 && this.#files[0].src === this.#media.media.src;\n            if (!sameMedia) {\n                this.#media.destroy();\n            }\n        }\n\n        // Loop until first playable source is found\n        this.#files.some((media) => {\n            try {\n                this.#media = this._invoke(media);\n            } catch (e) {\n                this.#media = new HTML5Media(this.#element, media);\n            }\n\n            return this.#media.canPlayType(media.type);\n        });\n\n        try {\n            if (this.#media === null) {\n                throw new TypeError('Media cannot be played with any valid media type');\n            }\n\n            await this.#media.promise;\n            this.#media.load();\n        } catch (e) {\n            // destroy media\n            if (this.#media) {\n                this.#media.destroy();\n            }\n            throw e;\n        }\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async play(): Promise<void> {\n        if (!this.#mediaLoaded) {\n            await this.load();\n            this.#mediaLoaded = false;\n        } else {\n            await this.#media.promise;\n        }\n        this.#promisePlay = this.#media.play();\n        return this.#promisePlay;\n    }\n\n    // @see https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n    async pause(): Promise<void> {\n        if (this.#promisePlay !== undefined) {\n            await this.#promisePlay;\n        }\n        this.#media.pause();\n    }\n\n    destroy(): void {\n        if (this.#media) {\n            this.#media.destroy();\n        }\n    }\n\n    set src(media) {\n        if (typeof media === 'string') {\n            this.#files.push({\n                src: media,\n                type: source.predictMimeType(media, this.#element),\n            });\n        } else if (Array.isArray(media)) {\n            this.#files = media;\n        } else if (typeof media === 'object') {\n            this.#files.push(media);\n        }\n\n        // Remove files without source\n        this.#files = this.#files.filter((file) => file.src);\n\n        if (this.#files.length > 0) {\n            const [file] = this.#files;\n            // Save copy of original file to restore it when player is destroyed\n            if (this.#element.src) {\n                this.#element.setAttribute('data-op-file', this.#files[0].src);\n            }\n\n            this.#element.src = file.src;\n            this.#currentSrc = file;\n            if (this.#media) {\n                this.#media.src = file;\n            }\n        } else {\n            this.#element.src = '';\n        }\n    }\n\n    get src(): Source[] {\n        return this.#files;\n    }\n\n    get current(): Source {\n        return this.#currentSrc;\n    }\n\n    set mediaFiles(sources: Source[]) {\n        this.#files = sources;\n    }\n\n    get mediaFiles(): Source[] {\n        return this.#files;\n    }\n\n    set volume(value: number) {\n        if (this.#media) {\n            this.#media.volume = value;\n        }\n    }\n\n    get volume(): number {\n        return this.#media ? this.#media.volume : this.#element.volume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#media) {\n            this.#media.muted = value;\n        }\n    }\n\n    get muted(): boolean {\n        return this.#media ? this.#media.muted : this.#element.muted;\n    }\n\n    set playbackRate(value) {\n        if (this.#media) {\n            this.#media.playbackRate = value;\n        }\n    }\n\n    get playbackRate(): number {\n        return this.#media ? this.#media.playbackRate : this.#element.playbackRate;\n    }\n\n    set defaultPlaybackRate(value) {\n        if (this.#media) {\n            this.#media.defaultPlaybackRate = value;\n        }\n    }\n\n    get defaultPlaybackRate(): number {\n        return this.#media ? this.#media.defaultPlaybackRate : this.#element.defaultPlaybackRate;\n    }\n\n    set currentTime(value: number) {\n        if (this.#media) {\n            this.#media.currentTime = value;\n        }\n    }\n\n    get currentTime(): number {\n        return this.#media ? this.#media.currentTime : this.#element.currentTime;\n    }\n\n    get duration(): number {\n        const duration = this.#media ? this.#media.duration : this.#element.duration;\n        // To seek backwards in a live streaming (mobile devices)\n        if (duration === Infinity && this.#element.seekable && this.#element.seekable.length) {\n            return this.#element.seekable.end(0);\n        }\n        return duration;\n    }\n\n    get paused(): boolean {\n        return this.#media ? this.#media.paused : this.#element.paused;\n    }\n\n    get ended(): boolean {\n        return this.#media ? this.#media.ended : this.#element.ended;\n    }\n\n    set loaded(loaded: boolean) {\n        this.#mediaLoaded = loaded;\n    }\n\n    get loaded(): boolean {\n        return this.#mediaLoaded;\n    }\n\n    set level(value: number | string | Level) {\n        if (this.#media) {\n            this.#media.level = value;\n        }\n    }\n\n    get level(): number | string | Level {\n        return this.#media ? this.#media.level : -1;\n    }\n\n    get levels(): Level[] {\n        return this.#media ? this.#media.levels : [];\n    }\n\n    get instance(): Media | null {\n        return this.#media ? this.#media.instance : null;\n    }\n\n    private _getMediaFiles(): Source[] {\n        const mediaFiles: Source[] = [];\n        const sourceTags = this.#element.querySelectorAll('source');\n        const nodeSource = this.#element.src;\n\n        // Consider if node contains the `src` and `type` attributes\n        if (nodeSource) {\n            mediaFiles.push({\n                src: nodeSource,\n                type: this.#element.getAttribute('type') || source.predictMimeType(nodeSource, this.#element),\n            });\n        }\n\n        // test <source> types to see if they are usable\n        for (let i = 0, total = sourceTags.length; i < total; i++) {\n            const item = sourceTags[i];\n            const { src } = item;\n            mediaFiles.push({\n                src,\n                type: item.getAttribute('type') || source.predictMimeType(src, this.#element),\n            });\n\n            // If tag has the attribute `preload` set as `none`, the current media will\n            // be the first one on the list of sources\n            if (i === 0) {\n                const [file] = mediaFiles;\n                this.#currentSrc = file;\n            }\n        }\n\n        if (!mediaFiles.length) {\n            mediaFiles.push({\n                src: '',\n                type: source.predictMimeType('', this.#element),\n            });\n        }\n\n        return mediaFiles;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _invoke(media: Source): HlsMedia | DashMedia | HTML5Media | any {\n        const playHLSNatively =\n            this.#element.canPlayType('application/vnd.apple.mpegurl') ||\n            this.#element.canPlayType('application/x-mpegURL');\n\n        this.#currentSrc = media;\n\n        const { layers } = this.#options.controls || {};\n\n        let activeLevels = false;\n        if (layers) {\n            Object.keys(layers).forEach((layer) => {\n                const current = layers ? layers[layer as keyof PlayerLayers] : null;\n                if (current && current.indexOf('levels') > -1) {\n                    activeLevels = true;\n                }\n            });\n        }\n\n        if (Object.keys(this.#customMedia.media).length) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let customRef: any;\n            this.#customMedia.rules.forEach((rule) => {\n                const type = rule(media.src);\n                if (type) {\n                    const customMedia = this.#customMedia.media[type];\n                    const customOptions = this.#options[this.#customMedia.optionsKey[type]] || undefined;\n                    customRef = customMedia(this.#element, media, this.#autoplay, customOptions);\n                }\n            });\n            if (customRef) {\n                customRef.create();\n                return customRef;\n            }\n            return new HTML5Media(this.#element, media);\n        }\n        if (source.isHlsSource(media)) {\n            if (playHLSNatively && this.#options.forceNative && !activeLevels) {\n                return new HTML5Media(this.#element, media);\n            }\n            const hlsOptions = this.#options?.hls || undefined;\n            return new HlsMedia(this.#element, media, this.#autoplay, hlsOptions);\n        }\n        if (source.isDashSource(media)) {\n            const dashOptions = this.#options?.dash || undefined;\n            return new DashMedia(this.#element, media, dashOptions);\n        }\n        if (source.isFlvSource(media)) {\n            const flvOptions = this.#options?.flv || {\n                debug: false,\n                type: 'flv',\n                url: media.src,\n            };\n            return new FlvMedia(this.#element, media, flvOptions);\n        }\n\n        return new HTML5Media(this.#element, media);\n    }\n}\n\nexport default Media;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AdsOptions, Source } from '../interfaces';\nimport Media from '../media';\nimport Player from '../player';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from '../utils/constants';\nimport { addEvent, isAudio, isVideo, isXml, loadScript } from '../utils/general';\n\ndeclare const google: any;\n\n// @see https://developers.google.com/interactive-media-ads/\nclass Ads {\n    loadPromise: unknown;\n\n    loadedAd = false;\n\n    #ended = false;\n\n    #done = false;\n\n    #active = false;\n\n    #started = false;\n\n    #intervalTimer = 0;\n\n    #volume: number;\n\n    #muted = false;\n\n    #duration = 0;\n\n    #currentTime = 0;\n\n    // @see https://tinyurl.com/ybjas4ut\n    #manager: any = null;\n\n    #player: Player;\n\n    #media: Media;\n\n    #element: HTMLMediaElement;\n\n    #events: string[] = [];\n\n    #ads: string | string[];\n\n    #promise: Promise<void>;\n\n    // @see https://tinyurl.com/ycwp4ufd\n    #loader: any;\n\n    #container?: HTMLDivElement;\n\n    #customClickContainer?: HTMLDivElement;\n\n    #skipElement?: HTMLElement;\n\n    // @see https://tinyurl.com/ya3zksso\n    #displayContainer: any;\n\n    // @see https://tinyurl.com/ya8bxjf4\n    #request: any;\n\n    #autostart = false;\n\n    #autostartMuted = false;\n\n    #playTriggered = false;\n\n    #options: AdsOptions;\n\n    #currentIndex = 0;\n\n    #originalVolume: number;\n\n    #preloadContent: any;\n\n    #lastTimePaused = 0;\n\n    #mediaSources: Source[] = [];\n\n    #mediaStarted = false;\n\n    #adEvent: any = null;\n\n    constructor(\n        player: Player,\n        ads: string | string[],\n        autostart?: boolean,\n        autostartMuted?: boolean,\n        options?: AdsOptions\n    ) {\n        const defaultOpts: AdsOptions = {\n            autoPlayAdBreaks: true,\n            customClick: {\n                enabled: false,\n                label: 'Click here for more info',\n            },\n            audioSkip: {\n                enabled: true,\n                label: 'Skip Ad',\n                remainingLabel: 'Skip in [[secs]] seconds',\n            },\n            debug: false,\n            enablePreloading: false,\n            language: 'en',\n            loop: false,\n            numRedirects: 4,\n            publisherId: undefined,\n            sdkPath: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n            sessionId: undefined,\n            src: [],\n            vpaidMode: 'enabled',\n        };\n        this.#player = player;\n        this.#ads = ads;\n        this.#media = player.getMedia();\n        this.#element = player.getElement();\n        this.#autostart = autostart || false;\n        this.#muted = player.getElement().muted;\n        this.#autostartMuted = autostartMuted || false;\n        this.#options = { ...defaultOpts, ...options };\n        if (options?.customClick && Object.keys(options.customClick).length) {\n            this.#options.customClick = { ...defaultOpts.customClick, ...options.customClick };\n        }\n        this.#playTriggered = false;\n        this.#originalVolume = this.#element.volume;\n        this.#volume = this.#originalVolume;\n\n        const path = this.#options?.debug\n            ? this.#options?.sdkPath?.replace(/(\\.js$)/, '_debug.js')\n            : this.#options?.sdkPath;\n\n        this.load = this.load.bind(this);\n        this.resizeAds = this.resizeAds.bind(this);\n        this._handleClickInContainer = this._handleClickInContainer.bind(this);\n        this._handleSkipAds = this._handleSkipAds.bind(this);\n        this._loaded = this._loaded.bind(this);\n        this._error = this._error.bind(this);\n        this._assign = this._assign.bind(this);\n        this._contentLoadedAction = this._contentLoadedAction.bind(this);\n        this._loadedMetadataHandler = this._loadedMetadataHandler.bind(this);\n        this._contentEndedListener = this._contentEndedListener.bind(this);\n        this._handleResizeAds = this._handleResizeAds.bind(this);\n        this._onContentPauseRequested = this._onContentPauseRequested.bind(this);\n        this._onContentResumeRequested = this._onContentResumeRequested.bind(this);\n\n        this.#promise =\n            path && (typeof google === 'undefined' || typeof google.ima === 'undefined')\n                ? loadScript(path)\n                : new Promise((resolve) => {\n                      resolve();\n                  });\n\n        this.#promise\n            .then(() => {\n                this.load();\n            })\n            .catch((error) => {\n                let message = 'Ad script could not be loaded; please check if you have an AdBlock ';\n                message += 'turned on, or if you provided a valid URL is correct';\n                console.error(`Ad error: ${message}.`);\n\n                const details = {\n                    detail: {\n                        data: error,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            });\n    }\n\n    load(force = false): void {\n        if (\n            typeof google === 'undefined' ||\n            !google.ima ||\n            (!force && this.loadedAd && this.#options.autoPlayAdBreaks)\n        ) {\n            return;\n        }\n\n        // If we have set `autoPlayAdBreaks` to false and haven't set the force flag, don't load ads yet\n        if (!this.#options.autoPlayAdBreaks && !force) {\n            return;\n        }\n\n        this.loadedAd = true;\n\n        const existingContainer = this.#player.getContainer().querySelector('.op-ads');\n        if (existingContainer && existingContainer.parentNode) {\n            existingContainer.parentNode.removeChild(existingContainer);\n        }\n\n        this.#started = true;\n        this.#container = document.createElement('div');\n        this.#container.className = 'op-ads';\n        this.#container.tabIndex = -1;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.#container, this.#element.nextSibling);\n        }\n        this.#container.addEventListener('click', this._handleClickInContainer);\n\n        if (this.#options.customClick?.enabled) {\n            this.#customClickContainer = document.createElement('div');\n            this.#customClickContainer.className = 'op-ads__click-container';\n            this.#customClickContainer.innerHTML = `<div class=\"op-ads__click-label\">${\n                this.#options.customClick.label\n            }</div>`;\n            if (this.#element.parentElement) {\n                this.#element.parentElement.insertBefore(this.#customClickContainer, this.#element.nextSibling);\n            }\n        }\n\n        if (isAudio(this.#element) && this.#options.audioSkip?.enabled) {\n            if (this.#options.audioSkip?.element) {\n                const { element } = this.#options.audioSkip || {};\n                if (typeof element === 'string') {\n                    const target = document.getElementById(element);\n                    if (target) {\n                        this.#skipElement = target;\n                    }\n                } else if (element instanceof HTMLElement) {\n                    this.#skipElement = element;\n                }\n            } else {\n                this.#skipElement = document.createElement('button');\n                this.#skipElement.className = 'op-ads__skip hidden';\n                this.#player.getControls().getContainer().appendChild(this.#skipElement);\n            }\n            if (this.#skipElement) {\n                this.#skipElement.addEventListener('click', this._handleSkipAds, EVENT_OPTIONS);\n            }\n        }\n\n        this.#mediaSources = this.#media.src;\n        const vpaidModeMap: Record<string, unknown> = {\n            disabled: google.ima.ImaSdkSettings.VpaidMode.DISABLED,\n            enabled: google.ima.ImaSdkSettings.VpaidMode.ENABLED,\n            insecure: google.ima.ImaSdkSettings.VpaidMode.INSECURE,\n        };\n\n        google.ima.settings.setVpaidMode(vpaidModeMap[this.#options.vpaidMode || 'enabled']);\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(true);\n        google.ima.settings.setAutoPlayAdBreaks(this.#options.autoPlayAdBreaks);\n        google.ima.settings.setNumRedirects(this.#options.numRedirects);\n        google.ima.settings.setLocale(this.#options.language);\n        if (this.#options.sessionId) {\n            google.ima.settings.setSessionId(this.#options.sessionId);\n        }\n        if (this.#options.publisherId) {\n            google.ima.settings.setPpid(this.#options.publisherId);\n        }\n        google.ima.settings.setPlayerType('openplayerjs');\n        google.ima.settings.setPlayerVersion('3.0.0');\n\n        this.#displayContainer = new google.ima.AdDisplayContainer(\n            this.#container,\n            this.#element,\n            this.#customClickContainer\n        );\n\n        this.#loader = new google.ima.AdsLoader(this.#displayContainer);\n        this.#loader.addEventListener(\n            google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n            this._loaded,\n            EVENT_OPTIONS\n        );\n\n        this.#loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error, EVENT_OPTIONS);\n\n        // Create responsive ad\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', this._handleResizeAds, EVENT_OPTIONS);\n        }\n        this.#element.addEventListener('loadedmetadata', this._handleResizeAds, EVENT_OPTIONS);\n\n        // Request Ads automatically if `autoplay` was set\n        if (\n            this.#autostart === true ||\n            this.#autostartMuted === true ||\n            force === true ||\n            this.#options.enablePreloading === true ||\n            this.#playTriggered === true\n        ) {\n            if (!this.#done) {\n                this.#done = true;\n                this.#displayContainer.initialize();\n            }\n            this._requestAds();\n        }\n    }\n\n    async play(): Promise<void> {\n        if (!this.#done) {\n            this.#playTriggered = true;\n            this._initNotDoneAds();\n            return;\n        }\n\n        if (this.#manager) {\n            try {\n                // No timer interval and no Ad active means it's a potential initial ad play\n                if (!this.#intervalTimer && this.#active === false) {\n                    this.#manager.start();\n                } else {\n                    this.#manager.resume();\n                }\n                this.#active = true;\n                const e = addEvent('play');\n                this.#element.dispatchEvent(e);\n            } catch (err) {\n                this._resumeMedia();\n            }\n        }\n    }\n\n    pause(): void {\n        if (this.#manager) {\n            this.#active = false;\n            this.#manager.pause();\n            const e = addEvent('pause');\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    destroy(): void {\n        if (this.#manager) {\n            this.#manager.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n\n            if (this.#events) {\n                this.#events.forEach((event) => {\n                    this.#manager.removeEventListener(event, this._assign);\n                });\n            }\n        }\n\n        this.#events = [];\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.removeEventListener(event, mouseEvents[event]);\n            }\n        });\n\n        if (this.#loader) {\n            this.#loader.removeEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._error);\n            this.#loader.removeEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this._loaded);\n        }\n\n        const destroy = !Array.isArray(this.#ads) || this.#currentIndex > this.#ads.length;\n        if (this.#manager && destroy) {\n            this.#manager.destroy();\n        }\n\n        if (this.#options.customClick?.enabled && this.#customClickContainer) {\n            this.#customClickContainer.remove();\n        }\n\n        if (this.#options.audioSkip?.enabled && this.#skipElement) {\n            this.#skipElement.removeEventListener('click', this._handleSkipAds);\n            this.#skipElement.remove();\n        }\n\n        if (IS_IOS || IS_ANDROID) {\n            this.#element.removeEventListener('loadedmetadata', this._contentLoadedAction);\n        }\n        this.#element.removeEventListener('loadedmetadata', this._handleResizeAds);\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('resize', this._handleResizeAds);\n        }\n\n        if (this.#container) {\n            this.#container.removeEventListener('click', this._handleClickInContainer);\n            this.#container.remove();\n        }\n        this.loadPromise = null;\n        this.loadedAd = false;\n        this.#done = false;\n        this.#playTriggered = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        this.#adEvent = null;\n    }\n\n    resizeAds(width?: number, height?: number): void {\n        if (this.#manager) {\n            const target = this.#element;\n            const mode =\n                target.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL;\n\n            let formattedWidth = width;\n            const percentageWidth = width ? width.toString() : '';\n            if (width && percentageWidth.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedWidth = this.#element.parentElement.offsetWidth * (parseInt(percentageWidth, 10) / 100);\n                }\n            }\n\n            let formattedHeight = height;\n            const percentageHeight = height ? height.toString() : '';\n            if (height && percentageHeight.indexOf('%') > -1) {\n                if (this.#element.parentElement) {\n                    formattedHeight = this.#element.parentElement.offsetHeight * (parseInt(percentageHeight, 10) / 100);\n                }\n            }\n\n            let timeout;\n\n            if (timeout && typeof window !== 'undefined') {\n                window.cancelAnimationFrame(timeout);\n            }\n            if (typeof window !== 'undefined') {\n                timeout = window.requestAnimationFrame(() => {\n                    this.#manager.resize(\n                        formattedWidth || target.offsetWidth,\n                        formattedHeight || target.offsetHeight,\n                        mode\n                    );\n                });\n            }\n        }\n    }\n\n    getAdsManager(): unknown {\n        return this.#manager;\n    }\n\n    getAdsLoader(): any {\n        return this.#loader;\n    }\n\n    started(): boolean {\n        return this.#started;\n    }\n\n    set src(source: string | string[]) {\n        this.#ads = source;\n    }\n\n    set isDone(value: boolean) {\n        this.#done = value;\n    }\n\n    set playRequested(value: boolean) {\n        this.#playTriggered = value;\n    }\n\n    set volume(value: number) {\n        if (this.#manager) {\n            this.#volume = value;\n            this.#manager.setVolume(value);\n            this._setMediaVolume(value);\n            this.#muted = value === 0;\n        }\n    }\n\n    get volume(): number {\n        return this.#manager ? this.#manager.getVolume() : this.#originalVolume;\n    }\n\n    set muted(value: boolean) {\n        if (this.#manager) {\n            if (value) {\n                this.#manager.setVolume(0);\n                this.#muted = true;\n                this._setMediaVolume(0);\n            } else {\n                this.#manager.setVolume(this.#volume);\n                this.#muted = false;\n                this._setMediaVolume(this.#volume);\n            }\n        }\n    }\n\n    get muted(): boolean {\n        return this.#muted;\n    }\n\n    set currentTime(value: number) {\n        this.#currentTime = value;\n    }\n\n    get currentTime(): number {\n        return this.#currentTime;\n    }\n\n    get duration(): number {\n        return this.#duration;\n    }\n\n    get paused(): boolean {\n        return !this.#active;\n    }\n\n    get ended(): boolean {\n        return this.#ended;\n    }\n\n    private _assign(event: any): void {\n        const ad = event.getAd();\n        if (ad) {\n            this.#adEvent = ad;\n        }\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                if (!ad.isLinear()) {\n                    this._onContentResumeRequested();\n                } else {\n                    if (IS_IPHONE && isVideo(this.#element)) {\n                        this.#element.controls = false;\n                    }\n                    this.#duration = ad.getDuration();\n                    this.#currentTime = ad.getDuration();\n                    if (!this.#mediaStarted && !IS_IOS && !IS_ANDROID) {\n                        const waitingEvent = addEvent('waiting');\n                        this.#element.dispatchEvent(waitingEvent);\n\n                        const loadedEvent = addEvent('loadedmetadata');\n                        this.#element.dispatchEvent(loadedEvent);\n\n                        this.resizeAds();\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.STARTED:\n                if (ad.isLinear()) {\n                    if (\n                        this.#element.parentElement &&\n                        !this.#element.parentElement.classList.contains('op-ads--active')\n                    ) {\n                        this.#element.parentElement.classList.add('op-ads--active');\n                    }\n\n                    if (!this.#media.paused) {\n                        this.#media.pause();\n                    }\n                    this.#active = true;\n                    const playEvent = addEvent('play');\n                    this.#element.dispatchEvent(playEvent);\n                    let resized;\n\n                    if (!resized) {\n                        this.resizeAds();\n                        resized = true;\n                    }\n\n                    if (this.#media.ended) {\n                        this.#ended = false;\n                        const endEvent = addEvent('adsmediaended');\n                        this.#element.dispatchEvent(endEvent);\n                    }\n\n                    if (typeof window !== 'undefined') {\n                        this.#intervalTimer = window.setInterval(() => {\n                            if (this.#active === true) {\n                                this.#currentTime = Math.round(this.#manager.getRemainingTime());\n                                const timeEvent = addEvent('timeupdate');\n                                this.#element.dispatchEvent(timeEvent);\n                            }\n                        }, 350);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.SKIPPED:\n                if (ad.isLinear()) {\n                    if (event.type === google.ima.AdEvent.Type.SKIPPED) {\n                        const skipEvent = addEvent('adsskipped');\n                        this.#element.dispatchEvent(skipEvent);\n                    }\n\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.#active = false;\n                    clearInterval(this.#intervalTimer);\n                }\n                break;\n            case google.ima.AdEvent.Type.VOLUME_CHANGED:\n                this._setMediaVolume(this.volume);\n                break;\n            case google.ima.AdEvent.Type.VOLUME_MUTED:\n                if (ad.isLinear()) {\n                    const volumeEvent = addEvent('volumechange');\n                    this.#element.dispatchEvent(volumeEvent);\n                }\n                break;\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                if (ad.isLinear()) {\n                    this.#active = false;\n                    this.#ended = true;\n                    this.#intervalTimer = 0;\n                    this.#muted = false;\n                    this.#started = false;\n                    this.#adEvent = null;\n                    if (this.#element.parentElement) {\n                        this.#element.parentElement.classList.remove('op-ads--active');\n                    }\n                    this.destroy();\n                    if (this.#element.currentTime >= this.#element.duration) {\n                        const endedEvent = addEvent('ended');\n                        this.#element.dispatchEvent(endedEvent);\n                    }\n                }\n                break;\n            case google.ima.AdEvent.Type.CLICK:\n                const pauseEvent = addEvent('pause');\n                this.#element.dispatchEvent(pauseEvent);\n                break;\n            case google.ima.AdEvent.Type.AD_BREAK_READY:\n                if (!this.#options.autoPlayAdBreaks) {\n                    this.play();\n                }\n                break;\n            case google.ima.AdEvent.Type.AD_PROGRESS:\n                const progressData = event.getAdData();\n                const offset = this.#adEvent ? this.#adEvent.getSkipTimeOffset() : -1;\n                if (this.#skipElement) {\n                    if (offset !== -1) {\n                        const canSkip = this.#manager.getAdSkippableState();\n                        const remainingTime = Math.ceil(offset - progressData.currentTime);\n                        this.#skipElement.classList.remove('hidden');\n                        if (canSkip) {\n                            this.#skipElement.textContent = this.#options.audioSkip?.label || '';\n                            this.#skipElement.classList.remove('disabled');\n                        } else {\n                            this.#skipElement.textContent =\n                                this.#options.audioSkip?.remainingLabel.replace('[[secs]]', remainingTime.toString()) ||\n                                '';\n                            this.#skipElement.classList.add('disabled');\n                        }\n                    } else {\n                        this.#skipElement.classList.add('hidden');\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        // Assign events prefixed with `ads` to main element so user\n        // can listen to these events, except if the system detects a non-fatal error\n        if (event.type === google.ima.AdEvent.Type.LOG) {\n            const adData = event.getAdData();\n            if (adData.adError) {\n                const message = adData.adError.getMessage();\n                console.warn(`Ad warning: Non-fatal error occurred: ${message}`);\n                const details = {\n                    detail: {\n                        data: adData.adError,\n                        message,\n                        type: 'Ads',\n                    },\n                };\n                const errorEvent = addEvent('playererror', details);\n                this.#element.dispatchEvent(errorEvent);\n            }\n        } else {\n            const e = addEvent(`ads${event.type}`);\n            this.#element.dispatchEvent(e);\n        }\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdError.ErrorCode\n    private _error(event: any): void {\n        const error = event.getError();\n        const details = {\n            detail: {\n                data: error,\n                message: error.toString(),\n                type: 'Ads',\n            },\n        };\n        const errorEvent = addEvent('playererror', details);\n        this.#element.dispatchEvent(errorEvent);\n\n        // @see https://support.google.com/admanager/answer/4442429?hl=en\n        const fatalErrorCodes = [\n            100, 101, 102, 300, 301, 302, 303, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 500, 501, 502, 503,\n            900, 901, 1005,\n        ];\n\n        if (Array.isArray(this.#ads) && this.#ads.length > 1 && this.#currentIndex < this.#ads.length - 1) {\n            this.#currentIndex++;\n            this.destroy();\n            this.#started = true;\n            this.#playTriggered = true;\n            this.load(true);\n            console.warn(`Ad warning: ${error.toString()}`);\n        } else {\n            // Unless there's a fatal error, do not destroy the Ads manager\n            if (fatalErrorCodes.indexOf(error.getErrorCode()) > -1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                console.error(`Ad error: ${error.toString()}`);\n            } else {\n                console.warn(`Ad warning: ${error.toString()}`);\n            }\n            this.#adEvent = null;\n            if (this.#autostart === true || this.#autostartMuted === true || this.#started === true) {\n                this.#active = false;\n                // Sometimes, due to pre-fetch issues, Ads could report an error, but the SDK is able to\n                // play Ads, so check if src was set to determine what action to take\n                this._resumeMedia();\n            }\n        }\n    }\n\n    private _loaded(managerLoadedEvent: any): void {\n        const adsRenderingSettings = new google.ima.AdsRenderingSettings();\n        adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = false;\n        adsRenderingSettings.enablePreloading = this.#options.enablePreloading;\n        // Get the ads manager.\n        this.#manager = managerLoadedEvent.getAdsManager(this.#element, adsRenderingSettings);\n        this._start(this.#manager);\n        this.loadPromise = new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    private _start(manager: any): void {\n        if (this.#customClickContainer && manager.isCustomClickTrackingUsed()) {\n            this.#customClickContainer.classList.add('op-ads__click-container--visible');\n        }\n        // Add listeners to the required events.\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n            this._onContentPauseRequested,\n            EVENT_OPTIONS\n        );\n        manager.addEventListener(\n            google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n            this._onContentResumeRequested,\n            EVENT_OPTIONS\n        );\n\n        this.#events = [\n            google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n            google.ima.AdEvent.Type.CLICK,\n            google.ima.AdEvent.Type.VIDEO_CLICKED,\n            google.ima.AdEvent.Type.VIDEO_ICON_CLICKED,\n            google.ima.AdEvent.Type.AD_PROGRESS,\n            google.ima.AdEvent.Type.AD_BUFFERING,\n            google.ima.AdEvent.Type.IMPRESSION,\n            google.ima.AdEvent.Type.DURATION_CHANGE,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.LINEAR_CHANGED,\n            google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n            google.ima.AdEvent.Type.AD_METADATA,\n            google.ima.AdEvent.Type.INTERACTION,\n            google.ima.AdEvent.Type.COMPLETE,\n            google.ima.AdEvent.Type.FIRST_QUARTILE,\n            google.ima.AdEvent.Type.LOADED,\n            google.ima.AdEvent.Type.MIDPOINT,\n            google.ima.AdEvent.Type.PAUSED,\n            google.ima.AdEvent.Type.RESUMED,\n            google.ima.AdEvent.Type.USER_CLOSE,\n            google.ima.AdEvent.Type.STARTED,\n            google.ima.AdEvent.Type.THIRD_QUARTILE,\n            google.ima.AdEvent.Type.SKIPPED,\n            google.ima.AdEvent.Type.VOLUME_CHANGED,\n            google.ima.AdEvent.Type.VOLUME_MUTED,\n            google.ima.AdEvent.Type.LOG,\n        ];\n\n        if (!this.#options.autoPlayAdBreaks) {\n            // Add it to the events array so it gets removed onDestroy\n            this.#events.push(google.ima.AdEvent.Type.AD_BREAK_READY);\n        }\n\n        const controls = this.#player.getControls();\n        const mouseEvents = controls ? controls.events.mouse : {};\n        Object.keys(mouseEvents).forEach((event: string) => {\n            if (this.#container) {\n                this.#container.addEventListener(event, mouseEvents[event], EVENT_OPTIONS);\n            }\n        });\n        this.#events.forEach((event) => {\n            manager.addEventListener(event, this._assign, EVENT_OPTIONS);\n        });\n\n        if (this.#autostart === true || this.#autostartMuted === true || this.#playTriggered === true) {\n            this.#playTriggered = false;\n            if (!this.#done) {\n                this._initNotDoneAds();\n                return;\n            }\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n            manager.start();\n            const e = addEvent('play');\n            this.#element.dispatchEvent(e);\n        } else if (this.#options.enablePreloading === true) {\n            manager.init(\n                this.#element.offsetWidth,\n                this.#element.offsetHeight,\n                this.#element.parentElement && this.#element.parentElement.getAttribute('data-fullscreen') === 'true'\n                    ? google.ima.ViewMode.FULLSCREEN\n                    : google.ima.ViewMode.NORMAL\n            );\n        }\n    }\n\n    private _initNotDoneAds(): void {\n        if (this.#displayContainer) {\n            this.#done = true;\n            this.#displayContainer.initialize();\n\n            if (IS_IOS || IS_ANDROID) {\n                this.#preloadContent = this._contentLoadedAction;\n                this.#element.addEventListener('loadedmetadata', this._contentLoadedAction, EVENT_OPTIONS);\n                this.#element.load();\n            } else {\n                this._contentLoadedAction();\n            }\n        } else {\n            this.load();\n            this.loadedAd = false;\n        }\n    }\n\n    private _contentEndedListener(): void {\n        this.#ended = true;\n        this.#active = false;\n        this.#started = false;\n        this.#loader.contentComplete();\n    }\n\n    private _onContentPauseRequested(): void {\n        this.#element.removeEventListener('ended', this._contentEndedListener);\n        this.#lastTimePaused = this.#media.currentTime;\n\n        if (this.#started) {\n            this.#media.pause();\n        } else {\n            this.#started = true;\n        }\n        const e = addEvent('play');\n        this.#element.dispatchEvent(e);\n    }\n\n    private _onContentResumeRequested(): void {\n        this.#element.addEventListener('ended', this._contentEndedListener, EVENT_OPTIONS);\n        this.#element.addEventListener('loadedmetadata', this._loadedMetadataHandler, EVENT_OPTIONS);\n        if (IS_IOS || IS_ANDROID) {\n            this.#media.src = this.#mediaSources;\n            this.#media.load();\n            this._prepareMedia();\n            if (this.#element.parentElement) {\n                this.#element.parentElement.classList.add('op-ads--active');\n            }\n        } else {\n            const event = addEvent('loadedmetadata');\n            this.#element.dispatchEvent(event);\n        }\n    }\n\n    private _loadedMetadataHandler(): void {\n        if (Array.isArray(this.#ads)) {\n            this.#currentIndex++;\n            if (this.#currentIndex <= this.#ads.length - 1) {\n                if (this.#manager) {\n                    this.#manager.destroy();\n                }\n                this.#loader.contentComplete();\n                this.#playTriggered = true;\n                this.#started = true;\n                this.#done = false;\n                this.load(true);\n            } else {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else if (this.#element.seekable.length) {\n            if (this.#element.seekable.end(0) > this.#lastTimePaused) {\n                if (!this.#options.autoPlayAdBreaks) {\n                    this._resetAdsAfterManualBreak();\n                }\n                this._prepareMedia();\n            }\n        } else {\n            setTimeout(this._loadedMetadataHandler, 100);\n        }\n    }\n\n    private _resumeMedia(): void {\n        this.#intervalTimer = 0;\n        this.#muted = false;\n        this.#started = false;\n        this.#duration = 0;\n        this.#currentTime = 0;\n        if (this.#element.parentElement) {\n            this.#element.parentElement.classList.remove('op-ads--active');\n        }\n\n        if (this.#media.ended) {\n            const e = addEvent('ended');\n            this.#element.dispatchEvent(e);\n        } else {\n            try {\n                this.#media.play();\n                setTimeout(() => {\n                    const e = addEvent('play');\n                    this.#element.dispatchEvent(e);\n                }, 50);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    }\n\n    private _requestAds(): void {\n        this.#request = new google.ima.AdsRequest();\n        const ads = Array.isArray(this.#ads) ? this.#ads[this.#currentIndex] : this.#ads;\n\n        if (isXml(ads)) {\n            this.#request.adsResponse = ads;\n        } else {\n            this.#request.adTagUrl = ads;\n        }\n\n        const width = this.#element.parentElement ? this.#element.parentElement.offsetWidth : 0;\n        const height = this.#element.parentElement ? this.#element.parentElement.offsetHeight : 0;\n        this.#request.linearAdSlotWidth = width;\n        this.#request.linearAdSlotHeight = height;\n        this.#request.nonLinearAdSlotWidth = width;\n        this.#request.nonLinearAdSlotHeight = height / 3;\n        this.#request.setAdWillAutoPlay(this.#autostart);\n        this.#request.setAdWillPlayMuted(this.#autostartMuted);\n        this.#loader.requestAds(this.#request);\n    }\n\n    /**\n     * Internal callback to request Ads.\n     *\n     * @memberof Ads\n     */\n    private _contentLoadedAction(): void {\n        if (this.#preloadContent) {\n            this.#element.removeEventListener('loadedmetadata', this.#preloadContent);\n            this.#preloadContent = null;\n        }\n        this._requestAds();\n    }\n\n    // @see https://developers.google.com/interactive-media-ads/docs/sdks/html5/faq#8\n    private _resetAdsAfterManualBreak(): void {\n        if (this.#manager) {\n            this.#manager.destroy();\n        }\n        this.#loader.contentComplete();\n        this.#done = false;\n        this.#playTriggered = true;\n    }\n\n    private _prepareMedia(): void {\n        this.#media.currentTime = this.#lastTimePaused;\n        this.#element.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n        this._resumeMedia();\n    }\n\n    private _setMediaVolume(volume: number): void {\n        this.#media.volume = volume;\n        this.#media.muted = volume === 0;\n    }\n\n    private _handleClickInContainer(): void {\n        if (this.#media.paused) {\n            const e = addEvent('paused');\n            this.#element.dispatchEvent(e);\n            this.pause();\n        }\n    }\n\n    private _handleResizeAds(): void {\n        this.resizeAds();\n    }\n\n    private _handleSkipAds(): void {\n        this.#manager.skip();\n    }\n}\n\nexport default Ads;\n","import Controls from './controls';\nimport Fullscreen from './controls/fullscreen';\nimport {\n    CustomMedia,\n    ElementItem,\n    EventsList,\n    Languages,\n    PlayerLabels,\n    PlayerOptions,\n    Source,\n    Track,\n} from './interfaces';\nimport Media from './media';\nimport Ads from './media/ads';\nimport { EVENT_OPTIONS, IS_ANDROID, IS_IOS, IS_IPHONE } from './utils/constants';\nimport { addEvent, isAudio, isVideo, sanitize } from './utils/general';\nimport { isAutoplaySupported, predictMimeType } from './utils/media';\n\ninterface P {\n    loader: HTMLSpanElement;\n    playBtn: HTMLButtonElement;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any;\n    init(): Promise<void>;\n    load(): Promise<void> | void;\n    play(): Promise<void>;\n    pause(): void;\n    destroy(): void;\n    getContainer(): HTMLElement;\n    getControls(): Controls;\n    getCustomControls(): ElementItem[];\n    getElement(): HTMLMediaElement;\n    getEvents(): EventsList;\n    getOptions(): PlayerOptions;\n    activeElement(): Ads | Media;\n    isMedia(): boolean;\n    isAd(): boolean;\n    getMedia(): Media;\n    getAd(): Ads;\n    addCaptions(args: Track): void;\n    addControl(args: ElementItem): void;\n    removeControl(controlName: string): void;\n    _prepareMedia(): Promise<void>;\n    enableDefaultPlayer(): void;\n    loadAd(src: string | string[]): Promise<void>;\n}\n\nclass Player {\n    static instances: { [id: string]: P } = {};\n\n    static customMedia: CustomMedia = {\n        media: {},\n        optionsKey: {},\n        rules: [],\n    };\n\n    static init(): void {\n        Player.instances = {};\n        const targets = document.querySelectorAll('video.op-player, audio.op-player');\n        for (let i = 0, total = targets.length; i < total; i++) {\n            const target = targets[i] as HTMLMediaElement;\n            const settings = target.getAttribute('data-op-settings');\n            const options = settings ? JSON.parse(settings) : {};\n            const player = new Player(target, options);\n            player.init();\n        }\n    }\n\n    static addMedia(name: string, mimeType: string, valid: (url: string) => string, media: Source): void {\n        Player.customMedia.media[mimeType] = media;\n        Player.customMedia.optionsKey[mimeType] = name;\n        Player.customMedia.rules.push(valid);\n    }\n\n    loader: HTMLSpanElement;\n\n    playBtn: HTMLButtonElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    proxy: any = null;\n\n    #controls: Controls;\n\n    #adsInstance: Ads;\n\n    #uid = '';\n\n    #element: HTMLMediaElement;\n\n    #ads?: string | string[];\n\n    #media: Media;\n\n    #events: EventsList = {};\n\n    #autoplay = false;\n\n    #volume: number;\n\n    #canAutoplay = false;\n\n    #canAutoplayMuted = false;\n\n    #processedAutoplay = false;\n\n    #options: PlayerOptions;\n\n    #customElements: ElementItem[] = [];\n\n    #fullscreen: Fullscreen;\n\n    #defaultOptions: PlayerOptions = {\n        controls: {\n            alwaysVisible: false,\n            layers: {\n                left: ['play', 'time', 'volume'],\n                middle: ['progress'],\n                right: ['captions', 'settings', 'fullscreen'],\n            },\n        },\n        defaultLevel: undefined,\n        detachMenus: false,\n        forceNative: false,\n        height: 0,\n        hidePlayBtnTimer: 350,\n        labels: {\n            auto: 'Auto',\n            captions: 'CC/Subtitles',\n            click: 'Click to unmute',\n            fullscreen: 'Fullscreen',\n            lang: {\n                en: 'English',\n            },\n            levels: 'Quality Levels',\n            live: 'Live Broadcast',\n            mediaLevels: 'Change Quality',\n            mute: 'Mute',\n            off: 'Off',\n            pause: 'Pause',\n            play: 'Play',\n            progressRail: 'Time Rail',\n            progressSlider: 'Time Slider',\n            settings: 'Player Settings',\n            speed: 'Speed',\n            speedNormal: 'Normal',\n            tap: 'Tap to unmute',\n            toggleCaptions: 'Toggle Captions',\n            unmute: 'Unmute',\n            volume: 'Volume',\n            volumeControl: 'Volume Control',\n            volumeSlider: 'Volume Slider',\n        },\n        live: {\n            showLabel: true,\n            showProgress: false,\n        },\n        media: {\n            pauseOnClick: false,\n        },\n        mode: 'responsive', // or `fill` or `fit`\n        onError: (e: unknown) => console.error(e),\n        pauseOthers: true,\n        progress: {\n            allowRewind: true,\n            allowSkip: true,\n            duration: 0,\n            showCurrentTimeOnly: false,\n        },\n        showLoaderOnInit: false,\n        startTime: 0,\n        startVolume: 1,\n        step: 0,\n        useDeviceVolume: true,\n        width: 0,\n    };\n\n    constructor(element: HTMLMediaElement | string, options?: PlayerOptions) {\n        this.#element =\n            element instanceof HTMLMediaElement ? element : (document.getElementById(element) as HTMLMediaElement);\n        if (this.#element) {\n            this.#autoplay = this.#element.autoplay || false;\n            if (typeof options !== 'string' && !Array.isArray(options)) {\n                this._mergeOptions(options);\n            }\n            this.#element.volume = this.#options.startVolume || 1;\n\n            if (this.#options.ads && this.#options.ads.src) {\n                this.#ads = this.#options.ads.src;\n            }\n            if ((this.#options?.startTime || 0) > 0) {\n                this.#element.currentTime = this.#options.startTime || 0;\n            }\n            this.#volume = this.#element.volume;\n        }\n        this._autoplay = this._autoplay.bind(this);\n        this._enableKeyBindings = this._enableKeyBindings.bind(this);\n    }\n\n    async init(): Promise<void> {\n        if (this._isValid()) {\n            this._wrapInstance();\n            await this._prepareMedia();\n            this._createPlayButton();\n            this._createUID();\n            this._createControls();\n            this._setEvents();\n            Player.instances[this.id] = this;\n        }\n    }\n\n    async load(): Promise<void> {\n        if (!this.#media) {\n            await this._prepareMedia();\n            return (this.#media as Media).load();\n        }\n        this.#media.loaded = false;\n        return this.isMedia() ? this.#media.load() : undefined;\n    }\n\n    async play(): Promise<void> {\n        if (!this.#media.loaded) {\n            await this.#media.load();\n            this.#media.loaded = true;\n        }\n        if (this.#adsInstance) {\n            this.#adsInstance.playRequested = true;\n            await this.#adsInstance.loadPromise;\n            return this.#adsInstance.play();\n        }\n        return this.#media.play();\n    }\n\n    pause(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n        } else {\n            this.#media.pause();\n        }\n    }\n\n    stop(): void {\n        this.pause();\n\n        if (this.#media) {\n            this.#media.currentTime = 0;\n            this.src = [{ src: '', type: 'video/mp4' }];\n        }\n    }\n\n    destroy(): void {\n        if (this.#adsInstance) {\n            this.#adsInstance.pause();\n            this.#adsInstance.destroy();\n        }\n\n        if (this.#fullscreen) {\n            this.#fullscreen.destroy();\n        }\n\n        const el = this.#element as HTMLMediaElement;\n        if (this.#media) {\n            this.#media.destroy();\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            el.removeEventListener(event, this.#events[event]);\n        });\n\n        this.getContainer().removeEventListener('keydown', this._enableKeyBindings);\n\n        if (this.#autoplay && !this.#processedAutoplay && isVideo(this.#element)) {\n            el.removeEventListener('canplay', this._autoplay);\n        }\n        if (this.#controls) {\n            this.#controls.destroy();\n        }\n\n        if (isVideo(this.#element)) {\n            if (this.playBtn) {\n                this.playBtn.remove();\n            }\n            if (this.loader) {\n                this.loader.remove();\n            }\n        }\n\n        if (this.#options?.onError) {\n            this.#element.removeEventListener('playererror', this.#options.onError);\n        }\n\n        el.controls = true;\n        el.setAttribute('id', this.#uid);\n        el.removeAttribute('op-live__enabled');\n        el.removeAttribute('op-dvr__enabled');\n        const parent =\n            this.#options.mode === 'fit' && !isAudio(el) ? el.closest('.op-player__fit--wrapper') : el.parentElement;\n        if (parent && parent.parentNode) {\n            parent.parentNode.replaceChild(el, parent);\n        }\n\n        delete Player.instances[this.#uid];\n\n        const e = addEvent('playerdestroyed');\n        el.dispatchEvent(e);\n    }\n\n    getContainer(): HTMLElement {\n        return this.#element.parentElement || this.#element;\n    }\n\n    getControls(): Controls {\n        return this.#controls;\n    }\n\n    getCustomControls(): ElementItem[] {\n        return this.#customElements;\n    }\n\n    getElement(): HTMLMediaElement {\n        return this.#element;\n    }\n\n    getEvents(): EventsList {\n        return this.#events;\n    }\n\n    getOptions(): PlayerOptions {\n        return this.#options;\n    }\n\n    activeElement(): Ads | Media {\n        return this.#adsInstance && this.#adsInstance.started() ? this.#adsInstance : this.#media;\n    }\n\n    isMedia(): boolean {\n        return this.activeElement() instanceof Media;\n    }\n\n    isAd(): boolean {\n        return this.activeElement() instanceof Ads;\n    }\n\n    getMedia(): Media {\n        return this.#media;\n    }\n\n    getAd(): Ads {\n        return this.#adsInstance;\n    }\n\n    addCaptions(args: Track): void {\n        if (args.default) {\n            const tracks = this.#element.querySelectorAll('track');\n            for (let i = 0, total = tracks.length; i < total; i++) {\n                (tracks[i] as HTMLTrackElement).default = false;\n            }\n        }\n\n        const el = this.#element;\n\n        // If captions have been added previously, just update URL and default status\n        let track = el.querySelector(`track[srclang=\"${args.srclang}\"][kind=\"${args.kind}\"]`) as HTMLTrackElement;\n        if (track) {\n            track.src = args.src;\n            track.label = args.label;\n            track.default = args.default || false;\n        } else {\n            track = document.createElement('track');\n            track.srclang = args.srclang;\n            track.src = args.src;\n            track.kind = args.kind;\n            track.label = args.label;\n            track.default = args.default || false;\n            el.appendChild(track);\n        }\n\n        const e = addEvent('controlschanged');\n        el.dispatchEvent(e);\n    }\n\n    addControl(args: ElementItem): void {\n        args.custom = true;\n        args.type = 'button';\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    addElement(args: ElementItem): void {\n        args.custom = true;\n        this.#customElements.push(args);\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    removeControl(controlName: string): void {\n        // Check custom controls and remove reference there as well\n        this.#customElements.forEach((item: ElementItem, idx: number) => {\n            if (item.id === controlName) {\n                this.#customElements.splice(idx, 1);\n            }\n        });\n        const e = addEvent('controlschanged');\n        this.#element.dispatchEvent(e);\n    }\n\n    async _prepareMedia(): Promise<void> {\n        try {\n            if (this.#options?.onError) {\n                this.#element.addEventListener('playererror', this.#options.onError, EVENT_OPTIONS);\n            }\n            if (this.#autoplay && isVideo(this.#element)) {\n                this.#element.addEventListener('canplay', this._autoplay, EVENT_OPTIONS);\n            }\n            this.#media = new Media(this.#element, this.#options, this.#autoplay, Player.customMedia);\n            const preload = this.#element.getAttribute('preload');\n            if (this.#ads || !preload || preload !== 'none') {\n                await this.#media.load();\n                this.#media.loaded = true;\n            }\n\n            if (!this.#autoplay && this.#ads) {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                this.#adsInstance = new Ads(this, this.#ads, false, false, adsOptions);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    enableDefaultPlayer(): void {\n        let paused = true;\n        let currentTime = 0;\n\n        if (this.proxy && !this.proxy.paused) {\n            paused = false;\n            currentTime = this.proxy.currentTime;\n            this.proxy.pause();\n        }\n\n        this.proxy = this;\n        this.getElement().addEventListener('loadedmetadata', (): void => {\n            this.getMedia().currentTime = currentTime;\n            if (!paused) {\n                this.play();\n            }\n        });\n    }\n\n    async loadAd(src: string | string[]): Promise<void> {\n        try {\n            if (this.isAd()) {\n                this.getAd().destroy();\n                this.getAd().src = src;\n                this.getAd().loadedAd = false;\n                this.getAd().load();\n            } else {\n                const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                const autoplay = !this.activeElement().paused || this.#canAutoplay;\n                this.#adsInstance = new Ads(this, src, autoplay, this.#canAutoplayMuted, adsOptions);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    set src(media) {\n        if (this.#media instanceof Media) {\n            this.#media.mediaFiles = [];\n            this.#media.src = media;\n        } else if (typeof media === 'string') {\n            this.#element.src = media;\n        } else if (Array.isArray(media)) {\n            media.forEach((m) => {\n                const source = document.createElement('source');\n                source.src = m.src;\n                source.type = m.type || predictMimeType(m.src, this.#element);\n                this.#element.appendChild(source);\n            });\n        } else if (typeof media === 'object') {\n            this.#element.src = (media as Source).src;\n        }\n    }\n\n    get src(): Source[] {\n        return this.#media.src;\n    }\n\n    get id(): string {\n        return this.#uid;\n    }\n\n    private _isValid(): boolean {\n        const el = this.#element;\n\n        if (el instanceof HTMLElement === false) {\n            return false;\n        }\n\n        if (!isAudio(el) && !isVideo(el)) {\n            return false;\n        }\n\n        if (!el.classList.contains('op-player__media')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private _wrapInstance(): void {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'op-player op-player__keyboard--inactive';\n        wrapper.className += isAudio(this.#element) ? ' op-player__audio' : ' op-player__video';\n        wrapper.tabIndex = 0;\n\n        this.#element.classList.remove('op-player');\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(wrapper, this.#element);\n        }\n        wrapper.appendChild(this.#element);\n\n        const messageContainer = document.createElement('div');\n        messageContainer.className = 'op-status';\n        messageContainer.innerHTML = '<span></span>';\n        messageContainer.tabIndex = -1;\n        messageContainer.setAttribute('aria-hidden', 'true');\n\n        if (isVideo(this.#element) && this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(messageContainer, this.#element);\n        }\n\n        wrapper.addEventListener(\n            'keydown',\n            (): void => {\n                if (wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.remove('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        wrapper.addEventListener(\n            'click',\n            (): void => {\n                if (!wrapper.classList.contains('op-player__keyboard--inactive')) {\n                    wrapper.classList.add('op-player__keyboard--inactive');\n                }\n            },\n            EVENT_OPTIONS\n        );\n\n        if (this.#options.mode === 'fill' && !isAudio(this.#element) && !IS_IPHONE) {\n            // Create fill effect on video, scaling and cropping dimensions relative to its parent, setting just a class.\n            // This method centers the video view using pure CSS in both Ads and Media.\n            // @see https://slicejack.com/fullscreen-html5-video-background-css/\n            this.getContainer().classList.add('op-player__full');\n        } else if (this.#options.mode === 'fit' && !isAudio(this.#element)) {\n            const container = this.getContainer();\n            if (container.parentElement) {\n                const fitWrapper = document.createElement('div');\n                fitWrapper.className = 'op-player__fit--wrapper';\n                fitWrapper.tabIndex = 0;\n                container.parentElement.insertBefore(fitWrapper, container);\n                fitWrapper.appendChild(container);\n                container.classList.add('op-player__fit');\n            }\n        } else {\n            let style = '';\n            if (this.#options.width) {\n                const width =\n                    typeof this.#options.width === 'number' ? `${this.#options.width}px` : this.#options.width;\n                style += `width: ${width} !important;`;\n            }\n            if (this.#options.height) {\n                const height =\n                    typeof this.#options.height === 'number' ? `${this.#options.height}px` : this.#options.height;\n                style += `height: ${height} !important;`;\n            }\n\n            if (style) {\n                wrapper.setAttribute('style', style);\n            }\n        }\n    }\n\n    private _createControls(): void {\n        if (IS_IPHONE && isVideo(this.#element)) {\n            this.getContainer().classList.add('op-player__ios--iphone');\n        }\n        this.#controls = new Controls(this);\n        this.#controls.create();\n    }\n\n    private _createUID(): void {\n        if (this.#element.id) {\n            this.#uid = this.#element.id;\n            this.#element.removeAttribute('id');\n        } else {\n            this.#uid = `op_${crypto.getRandomValues(new Uint32Array(1))[0].toString(36).substring(2, 9)}`;\n        }\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.id = this.#uid;\n        }\n    }\n\n    private _createPlayButton(): void {\n        if (isAudio(this.#element)) {\n            return;\n        }\n\n        this.playBtn = document.createElement('button');\n        this.playBtn.className = 'op-player__play';\n        this.playBtn.tabIndex = 0;\n        this.playBtn.title = this.#options.labels?.play || '';\n        this.playBtn.innerHTML = `<span>${this.#options.labels?.play || ''}</span>`;\n        this.playBtn.setAttribute('aria-pressed', 'false');\n        this.playBtn.setAttribute('aria-hidden', 'false');\n\n        this.loader = document.createElement('span');\n        this.loader.className = 'op-player__loader';\n        this.loader.tabIndex = -1;\n        this.loader.setAttribute('aria-hidden', 'true');\n\n        if (this.#element.parentElement) {\n            this.#element.parentElement.insertBefore(this.loader, this.#element);\n            this.#element.parentElement.insertBefore(this.playBtn, this.#element);\n        }\n\n        this.playBtn.addEventListener(\n            'click',\n            (): void => {\n                if (this.#adsInstance) {\n                    this.#adsInstance.playRequested = this.activeElement().paused;\n                }\n                if (this.activeElement().paused) {\n                    this.activeElement().play();\n                } else {\n                    this.activeElement().pause();\n                }\n            },\n            EVENT_OPTIONS\n        );\n    }\n\n    private _setEvents(): void {\n        if (isVideo(this.#element)) {\n            this.#events.loadedmetadata = (): void => {\n                const el = this.activeElement();\n                if (this.#options.showLoaderOnInit && !IS_IOS && !IS_ANDROID) {\n                    this.loader.setAttribute('aria-hidden', 'false');\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    this.loader.setAttribute('aria-hidden', 'true');\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                }\n                if (el.paused) {\n                    this.playBtn.classList.remove('op-player__play--paused');\n                    this.playBtn.setAttribute('aria-pressed', 'false');\n                }\n            };\n            this.#events.waiting = (): void => {\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', 'false');\n            };\n            this.#events.seeking = (): void => {\n                const el = this.activeElement();\n                this.playBtn.setAttribute('aria-hidden', 'true');\n                this.loader.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n            };\n            this.#events.seeked = (): void => {\n                const el = this.activeElement();\n                if (Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', el instanceof Media ? 'false' : 'true');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.play = (): void => {\n                this.playBtn.classList.add('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.pause || '';\n                this.loader.setAttribute('aria-hidden', 'true');\n                if (this.#options.showLoaderOnInit) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                } else {\n                    setTimeout((): void => {\n                        this.playBtn.setAttribute('aria-hidden', 'true');\n                    }, this.#options.hidePlayBtnTimer);\n                }\n            };\n            this.#events.playing = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            this.#events.pause = (): void => {\n                const el = this.activeElement();\n                this.playBtn.classList.remove('op-player__play--paused');\n                this.playBtn.title = this.#options.labels?.play || '';\n\n                if (this.#options.showLoaderOnInit && Math.round(el.currentTime) === 0) {\n                    this.playBtn.setAttribute('aria-hidden', 'true');\n                    this.loader.setAttribute('aria-hidden', 'false');\n                } else {\n                    this.playBtn.setAttribute('aria-hidden', 'false');\n                    this.loader.setAttribute('aria-hidden', 'true');\n                }\n            };\n            this.#events.ended = (): void => {\n                this.loader.setAttribute('aria-hidden', 'true');\n                this.playBtn.setAttribute('aria-hidden', 'true');\n            };\n            // This workflow is needed when media is on a loop and post roll needs to be played.\n            // This happens because, when in loop, media never sends the `ended` event back;\n            // so, when media reaches a quarter of a second left before the end, Ads would be dispatched\n            // @see https://github.com/googleads/videojs-ima/issues/890\n            let postRollCalled = false;\n            this.#events.timeupdate = (): void => {\n                if (this.#element.loop && this.isMedia() && this.#adsInstance) {\n                    const el = this.getMedia();\n                    const remainingTime = el.duration - el.currentTime;\n                    if (remainingTime > 0 && remainingTime <= 0.25 && !postRollCalled) {\n                        postRollCalled = true;\n                        const e = addEvent('ended');\n                        this.#element.dispatchEvent(e);\n                    } else if (remainingTime === 0) {\n                        postRollCalled = false;\n                    }\n                }\n            };\n        }\n\n        Object.keys(this.#events).forEach((event) => {\n            this.#element.addEventListener(event, this.#events[event], EVENT_OPTIONS);\n        });\n\n        this.getContainer().addEventListener('keydown', this._enableKeyBindings, EVENT_OPTIONS);\n    }\n\n    private _autoplay(): void {\n        if (!this.#processedAutoplay) {\n            this.#processedAutoplay = true;\n            this.#element.removeEventListener('canplay', this._autoplay);\n\n            isAutoplaySupported(\n                this.#element,\n                this.#volume,\n                (autoplay) => {\n                    this.#canAutoplay = autoplay;\n                },\n                (muted) => {\n                    this.#canAutoplayMuted = muted;\n                },\n                (): void => {\n                    if (this.#canAutoplayMuted) {\n                        this.activeElement().muted = true;\n                        this.activeElement().volume = 0;\n\n                        const e = addEvent('volumechange');\n                        this.#element.dispatchEvent(e);\n\n                        // Insert element to unmute if browser allows autoplay with muted media\n                        const volumeEl = document.createElement('div');\n                        const action = IS_IOS || IS_ANDROID ? this.#options.labels?.tap : this.#options.labels?.click;\n                        volumeEl.className = 'op-player__unmute';\n                        volumeEl.innerHTML = `<span>${action}</span>`;\n                        volumeEl.tabIndex = 0;\n\n                        volumeEl.addEventListener(\n                            'click',\n                            (): void => {\n                                this.activeElement().muted = false;\n                                this.activeElement().volume = this.#volume;\n\n                                const event = addEvent('volumechange');\n                                this.#element.dispatchEvent(event);\n\n                                volumeEl.remove();\n                            },\n                            EVENT_OPTIONS\n                        );\n\n                        const target = this.getContainer();\n                        target.insertBefore(volumeEl, target.firstChild);\n                    } else {\n                        this.activeElement().muted = this.#element.muted;\n                        this.activeElement().volume = this.#volume;\n                    }\n\n                    if (this.#ads) {\n                        const adsOptions = this.#options && this.#options.ads ? this.#options.ads : undefined;\n                        this.#adsInstance = new Ads(\n                            this,\n                            this.#ads,\n                            this.#canAutoplay,\n                            this.#canAutoplayMuted,\n                            adsOptions\n                        );\n                    } else if (this.#canAutoplay || this.#canAutoplayMuted) {\n                        this.play();\n                    }\n                }\n            );\n        }\n    }\n\n    private _mergeOptions(playerOptions?: PlayerOptions): void {\n        const opts = { ...(playerOptions || {}) };\n        this.#options = { ...this.#defaultOptions, ...opts };\n        const complexOptions = Object.keys(this.#defaultOptions).filter(\n            (key) => key !== 'labels' && typeof this.#defaultOptions[key] === 'object'\n        );\n        complexOptions.forEach((key) => {\n            const currOption = (opts[key] as Record<string, unknown>) || {};\n            if (currOption && Object.keys(currOption).length) {\n                this.#options[key] = { ...(this.#defaultOptions[key] as Record<string, unknown>), ...currOption };\n            }\n        });\n        if (opts.labels) {\n            const keys = opts.labels ? Object.keys(opts.labels) : [];\n            let sanitizedLabels: PlayerLabels = {};\n\n            keys.forEach((key) => {\n                const current = opts.labels ? opts.labels[key as keyof PlayerLabels] : null;\n                if (current && typeof current === 'object' && key === 'lang') {\n                    Object.keys(current).forEach((k) => {\n                        const lang = current ? (current as Languages)[k] : null;\n                        if (lang) {\n                            sanitizedLabels = {\n                                ...sanitizedLabels,\n                                lang: { ...sanitizedLabels.lang, [k]: sanitize(lang as string) },\n                            };\n                        }\n                    });\n                } else if (current) {\n                    sanitizedLabels = { ...sanitizedLabels, [key]: sanitize(current as string) };\n                }\n            });\n\n            this.#options.labels = { ...this.#defaultOptions.labels, ...sanitizedLabels };\n        }\n    }\n\n    private _enableKeyBindings(e: KeyboardEvent): void {\n        const key = e.which || e.keyCode || 0;\n        const el = this.activeElement();\n        const isAd = this.isAd();\n        const playerFocused = document?.activeElement?.classList.contains('op-player');\n\n        switch (key) {\n            // Toggle play/pause using letter K, Tab or Enter\n            case 13:\n            case 32:\n            case 75:\n                // Avoid interference of Enter/Space keys when focused in the player container\n                if (playerFocused && (key === 13 || key === 32)) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                } else if (key === 75) {\n                    if (el.paused) {\n                        el.play();\n                    } else {\n                        el.pause();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // End key ends video\n            case 35:\n                if (!isAd && el.duration !== Infinity) {\n                    el.currentTime = el.duration;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Home key resets progress\n            case 36:\n                if (!isAd) {\n                    el.currentTime = 0;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the left and right arrow keys to manipulate current media time.\n            // Letter J/L will set double of step forward/backward\n            case 37:\n            case 39:\n            case 74:\n            case 76:\n                if (!isAd && el.duration !== Infinity) {\n                    let newStep = 5;\n                    const configStep = this.getOptions().step;\n                    if (configStep) {\n                        newStep = key === 74 || key === 76 ? configStep * 2 : configStep;\n                    } else if (key === 74 || key === 76) {\n                        newStep = 10;\n                    }\n                    const step = el.duration !== Infinity ? newStep : this.getOptions().progress?.duration || 0;\n                    el.currentTime += key === 37 || key === 74 ? step * -1 : step;\n                    if (el.currentTime < 0) {\n                        el.currentTime = 0;\n                    } else if (el.currentTime >= el.duration) {\n                        el.currentTime = el.duration;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            // Use the up/down arrow keys to manipulate volume.\n            case 38:\n            case 40:\n                const newVol = key === 38 ? Math.min(el.volume + 0.1, 1) : Math.max(el.volume - 0.1, 0);\n                el.volume = newVol;\n                el.muted = !(newVol > 0);\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // Letter F sets fullscreen (only video)\n            case 70:\n                if (isVideo(this.#element) && !e.ctrlKey) {\n                    this.#fullscreen = new Fullscreen(this, '', '');\n                    if (typeof this.#fullscreen.fullScreenEnabled !== 'undefined') {\n                        this.#fullscreen.toggleFullscreen();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n                break;\n            // Letter M toggles mute\n            case 77:\n                el.muted = !el.muted;\n                if (el.muted) {\n                    el.volume = 0;\n                } else {\n                    el.volume = this.#volume;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            // < and > will decrease/increase the speed of playback by 0.25\n            // , and . will go to the prev/next frame of the media\n            case 188:\n            case 190:\n                if (!isAd && e.shiftKey) {\n                    const elem = el as Media;\n                    elem.playbackRate =\n                        key === 188 ? Math.max(elem.playbackRate - 0.25, 0.25) : Math.min(elem.playbackRate + 0.25, 2);\n                    // Show playbackRate and update controls to reflect change in settings\n                    const target = this.getContainer().querySelector('.op-status>span');\n                    if (target) {\n                        target.textContent = `${elem.playbackRate}x`;\n                        if (target.parentElement) {\n                            target.parentElement.setAttribute('aria-hidden', 'false');\n                        }\n                        setTimeout((): void => {\n                            if (target.parentElement) {\n                                target.parentElement.setAttribute('aria-hidden', 'true');\n                            }\n                        }, 500);\n                    }\n                    const ev = addEvent('controlschanged');\n                    dispatchEvent(ev);\n                    e.preventDefault();\n                    e.stopPropagation();\n                } else if (!isAd && el.paused) {\n                    el.currentTime += (1 / 25) * (key === 188 ? -1 : 1);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default Player;\n\n// Expose element globally.\nif (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayer = Player;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).OpenPlayerJS = Player;\n    Player.init();\n}\n"],"names":["_player","_button","_captions","_menu","_events","_hasTracks","_currentTrack","_default","_controlPosition","_controlLayer","_isFullscreen","_fullscreenEvents","_levels","_progress","_forcePause","_submenu","_originalOutput","_currentTime","_container","_display","_slider","_volume","_settings","_timer","_controls","_items","_options","_recoverDecodingErrorDate","_autoplay","_element","_media","_files","_promisePlay","_mediaLoaded","_customMedia","_currentSrc","_ended","_done","_active","_started","_intervalTimer","_muted","_duration","_manager","_ads","_promise","_loader","_customClickContainer","_currentIndex","_adsInstance","_uid","_canAutoplay","_customElements","_fullscreen","_defaultOptions","NAV","UA","IS_IPHONE","IS_IOS","IS_ANDROID","IS_CHROME","IS_SAFARI","HAS_MSE","SUPPORTS_HLS","mediaSource","sourceBuffer","isTypeSupported","sourceBufferValidAPI","DVR_THRESHOLD","EVENT_OPTIONS","isVideo","element","isAudio","loadScript","url","resolve","reject","script","offset","el","rect","sanitize","html","plainText","formattedContent","scripts","i","total","clean","nodes","node","attributes","j","t","name","value","val","isXml","input","parsedXml","text","addEvent","event","details","detail","Captions","player","position","layer","__privateAdd","__privateSet","_a","labels","detachMenus","__privateGet","target","itemContainer","track","item","label","e","button","menus","menuItem","option","language","captions","caption","targetTrack","matchTrack","subitems","items","_b","options","cue","content","Fullscreen","_fullscreenWidth","_fullscreenHeight","_clickEvent","video","screen","width","height","isFullscreen","wrapper","styles","defaultWidth","defaultHeight","key","getExtension","baseName","isHlsSource","media","isDashSource","isFlvSource","predictMimeType","extension","isAutoplaySupported","defaultVol","autoplay","muted","callback","playPromise","Levels","_defaultLevel","startLevel","initialLevel","menuItems","defaultLevel","defaultLabel","levelSet","loadLevelsEvent","currentTime","isPaused","levelVal","level","levels","connection","type","acc","current","a","b","className","menu","Play","isAudioEl","Player","formatTime","seconds","frameRate","f","s","m","h","wrap","formattedVal","Progress","_buffer","_played","_tooltip","progress","setInitialProgress","lastCurrentTime","defaultDuration","duration","min","max","updateSlider","forcePause","releasePause","mobileForcePause","changedTouches","time","x","pos","half","percentage","mediaContainer","limit","isAd","step","Settings","timeout","id","rate","defaultValue","submenu","dataValue","submenuMatch","mainMenu","subItems","labelEl","fragments","menuTarget","prev","minItems","_c","_d","settingsBtnFocused","menuFocused","Time","_delimiter","showOnlyCurrent","controls","setInitialTime","showLiveLabel","showCurrentTimeOnly","Volume","mediaVolume","vol","updateButton","updateVolume","unmuteEl","Controls","_controlEls","isMediaVideo","alwaysVisible","showControls","messageContainer","isVideoEl","controlPositions","layersExist","controlLayer","layers","v","currentLayer","allowDefault","itemIcon","subitem","control","Native","_customPlayer","customPlayer","DashMedia","mimeType","bitrates","errorEvent","FlvMedia","args","configs","rest","data","errorDetails","HlsMedia","_recoverSwapAudioCodecDate","formattedLevel","fatal","now","mediaEvent","networkEvent","fatalEvent","err","timeEvent","metaEvent","HTML5Media","mediaFile","_currentLevel","_levelList","_isStreaming","_retryCount","idx","source","metaDataEvent","message","__privateWrapper","defaultMessage","error","Media","customMedia","source.predictMimeType","file","sources","loaded","mediaFiles","sourceTags","nodeSource","src","playHLSNatively","activeLevels","customRef","rule","customOptions","source.isHlsSource","hlsOptions","source.isDashSource","dashOptions","source.isFlvSource","flvOptions","Ads","ads","autostart","autostartMuted","_skipElement","_displayContainer","_request","_autostart","_autostartMuted","_playTriggered","_originalVolume","_preloadContent","_lastTimePaused","_mediaSources","_mediaStarted","_adEvent","defaultOpts","path","force","existingContainer","vpaidModeMap","mouseEvents","destroy","mode","formattedWidth","percentageWidth","formattedHeight","percentageHeight","ad","waitingEvent","loadedEvent","playEvent","resized","endEvent","skipEvent","volumeEvent","endedEvent","pauseEvent","progressData","canSkip","remainingTime","adData","fatalErrorCodes","managerLoadedEvent","adsRenderingSettings","manager","volume","_Player","_canAutoplayMuted","_processedAutoplay","targets","settings","valid","parent","tracks","controlName","preload","adsOptions","paused","container","fitWrapper","style","postRollCalled","volumeEl","action","playerOptions","opts","currOption","keys","sanitizedLabels","k","lang","playerFocused","newStep","configStep","newVol","elem","ev","Player$1"],"mappings":"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"}